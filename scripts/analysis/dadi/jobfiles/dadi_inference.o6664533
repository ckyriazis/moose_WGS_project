starting inference for MN-IR for model 2D.5epoch.fixedN1N3.nomig
carrying out inference 1 for model 2D.5epoch.fixedN1N3.nomig for pop MN-IR
Beginning optimization ************************************************
4       , -348659     , array([ 0.0198608  ,  0.0869544  ,  0.00513837 ,  12.3484    ])
8       , -228060     , array([ 0.0438098  ,  0.0466227  ,  0.0047583  ,  12.3566    ])
12      , -228058     , array([ 0.0438098  ,  0.0466227  ,  0.0047583  ,  12.369     ])
16      , -295308     , array([ 0.0935757  ,  0.040317   ,  0.0972306  ,  13.2559    ])
20      , -222081     , array([ 0.052123   ,  0.0450868  ,  0.00949401 ,  12.557     ])
24      , -222080     , array([ 0.052123   ,  0.0450868  ,  0.00949401 ,  12.5695    ])
32      , -222081     , array([ 0.0521241  ,  0.045088   ,  0.009494   ,  12.557     ])
36      , -222080     , array([ 0.0521241  ,  0.045088   ,  0.009494   ,  12.5696    ])
40      , -222047     , array([ 0.0521252  ,  0.0451343  ,  0.00949399 ,  12.5571    ])
44      , -215901     , array([ 0.0873195  ,  0.0854417  ,  0.00929093 ,  14.0284    ])
48      , -215900     , array([ 0.0873195  ,  0.0854417  ,  0.00929093 ,  14.0424    ])
52      , -215868     , array([ 0.08732    ,  0.0855278  ,  0.00929093 ,  14.0284    ])
56      , -215900     , array([ 0.0873252  ,  0.0854486  ,  0.0092909  ,  14.0286    ])
60      , -215899     , array([ 0.0873252  ,  0.0854486  ,  0.0092909  ,  14.0426    ])
68      , -215900     , array([ 0.0873253  ,  0.0854487  ,  0.0092909  ,  14.0286    ])
72      , -215899     , array([ 0.0873253  ,  0.0854487  ,  0.0092909  ,  14.0426    ])
76      , -215868     , array([ 0.0873266  ,  0.0855358  ,  0.0092909  ,  14.0286    ])
88      , -215868     , array([ 0.0873266  ,  0.0855358  ,  0.0092909  ,  14.0286    ])
92      , -215900     , array([ 0.087327   ,  0.0854507  ,  0.00929089 ,  14.0286    ])
96      , -215899     , array([ 0.087327   ,  0.0854507  ,  0.00929089 ,  14.0427    ])
100     , -215108     , array([ 0.093143   ,  0.0926493  ,  0.00926582 ,  14.2242    ])
104     , -214645     , array([ 0.0971922  ,  0.0975674  ,  0.00924932 ,  14.3548    ])
108     , -214644     , array([ 0.0971922  ,  0.0975674  ,  0.00924932 ,  14.3692    ])
112     , -214446     , array([ 0.0986087  ,  0.0994315  ,  0.00924371 ,  14.3995    ])
116     , -214421     , array([ 0.0990949  ,  0.0999393  ,  0.0092418  ,  14.4147    ])
120     , -214420     , array([ 0.0990949  ,  0.0999393  ,  0.0092418  ,  14.4291    ])
124     , -214446     , array([ 0.0986087  ,  0.0994315  ,  0.00924371 ,  14.3995    ])
128     , -214440     , array([ 0.0989326  ,  0.0997365  ,  0.00924244 ,  14.4096    ])
132     , -214439     , array([ 0.0989326  ,  0.0997365  ,  0.00924244 ,  14.424     ])
136     , -214396     , array([ 0.0990408  ,  0.0999716  ,  0.00924202 ,  14.413     ])
140     , -214423     , array([ 0.0990769  ,  0.0999168  ,  0.00924187 ,  14.4141    ])
144     , -214422     , array([ 0.0990769  ,  0.0999168  ,  0.00924187 ,  14.4286    ])
152     , -214421     , array([ 0.0990941  ,  0.0999383  ,  0.00924181 ,  14.4147    ])
156     , -214420     , array([ 0.0990941  ,  0.0999383  ,  0.00924181 ,  14.4291    ])
164     , -214421     , array([ 0.0990949  ,  0.0999393  ,  0.0092418  ,  14.4147    ])
168     , -214420     , array([ 0.0990949  ,  0.0999393  ,  0.0092418  ,  14.4291    ])
176     , -214421     , array([ 0.0990949  ,  0.0999393  ,  0.0092418  ,  14.4147    ])
180     , -214420     , array([ 0.0990949  ,  0.0999393  ,  0.0092418  ,  14.4291    ])
188     , -214421     , array([ 0.0990949  ,  0.0999393  ,  0.0092418  ,  14.4147    ])
192     , -214420     , array([ 0.0990949  ,  0.0999393  ,  0.0092418  ,  14.4291    ])
200     , -214421     , array([ 0.0990949  ,  0.0999393  ,  0.0092418  ,  14.4147    ])
204     , -214420     , array([ 0.0990949  ,  0.0999393  ,  0.0092418  ,  14.4291    ])
212     , -214421     , array([ 0.0990949  ,  0.0999393  ,  0.0092418  ,  14.4147    ])
216     , -214420     , array([ 0.0990949  ,  0.0999393  ,  0.0092418  ,  14.4291    ])
224     , -214421     , array([ 0.0990949  ,  0.0999393  ,  0.0092418  ,  14.4147    ])
228     , -214420     , array([ 0.0990949  ,  0.0999393  ,  0.0092418  ,  14.4291    ])
236     , -214421     , array([ 0.0990949  ,  0.0999393  ,  0.0092418  ,  14.4147    ])
240     , -214420     , array([ 0.0990949  ,  0.0999393  ,  0.0092418  ,  14.4291    ])
248     , -214421     , array([ 0.0990949  ,  0.0999393  ,  0.0092418  ,  14.4147    ])
252     , -214420     , array([ 0.0990949  ,  0.0999393  ,  0.0092418  ,  14.4291    ])
260     , -215901     , array([ 0.0873177  ,  0.0854395  ,  0.00929094 ,  14.0283    ])
264     , -215919     , array([ 0.0873177  ,  0.0854395  ,  0.00930023 ,  14.0283    ])
268     , -215141     , array([ 0.0931347  ,  0.0925465  ,  0.00926586 ,  14.2239    ])
272     , -215159     , array([ 0.0931347  ,  0.0925465  ,  0.00927513 ,  14.2239    ])
276     , -214794     , array([ 0.0962832  ,  0.0963187  ,  0.00925335 ,  14.3228    ])
280     , -214578     , array([ 0.0977504  ,  0.098262   ,  0.0092471  ,  14.3725    ])
284     , -214597     , array([ 0.0977504  ,  0.098262   ,  0.00925635 ,  14.3725    ])
288     , -214513     , array([ 0.0986402  ,  0.0992484  ,  0.00924397 ,  14.3974    ])
292     , -214439     , array([ 0.0989396  ,  0.0997452  ,  0.00924241 ,  14.4098    ])
296     , -214457     , array([ 0.0989396  ,  0.0997452  ,  0.00925166 ,  14.4098    ])
300     , -214444     , array([ 0.0992384  ,  0.0999946  ,  0.00924163 ,  14.4161    ])
304     , -214429     , array([ 0.0990259  ,  0.099853   ,  0.00924207 ,  14.4125    ])
Finshed optimization **************************************************
Writing out parameters **************************************************
Writing out SFS **************************************************
Making plots **************************************************
carrying out inference 2 for model 2D.5epoch.fixedN1N3.nomig for pop MN-IR
Beginning optimization ************************************************
4       , -850146     , array([ 0.00585285 ,  0.0570002  ,  0.0113927  ,  10.6986    ])
8       , -344521     , array([ 0.0133549  ,  0.051925   ,  0.0064032  ,  10.6399    ])
12      , -344521     , array([ 0.0133549  ,  0.051925   ,  0.0064032  ,  10.6505    ])
16      , -956650     , array([ 0.362015   ,  0.0357941  ,  0.000641524,  10.4081    ])
20      , -245943     , array([ 0.0333304  ,  0.0468248  ,  0.00338422 ,  10.5752    ])
24      , -245940     , array([ 0.0333304  ,  0.0468248  ,  0.00338422 ,  10.5857    ])
32      , -243637     , array([ 0.0341473  ,  0.0477791  ,  0.00344877 ,  10.5854    ])
36      , -243634     , array([ 0.0341473  ,  0.0477791  ,  0.00344877 ,  10.596     ])
40      , -239094     , array([ 0.0350239  ,  0.0527912  ,  0.00343722 ,  10.6293    ])
44      , -226670     , array([ 0.0387609  ,  0.078286   ,  0.00339138 ,  10.8065    ])
48      , -226667     , array([ 0.0387609  ,  0.078286   ,  0.00339138 ,  10.8173    ])
56      , -226668     , array([ 0.0387613  ,  0.0782867  ,  0.00339136 ,  10.8152    ])
60      , -226665     , array([ 0.0387613  ,  0.0782867  ,  0.00339136 ,  10.826     ])
64      , -226624     , array([ 0.0387652  ,  0.0783717  ,  0.00339117 ,  10.9066    ])
76      , -226624     , array([ 0.0387653  ,  0.0783718  ,  0.00339116 ,  10.9087    ])
80      , -226642     , array([ 0.0387662  ,  0.0782952  ,  0.00339112 ,  10.9314    ])
84      , -226639     , array([ 0.0387662  ,  0.0782952  ,  0.00339112 ,  10.9424    ])
92      , -226642     , array([ 0.0387662  ,  0.0782952  ,  0.00339112 ,  10.932     ])
96      , -226639     , array([ 0.0387662  ,  0.0782952  ,  0.00339112 ,  10.9429    ])
100     , -226618     , array([ 0.0387665  ,  0.0783739  ,  0.0033911  ,  10.9376    ])
112     , -226618     , array([ 0.0387665  ,  0.0783739  ,  0.0033911  ,  10.9378    ])
116     , -226641     , array([ 0.0387665  ,  0.0782957  ,  0.0033911  ,  10.9392    ])
120     , -226637     , array([ 0.0387665  ,  0.0782957  ,  0.0033911  ,  10.9501    ])
124     , -225334     , array([ 0.0391711  ,  0.0790734  ,  0.00337148 ,  26.2921    ])
128     , -222790     , array([ 0.0401451  ,  0.0823821  ,  0.0034337  ,  28.719     ])
132     , -222788     , array([ 0.0401451  ,  0.0823821  ,  0.0034337  ,  28.7478    ])
140     , -222790     , array([ 0.0401451  ,  0.0823823  ,  0.00343371 ,  28.7192    ])
144     , -222788     , array([ 0.0401451  ,  0.0823823  ,  0.00343371 ,  28.7479    ])
148     , -222770     , array([ 0.0401456  ,  0.0824664  ,  0.00343374 ,  28.7204    ])
160     , -222770     , array([ 0.0401456  ,  0.0824664  ,  0.00343374 ,  28.7204    ])
164     , -222788     , array([ 0.0401457  ,  0.0823844  ,  0.00343375 ,  28.7207    ])
168     , -222787     , array([ 0.0401457  ,  0.0823844  ,  0.00343375 ,  28.7495    ])
176     , -222788     , array([ 0.0401457  ,  0.0823844  ,  0.00343375 ,  28.7207    ])
180     , -222787     , array([ 0.0401457  ,  0.0823844  ,  0.00343375 ,  28.7495    ])
184     , -222770     , array([ 0.0401458  ,  0.082467   ,  0.00343375 ,  28.7208    ])
196     , -222770     , array([ 0.0401458  ,  0.082467   ,  0.00343375 ,  28.7208    ])
200     , -222788     , array([ 0.0401458  ,  0.0823846  ,  0.00343375 ,  28.7208    ])
204     , -222787     , array([ 0.0401458  ,  0.0823846  ,  0.00343375 ,  28.7496    ])
208     , -222144     , array([ 0.040393   ,  0.0833371  ,  0.00344948 ,  29.3617    ])
220     , -222144     , array([ 0.040393   ,  0.0833371  ,  0.00344948 ,  29.3617    ])
224     , -222161     , array([ 0.0403932  ,  0.0832542  ,  0.0034495  ,  29.3622    ])
228     , -222159     , array([ 0.0403932  ,  0.0832542  ,  0.0034495  ,  29.3915    ])
236     , -222161     , array([ 0.0403932  ,  0.0832542  ,  0.0034495  ,  29.3622    ])
240     , -222159     , array([ 0.0403932  ,  0.0832542  ,  0.0034495  ,  29.3916    ])
244     , -222143     , array([ 0.0403932  ,  0.0833376  ,  0.0034495  ,  29.3623    ])
256     , -222143     , array([ 0.0403932  ,  0.0833376  ,  0.0034495  ,  29.3623    ])
260     , -222160     , array([ 0.0403932  ,  0.0832543  ,  0.0034495  ,  29.3623    ])
264     , -222159     , array([ 0.0403932  ,  0.0832543  ,  0.0034495  ,  29.3917    ])
272     , -222160     , array([ 0.0403932  ,  0.0832543  ,  0.0034495  ,  29.3623    ])
276     , -222159     , array([ 0.0403932  ,  0.0832543  ,  0.0034495  ,  29.3917    ])
280     , -222143     , array([ 0.0403932  ,  0.0833376  ,  0.0034495  ,  29.3623    ])
284     , -221756     , array([ 0.0405408  ,  0.0835192  ,  0.00346227 ,  29.7013    ])
288     , -221755     , array([ 0.0405408  ,  0.0835192  ,  0.00346227 ,  29.731     ])
292     , -221473     , array([ 0.0406384  ,  0.0837783  ,  0.00347072 ,  29.9272    ])
304     , -221473     , array([ 0.0406384  ,  0.0837783  ,  0.00347072 ,  29.9272    ])
308     , -221491     , array([ 0.0406384  ,  0.0836945  ,  0.00347072 ,  29.9272    ])
312     , -221489     , array([ 0.0406384  ,  0.0836945  ,  0.00347072 ,  29.9572    ])
316     , -221428     , array([ 0.0406551  ,  0.0838081  ,  0.00347215 ,  29.9658    ])
320     , -221416     , array([ 0.040666   ,  0.0837441  ,  0.0034731  ,  29.9913    ])
328     , -221428     , array([ 0.0406551  ,  0.0838081  ,  0.00347215 ,  29.9658    ])
332     , -221425     , array([ 0.0406624  ,  0.0837375  ,  0.00347279 ,  29.9828    ])
340     , -221400     , array([ 0.0406653  ,  0.0838265  ,  0.00347304 ,  29.9895    ])
344     , -221416     , array([ 0.0406659  ,  0.0837438  ,  0.00347309 ,  29.9909    ])
352     , -221398     , array([ 0.040666   ,  0.0838278  ,  0.0034731  ,  29.9912    ])
356     , -221416     , array([ 0.040666   ,  0.0837441  ,  0.0034731  ,  29.9912    ])
364     , -221398     , array([ 0.040666   ,  0.0838279  ,  0.0034731  ,  29.9913    ])
368     , -221416     , array([ 0.040666   ,  0.0837441  ,  0.0034731  ,  29.9913    ])
376     , -221398     , array([ 0.040666   ,  0.0838279  ,  0.0034731  ,  29.9913    ])
380     , -221416     , array([ 0.040666   ,  0.0837441  ,  0.0034731  ,  29.9913    ])
388     , -221398     , array([ 0.040666   ,  0.0838279  ,  0.0034731  ,  29.9913    ])
392     , -221416     , array([ 0.040666   ,  0.0837441  ,  0.0034731  ,  29.9913    ])
400     , -221398     , array([ 0.040666   ,  0.0838279  ,  0.0034731  ,  29.9913    ])
404     , -221416     , array([ 0.040666   ,  0.0837441  ,  0.0034731  ,  29.9913    ])
412     , -221398     , array([ 0.040666   ,  0.0838279  ,  0.0034731  ,  29.9913    ])
416     , -221416     , array([ 0.040666   ,  0.0837441  ,  0.0034731  ,  29.9913    ])
424     , -221398     , array([ 0.040666   ,  0.0838279  ,  0.0034731  ,  29.9913    ])
428     , -221416     , array([ 0.040666   ,  0.0837441  ,  0.0034731  ,  29.9913    ])
436     , -221398     , array([ 0.040666   ,  0.0838279  ,  0.0034731  ,  29.9913    ])
440     , -221416     , array([ 0.040666   ,  0.0837441  ,  0.0034731  ,  29.9913    ])
448     , -221398     , array([ 0.040666   ,  0.0838279  ,  0.0034731  ,  29.9913    ])
452     , -221416     , array([ 0.040666   ,  0.0837441  ,  0.0034731  ,  29.9913    ])
460     , -221398     , array([ 0.040666   ,  0.0838279  ,  0.0034731  ,  29.9913    ])
464     , -221416     , array([ 0.040666   ,  0.0837441  ,  0.0034731  ,  29.9913    ])
472     , -221398     , array([ 0.040666   ,  0.0838279  ,  0.0034731  ,  29.9913    ])
476     , -221416     , array([ 0.040666   ,  0.0837441  ,  0.0034731  ,  29.9913    ])
488     , -221740     , array([ 0.0405405  ,  0.0836023  ,  0.00346224 ,  29.7007    ])
492     , -221556     , array([ 0.0406145  ,  0.0836516  ,  0.00346864 ,  29.8717    ])
496     , -221554     , array([ 0.0406145  ,  0.0836516  ,  0.00346864 ,  29.9016    ])
500     , -221438     , array([ 0.0406515  ,  0.0838018  ,  0.00347185 ,  29.9576    ])
504     , -221430     , array([ 0.0406608  ,  0.0837347  ,  0.00347265 ,  29.9791    ])
508     , -221320     , array([ 0.0406608  ,  0.0837347  ,  0.00347612 ,  29.9791    ])
512     , -221432     , array([ 0.0406599  ,  0.0837331  ,  0.00347257 ,  29.977     ])
Finshed optimization **************************************************
Writing out parameters **************************************************
Writing out SFS **************************************************
Making plots **************************************************
carrying out inference 3 for model 2D.5epoch.fixedN1N3.nomig for pop MN-IR
Beginning optimization ************************************************
4       , -631341     , array([ 0.0125885  ,  0.0746432  ,  0.0132672  ,  10.4207    ])
8       , -206843     , array([ 0.0286618  ,  0.0449921  ,  0.00987082 ,  10.3901    ])
12      , -206842     , array([ 0.0286618  ,  0.0449921  ,  0.00987082 ,  10.4005    ])
20      , -205628     , array([ 0.0285305  ,  0.0452092  ,  0.009598   ,  10.395     ])
24      , -205627     , array([ 0.0285305  ,  0.0452092  ,  0.009598   ,  10.4054    ])
28      , -704336     , array([ 0.0190066  ,  0.0692753  ,  0.000804263,  10.8447    ])
32      , -196358     , array([ 0.0272205  ,  0.0474925  ,  0.00720405 ,  10.4461    ])
36      , -196357     , array([ 0.0272205  ,  0.0474925  ,  0.00720405 ,  10.4566    ])
44      , -196357     , array([ 0.0272241  ,  0.0475027  ,  0.00720405 ,  10.4482    ])
48      , -196356     , array([ 0.0272241  ,  0.0475027  ,  0.00720405 ,  10.4586    ])
52      , -196350     , array([ 0.0272292  ,  0.0475643  ,  0.00720405 ,  10.4511    ])
64      , -196350     , array([ 0.0272301  ,  0.0475669  ,  0.00720405 ,  10.4516    ])
68      , -196356     , array([ 0.0272313  ,  0.0475228  ,  0.00720405 ,  10.4523    ])
72      , -196354     , array([ 0.0272313  ,  0.0475228  ,  0.00720405 ,  10.4627    ])
80      , -196356     , array([ 0.0272315  ,  0.0475234  ,  0.00720405 ,  10.4524    ])
84      , -196354     , array([ 0.0272315  ,  0.0475234  ,  0.00720405 ,  10.4629    ])
88      , -196349     , array([ 0.0272319  ,  0.0475718  ,  0.00720405 ,  10.4526    ])
100     , -196349     , array([ 0.0272319  ,  0.047572   ,  0.00720405 ,  10.4526    ])
104     , -196355     , array([ 0.027232   ,  0.0475247  ,  0.00720405 ,  10.4527    ])
108     , -196354     , array([ 0.027232   ,  0.0475247  ,  0.00720405 ,  10.4631    ])
112     , -197179     , array([ 0.0344718  ,  0.0693413  ,  0.00720364 ,  14.8319    ])
116     , -196127     , array([ 0.029377   ,  0.0536471  ,  0.00720392 ,  11.6977    ])
120     , -196126     , array([ 0.029377   ,  0.0536471  ,  0.00720392 ,  11.7094    ])
124     , -195701     , array([ 0.029243   ,  0.0533093  ,  0.00715955 ,  16.3216    ])
128     , -194941     , array([ 0.0289413  ,  0.0531008  ,  0.00691735 ,  19.8855    ])
132     , -194940     , array([ 0.0289413  ,  0.0531008  ,  0.00691735 ,  19.9054    ])
140     , -194941     , array([ 0.0289413  ,  0.0531008  ,  0.00691735 ,  19.8855    ])
144     , -194940     , array([ 0.0289413  ,  0.0531008  ,  0.00691735 ,  19.9054    ])
148     , -194119     , array([ 0.0285307  ,  0.0528313  ,  0.00662032 ,  28.785     ])
160     , -194119     , array([ 0.0285307  ,  0.0528313  ,  0.00662031 ,  28.7851    ])
172     , -194119     , array([ 0.0285307  ,  0.0528313  ,  0.00662031 ,  28.7852    ])
184     , -194119     , array([ 0.0285307  ,  0.0528313  ,  0.00662031 ,  28.7852    ])
196     , -194119     , array([ 0.0285307  ,  0.0528313  ,  0.00662031 ,  28.7852    ])
208     , -194119     , array([ 0.0285307  ,  0.0528313  ,  0.00662031 ,  28.7852    ])
212     , -194117     , array([ 0.0285307  ,  0.0527785  ,  0.00662031 ,  28.7852    ])
216     , -194116     , array([ 0.0285307  ,  0.0527785  ,  0.00662031 ,  28.814     ])
224     , -194117     , array([ 0.0285307  ,  0.0527785  ,  0.00662031 ,  28.7852    ])
228     , -194116     , array([ 0.0285307  ,  0.0527785  ,  0.00662031 ,  28.814     ])
236     , -194117     , array([ 0.0285307  ,  0.0527785  ,  0.00662031 ,  28.7852    ])
240     , -194116     , array([ 0.0285307  ,  0.0527785  ,  0.00662031 ,  28.814     ])
244     , -194119     , array([ 0.0285307  ,  0.0528313  ,  0.00662031 ,  28.7852    ])
248     , -194070     , array([ 0.028507   ,  0.052755   ,  0.00660323 ,  29.8253    ])
252     , -194069     , array([ 0.028507   ,  0.052755   ,  0.00660323 ,  29.8552    ])
260     , -194070     , array([ 0.028507   ,  0.052755   ,  0.00660323 ,  29.8253    ])
264     , -194069     , array([ 0.028507   ,  0.052755   ,  0.00660323 ,  29.8552    ])
268     , -194071     , array([ 0.028507   ,  0.0528078  ,  0.00660323 ,  29.8253    ])
280     , -194071     , array([ 0.028507   ,  0.0528078  ,  0.00660323 ,  29.8253    ])
284     , -194070     , array([ 0.028507   ,  0.052755   ,  0.00660323 ,  29.8253    ])
288     , -194069     , array([ 0.028507   ,  0.052755   ,  0.00660323 ,  29.8552    ])
296     , -194070     , array([ 0.028507   ,  0.052755   ,  0.00660323 ,  29.8253    ])
300     , -194069     , array([ 0.028507   ,  0.052755   ,  0.00660323 ,  29.8552    ])
304     , -194071     , array([ 0.028507   ,  0.0528078  ,  0.00660323 ,  29.8253    ])
308     , -194066     , array([ 0.0285051  ,  0.0527531  ,  0.00660183 ,  29.9128    ])
312     , -194065     , array([ 0.0285051  ,  0.0527531  ,  0.00660183 ,  29.9427    ])
316     , -194065     , array([ 0.0285038  ,  0.0528046  ,  0.0066009  ,  29.9707    ])
320     , -194066     , array([ 0.0285051  ,  0.0527531  ,  0.00660183 ,  29.9128    ])
324     , -194065     , array([ 0.0285051  ,  0.0527531  ,  0.00660183 ,  29.9427    ])
328     , -194066     , array([ 0.0285042  ,  0.052805   ,  0.00660121 ,  29.9514    ])
332     , -194064     , array([ 0.0285039  ,  0.052752   ,  0.006601   ,  29.9642    ])
336     , -194063     , array([ 0.0285039  ,  0.052752   ,  0.006601   ,  29.9942    ])
340     , -194065     , array([ 0.0285038  ,  0.0528046  ,  0.00660093 ,  29.9685    ])
344     , -194063     , array([ 0.0285038  ,  0.0527518  ,  0.00660091 ,  29.97      ])
348     , -194063     , array([ 0.0285038  ,  0.0527518  ,  0.00660091 ,  30         ])
352     , -194065     , array([ 0.0285038  ,  0.0528046  ,  0.0066009  ,  29.9704    ])
356     , -194063     , array([ 0.0285038  ,  0.0527518  ,  0.0066009  ,  29.9706    ])
364     , -194065     , array([ 0.0285038  ,  0.0528046  ,  0.0066009  ,  29.9707    ])
368     , -194063     , array([ 0.0285038  ,  0.0527518  ,  0.0066009  ,  29.9707    ])
376     , -194065     , array([ 0.0285038  ,  0.0528046  ,  0.0066009  ,  29.9707    ])
380     , -194063     , array([ 0.0285038  ,  0.0527518  ,  0.0066009  ,  29.9707    ])
388     , -194065     , array([ 0.0285038  ,  0.0528046  ,  0.0066009  ,  29.9707    ])
392     , -194063     , array([ 0.0285038  ,  0.0527518  ,  0.0066009  ,  29.9707    ])
400     , -194065     , array([ 0.0285038  ,  0.0528046  ,  0.0066009  ,  29.9707    ])
404     , -194063     , array([ 0.0285038  ,  0.0527518  ,  0.0066009  ,  29.9707    ])
412     , -194065     , array([ 0.0285038  ,  0.0528046  ,  0.0066009  ,  29.9707    ])
416     , -194063     , array([ 0.0285038  ,  0.0527518  ,  0.0066009  ,  29.9707    ])
424     , -194065     , array([ 0.0285038  ,  0.0528046  ,  0.0066009  ,  29.9707    ])
428     , -194063     , array([ 0.0285038  ,  0.0527518  ,  0.0066009  ,  29.9707    ])
436     , -194065     , array([ 0.0285038  ,  0.0528046  ,  0.0066009  ,  29.9707    ])
440     , -194063     , array([ 0.0285038  ,  0.0527518  ,  0.0066009  ,  29.9707    ])
448     , -194065     , array([ 0.0285038  ,  0.0528046  ,  0.0066009  ,  29.9707    ])
452     , -194063     , array([ 0.0285038  ,  0.0527518  ,  0.0066009  ,  29.9707    ])
460     , -194065     , array([ 0.0285038  ,  0.0528046  ,  0.0066009  ,  29.9707    ])
468     , -194070     , array([ 0.0285071  ,  0.0527551  ,  0.00660327 ,  29.8232    ])
472     , -194081     , array([ 0.0285071  ,  0.0527551  ,  0.00660987 ,  29.8232    ])
476     , -194064     , array([ 0.0285041  ,  0.0527522  ,  0.00660114 ,  29.9556    ])
480     , -194075     , array([ 0.0285041  ,  0.0527522  ,  0.00660774 ,  29.9556    ])
484     , -194063     , array([ 0.0285034  ,  0.0527514  ,  0.00660061 ,  29.9888    ])
Finshed optimization **************************************************
Writing out parameters **************************************************
Writing out SFS **************************************************
Making plots **************************************************
carrying out inference 4 for model 2D.5epoch.fixedN1N3.nomig for pop MN-IR
Beginning optimization ************************************************
4       , -599073     , array([ 0.0174897  ,  0.099      ,  0.0171754  ,  7.10136    ])
8       , -219524     , array([ 0.040271   ,  0.0605187  ,  0.0128796  ,  7.07423    ])
12      , -219523     , array([ 0.040271   ,  0.0605187  ,  0.0128796  ,  7.08131    ])
20      , -218546     , array([ 0.0401483  ,  0.0606497  ,  0.0126401  ,  7.07579    ])
24      , -218545     , array([ 0.0401483  ,  0.0606497  ,  0.0126401  ,  7.08287    ])
28      , -217575     , array([ 0.0400261  ,  0.0608416  ,  0.0124053  ,  7.07734    ])
40      , -217344     , array([ 0.0399965  ,  0.0608736  ,  0.012349   ,  7.07772    ])
52      , -217243     , array([ 0.0399836  ,  0.0608875  ,  0.0123245  ,  7.07788    ])
56      , -981596     , array([ 0.0237878  ,  0.0878832  ,  0.000505241,  7.34726    ])
60      , -981576     , array([ 0.0237878  ,  0.0878832  ,  0.000505241,  7.35461    ])
64      , -199324     , array([ 0.0373201  ,  0.0639357  ,  0.00806506 ,  7.11306    ])
76      , -199321     , array([ 0.0373314  ,  0.0639693  ,  0.00806473 ,  7.11546    ])
80      , -199320     , array([ 0.0373549  ,  0.0639749  ,  0.00806406 ,  7.12042    ])
84      , -199319     , array([ 0.0373549  ,  0.0639749  ,  0.00806406 ,  7.12754    ])
92      , -199319     , array([ 0.0373577  ,  0.0639832  ,  0.00806398 ,  7.12101    ])
96      , -199318     , array([ 0.0373577  ,  0.0639832  ,  0.00806398 ,  7.12814    ])
100     , -199313     , array([ 0.0373633  ,  0.0640638  ,  0.00806382 ,  7.12219    ])
112     , -199313     , array([ 0.037364   ,  0.0640659  ,  0.0080638  ,  7.12234    ])
116     , -199318     , array([ 0.0373654  ,  0.0640059  ,  0.00806376 ,  7.12263    ])
120     , -199316     , array([ 0.0373654  ,  0.0640059  ,  0.00806376 ,  7.12976    ])
128     , -199318     , array([ 0.0373656  ,  0.0640065  ,  0.00806375 ,  7.12267    ])
132     , -199316     , array([ 0.0373656  ,  0.0640065  ,  0.00806375 ,  7.1298     ])
136     , -199313     , array([ 0.0373659  ,  0.0640715  ,  0.00806374 ,  7.12274    ])
148     , -199313     , array([ 0.0373659  ,  0.0640716  ,  0.00806374 ,  7.12275    ])
152     , -199317     , array([ 0.037366   ,  0.0640079  ,  0.00806374 ,  7.12277    ])
156     , -199316     , array([ 0.037366   ,  0.0640079  ,  0.00806374 ,  7.1299     ])
160     , -198924     , array([ 0.0429642  ,  0.0815715  ,  0.00791561 ,  8.31451    ])
164     , -198122     , array([ 0.0427975  ,  0.0809766  ,  0.00782269 ,  13.0152    ])
168     , -198122     , array([ 0.0427975  ,  0.0809766  ,  0.00782269 ,  13.0282    ])
172     , -196668     , array([ 0.0419417  ,  0.0797054  ,  0.00745909 ,  16.0883    ])
176     , -194346     , array([ 0.040329   ,  0.0771658  ,  0.00676264 ,  29.5348    ])
180     , -194346     , array([ 0.040329   ,  0.0771658  ,  0.00676264 ,  29.5644    ])
188     , -194346     , array([ 0.040329   ,  0.0771657  ,  0.00676264 ,  29.535     ])
192     , -194346     , array([ 0.040329   ,  0.0771657  ,  0.00676264 ,  29.5646    ])
200     , -194346     , array([ 0.040329   ,  0.0771657  ,  0.00676264 ,  29.5351    ])
204     , -194346     , array([ 0.040329   ,  0.0771657  ,  0.00676264 ,  29.5646    ])
212     , -194346     , array([ 0.040329   ,  0.0771657  ,  0.00676264 ,  29.5351    ])
216     , -194346     , array([ 0.040329   ,  0.0771657  ,  0.00676264 ,  29.5647    ])
224     , -194346     , array([ 0.040329   ,  0.0771657  ,  0.00676264 ,  29.5351    ])
228     , -194346     , array([ 0.040329   ,  0.0771657  ,  0.00676264 ,  29.5647    ])
236     , -194346     , array([ 0.040329   ,  0.0771657  ,  0.00676264 ,  29.5351    ])
240     , -194345     , array([ 0.040329   ,  0.0771657  ,  0.00676264 ,  29.5647    ])
248     , -194346     , array([ 0.040329   ,  0.0771657  ,  0.00676264 ,  29.5351    ])
252     , -194345     , array([ 0.040329   ,  0.0771657  ,  0.00676264 ,  29.5647    ])
260     , -194346     , array([ 0.040329   ,  0.0771657  ,  0.00676264 ,  29.5351    ])
264     , -194345     , array([ 0.040329   ,  0.0771657  ,  0.00676264 ,  29.5647    ])
272     , -194346     , array([ 0.040329   ,  0.0771657  ,  0.00676264 ,  29.5351    ])
276     , -194345     , array([ 0.040329   ,  0.0771657  ,  0.00676264 ,  29.5647    ])
280     , -194354     , array([ 0.040329   ,  0.0772429  ,  0.00676264 ,  29.5351    ])
292     , -194354     , array([ 0.040329   ,  0.0772429  ,  0.00676264 ,  29.5351    ])
296     , -194346     , array([ 0.040329   ,  0.0771657  ,  0.00676264 ,  29.5351    ])
300     , -194345     , array([ 0.040329   ,  0.0771657  ,  0.00676264 ,  29.5647    ])
308     , -194346     , array([ 0.040329   ,  0.0771657  ,  0.00676264 ,  29.5351    ])
312     , -194345     , array([ 0.040329   ,  0.0771657  ,  0.00676264 ,  29.5647    ])
316     , -194354     , array([ 0.040329   ,  0.0772429  ,  0.00676264 ,  29.5351    ])
320     , -194328     , array([ 0.0403084  ,  0.0771238  ,  0.00675648 ,  29.7832    ])
324     , -194327     , array([ 0.0403084  ,  0.0771238  ,  0.00675648 ,  29.813     ])
328     , -194323     , array([ 0.0402948  ,  0.0771734  ,  0.00675242 ,  29.9481    ])
340     , -194323     , array([ 0.0402948  ,  0.0771734  ,  0.00675242 ,  29.9481    ])
344     , -194316     , array([ 0.0402948  ,  0.0770962  ,  0.00675242 ,  29.9481    ])
348     , -194315     , array([ 0.0402948  ,  0.0770962  ,  0.00675242 ,  29.9781    ])
352     , -194321     , array([ 0.0402925  ,  0.0771687  ,  0.00675173 ,  29.9762    ])
356     , -194316     , array([ 0.0402948  ,  0.0770962  ,  0.00675242 ,  29.9481    ])
360     , -194315     , array([ 0.0402948  ,  0.0770962  ,  0.00675242 ,  29.9781    ])
364     , -194322     , array([ 0.0402933  ,  0.0771702  ,  0.00675196 ,  29.9669    ])
368     , -194314     , array([ 0.0402928  ,  0.0770921  ,  0.0067518  ,  29.9731    ])
376     , -194321     , array([ 0.0402926  ,  0.0771688  ,  0.00675174 ,  29.9756    ])
380     , -194314     , array([ 0.0402925  ,  0.0770916  ,  0.00675173 ,  29.9761    ])
388     , -194321     , array([ 0.0402925  ,  0.0771687  ,  0.00675173 ,  29.9762    ])
392     , -194314     , array([ 0.0402925  ,  0.0770915  ,  0.00675173 ,  29.9762    ])
400     , -194321     , array([ 0.0402925  ,  0.0771687  ,  0.00675173 ,  29.9762    ])
404     , -194314     , array([ 0.0402925  ,  0.0770915  ,  0.00675173 ,  29.9762    ])
412     , -194321     , array([ 0.0402925  ,  0.0771687  ,  0.00675173 ,  29.9762    ])
416     , -194314     , array([ 0.0402925  ,  0.0770915  ,  0.00675173 ,  29.9762    ])
424     , -194321     , array([ 0.0402925  ,  0.0771687  ,  0.00675173 ,  29.9762    ])
428     , -194314     , array([ 0.0402925  ,  0.0770915  ,  0.00675173 ,  29.9762    ])
436     , -194321     , array([ 0.0402925  ,  0.0771687  ,  0.00675173 ,  29.9762    ])
440     , -194314     , array([ 0.0402925  ,  0.0770915  ,  0.00675173 ,  29.9762    ])
448     , -194321     , array([ 0.0402925  ,  0.0771687  ,  0.00675173 ,  29.9762    ])
452     , -194314     , array([ 0.0402925  ,  0.0770915  ,  0.00675173 ,  29.9762    ])
460     , -194321     , array([ 0.0402925  ,  0.0771687  ,  0.00675173 ,  29.9762    ])
464     , -194314     , array([ 0.0402925  ,  0.0770915  ,  0.00675173 ,  29.9762    ])
472     , -194321     , array([ 0.0402925  ,  0.0771687  ,  0.00675173 ,  29.9762    ])
476     , -194314     , array([ 0.0402925  ,  0.0770915  ,  0.00675173 ,  29.9762    ])
484     , -194321     , array([ 0.0402925  ,  0.0771687  ,  0.00675173 ,  29.9762    ])
488     , -194314     , array([ 0.0402925  ,  0.0770915  ,  0.00675173 ,  29.9762    ])
500     , -194325     , array([ 0.0403054  ,  0.0771178  ,  0.00675559 ,  29.8193    ])
504     , -194341     , array([ 0.0403054  ,  0.0771178  ,  0.00676235 ,  29.8193    ])
508     , -194307     , array([ 0.040334   ,  0.0770938  ,  0.00675206 ,  29.9625    ])
516     , -194320     , array([ 0.0402907  ,  0.077165   ,  0.00675118 ,  29.9984    ])
Finshed optimization **************************************************
Writing out parameters **************************************************
Writing out SFS **************************************************
Making plots **************************************************
carrying out inference 5 for model 2D.5epoch.fixedN1N3.nomig for pop MN-IR
Beginning optimization ************************************************
4       , -440984     , array([ 0.0140963  ,  0.0637011  ,  0.00868878 ,  9.63793    ])
8       , -211229     , array([ 0.0302012  ,  0.0341102  ,  0.00695067 ,  9.62418    ])
12      , -211227     , array([ 0.0302012  ,  0.0341102  ,  0.00695067 ,  9.63381    ])
20      , -210963     , array([ 0.0305687  ,  0.0349091  ,  0.00677317 ,  9.67228    ])
24      , -210961     , array([ 0.0305687  ,  0.0349091  ,  0.00677317 ,  9.68196    ])
28      , -210376     , array([ 0.0320868  ,  0.0370497  ,  0.00676154 ,  9.8243     ])
32      , -208309     , array([ 0.0389514  ,  0.046773   ,  0.00671522 ,  10.4566    ])
36      , -208307     , array([ 0.0389514  ,  0.046773   ,  0.00671522 ,  10.4671    ])
44      , -208309     , array([ 0.0389518  ,  0.0467736  ,  0.00671521 ,  10.4567    ])
48      , -208307     , array([ 0.0389518  ,  0.0467736  ,  0.00671521 ,  10.4671    ])
52      , -208261     , array([ 0.0389558  ,  0.0468262  ,  0.00671519 ,  10.457     ])
56      , -204443     , array([ 0.0574037  ,  0.0746992  ,  0.00662352 ,  11.8463    ])
60      , -204441     , array([ 0.0574037  ,  0.0746992  ,  0.00662352 ,  11.8581    ])
68      , -204442     , array([ 0.0574063  ,  0.0747033  ,  0.00662352 ,  11.845     ])
72      , -204441     , array([ 0.0574063  ,  0.0747033  ,  0.00662352 ,  11.8568    ])
76      , -204399     , array([ 0.0574138  ,  0.0747899  ,  0.00662353 ,  11.8412    ])
88      , -204399     , array([ 0.0574144  ,  0.0747909  ,  0.00662353 ,  11.8409    ])
92      , -204441     , array([ 0.0574163  ,  0.0747191  ,  0.00662353 ,  11.84      ])
96      , -204440     , array([ 0.0574163  ,  0.0747191  ,  0.00662353 ,  11.8518    ])
104     , -204441     , array([ 0.0574165  ,  0.0747194  ,  0.00662353 ,  11.8399    ])
108     , -204440     , array([ 0.0574165  ,  0.0747194  ,  0.00662353 ,  11.8517    ])
112     , -204399     , array([ 0.0574169  ,  0.0747949  ,  0.00662353 ,  11.8397    ])
124     , -204399     , array([ 0.057417   ,  0.074795   ,  0.00662353 ,  11.8396    ])
128     , -204441     , array([ 0.0574171  ,  0.0747204  ,  0.00662353 ,  11.8396    ])
132     , -204440     , array([ 0.0574171  ,  0.0747204  ,  0.00662353 ,  11.8514    ])
136     , -203652     , array([ 0.0653398  ,  0.0875207  ,  0.00663122 ,  8.66209    ])
148     , -203652     , array([ 0.0653398  ,  0.0875207  ,  0.00663122 ,  8.66209    ])
152     , -203692     , array([ 0.0653399  ,  0.0874334  ,  0.00663122 ,  8.66212    ])
156     , -203691     , array([ 0.0653399  ,  0.0874334  ,  0.00663122 ,  8.67079    ])
160     , -202912     , array([ 0.0694372  ,  0.09427    ,  0.00660818 ,  10.1391    ])
164     , -202490     , array([ 0.0722812  ,  0.0989081  ,  0.00659302 ,  11.2493    ])
168     , -202488     , array([ 0.0722812  ,  0.0989081  ,  0.00659302 ,  11.2605    ])
176     , -202490     , array([ 0.0722812  ,  0.0989081  ,  0.00659302 ,  11.2493    ])
180     , -202488     , array([ 0.0722812  ,  0.0989081  ,  0.00659302 ,  11.2605    ])
184     , -202451     , array([ 0.0722812  ,  0.0990071  ,  0.00659302 ,  11.2493    ])
188     , -202413     , array([ 0.0727761  ,  0.099736   ,  0.00659044 ,  11.4497    ])
192     , -202412     , array([ 0.0727761  ,  0.099736   ,  0.00659044 ,  11.4612    ])
200     , -202413     , array([ 0.0727762  ,  0.0997361  ,  0.00659044 ,  11.4498    ])
204     , -202412     , array([ 0.0727762  ,  0.0997361  ,  0.00659044 ,  11.4612    ])
208     , -202375     , array([ 0.0727765  ,  0.0998363  ,  0.00659044 ,  11.4498    ])
220     , -202375     , array([ 0.0727765  ,  0.0998364  ,  0.00659044 ,  11.4498    ])
224     , -202413     , array([ 0.0727766  ,  0.0997367  ,  0.00659044 ,  11.4498    ])
228     , -202412     , array([ 0.0727766  ,  0.0997367  ,  0.00659044 ,  11.4613    ])
236     , -202413     , array([ 0.0727766  ,  0.0997367  ,  0.00659044 ,  11.4498    ])
240     , -202412     , array([ 0.0727766  ,  0.0997367  ,  0.00659044 ,  11.4613    ])
244     , -202375     , array([ 0.0727766  ,  0.0998365  ,  0.00659044 ,  11.4498    ])
256     , -202375     , array([ 0.0727766  ,  0.0998365  ,  0.00659044 ,  11.4498    ])
260     , -202413     , array([ 0.0727766  ,  0.0997367  ,  0.00659044 ,  11.4498    ])
264     , -202412     , array([ 0.0727766  ,  0.0997367  ,  0.00659044 ,  11.4613    ])
272     , -202413     , array([ 0.0727766  ,  0.0997367  ,  0.00659044 ,  11.4498    ])
276     , -202412     , array([ 0.0727766  ,  0.0997367  ,  0.00659044 ,  11.4613    ])
280     , -202375     , array([ 0.0727766  ,  0.0998365  ,  0.00659044 ,  11.4498    ])
292     , -202375     , array([ 0.0727766  ,  0.0998365  ,  0.00659044 ,  11.4498    ])
296     , -202413     , array([ 0.0727766  ,  0.0997367  ,  0.00659044 ,  11.4498    ])
300     , -202412     , array([ 0.0727766  ,  0.0997367  ,  0.00659044 ,  11.4613    ])
308     , -202413     , array([ 0.0727766  ,  0.0997367  ,  0.00659044 ,  11.4498    ])
312     , -202412     , array([ 0.0727766  ,  0.0997367  ,  0.00659044 ,  11.4613    ])
316     , -202375     , array([ 0.0727766  ,  0.0998365  ,  0.00659044 ,  11.4498    ])
320     , -202393     , array([ 0.0728993  ,  0.0999559  ,  0.0065893  ,  11.474     ])
324     , -202391     , array([ 0.0728993  ,  0.0999559  ,  0.0065893  ,  11.4855    ])
328     , -202375     , array([ 0.0727766  ,  0.0998365  ,  0.00659044 ,  11.4498    ])
332     , -202399     , array([ 0.0728584  ,  0.0998828  ,  0.00658968 ,  11.4659    ])
336     , -202398     , array([ 0.0728584  ,  0.0998828  ,  0.00658968 ,  11.4774    ])
344     , -202393     , array([ 0.0728965  ,  0.0999508  ,  0.00658933 ,  11.4734    ])
348     , -202392     , array([ 0.0728965  ,  0.0999508  ,  0.00658933 ,  11.4849    ])
356     , -202393     , array([ 0.0728992  ,  0.0999557  ,  0.0065893  ,  11.4739    ])
360     , -202391     , array([ 0.0728992  ,  0.0999557  ,  0.0065893  ,  11.4854    ])
368     , -202393     , array([ 0.0728993  ,  0.0999559  ,  0.0065893  ,  11.474     ])
372     , -202391     , array([ 0.0728993  ,  0.0999559  ,  0.0065893  ,  11.4855    ])
380     , -202393     , array([ 0.0728993  ,  0.0999559  ,  0.0065893  ,  11.474     ])
384     , -202391     , array([ 0.0728993  ,  0.0999559  ,  0.0065893  ,  11.4855    ])
392     , -202393     , array([ 0.0728993  ,  0.0999559  ,  0.0065893  ,  11.474     ])
396     , -202391     , array([ 0.0728993  ,  0.0999559  ,  0.0065893  ,  11.4855    ])
404     , -202393     , array([ 0.0728993  ,  0.0999559  ,  0.0065893  ,  11.474     ])
408     , -202391     , array([ 0.0728993  ,  0.0999559  ,  0.0065893  ,  11.4855    ])
416     , -202393     , array([ 0.0728993  ,  0.0999559  ,  0.0065893  ,  11.474     ])
420     , -202391     , array([ 0.0728993  ,  0.0999559  ,  0.0065893  ,  11.4855    ])
428     , -202393     , array([ 0.0728993  ,  0.0999559  ,  0.0065893  ,  11.474     ])
432     , -202391     , array([ 0.0728993  ,  0.0999559  ,  0.0065893  ,  11.4855    ])
440     , -202393     , array([ 0.0728993  ,  0.0999559  ,  0.0065893  ,  11.474     ])
444     , -202391     , array([ 0.0728993  ,  0.0999559  ,  0.0065893  ,  11.4855    ])
452     , -202393     , array([ 0.0728993  ,  0.0999559  ,  0.0065893  ,  11.474     ])
456     , -202391     , array([ 0.0728993  ,  0.0999559  ,  0.0065893  ,  11.4855    ])
464     , -202393     , array([ 0.0728993  ,  0.0999559  ,  0.0065893  ,  11.474     ])
468     , -202391     , array([ 0.0728993  ,  0.0999559  ,  0.0065893  ,  11.4855    ])
476     , -202393     , array([ 0.0728993  ,  0.0999559  ,  0.0065893  ,  11.474     ])
480     , -202391     , array([ 0.0728993  ,  0.0999559  ,  0.0065893  ,  11.4855    ])
488     , -202393     , array([ 0.0728993  ,  0.0999559  ,  0.0065893  ,  11.474     ])
492     , -202391     , array([ 0.0728993  ,  0.0999559  ,  0.0065893  ,  11.4855    ])
500     , -202393     , array([ 0.0728993  ,  0.0999559  ,  0.0065893  ,  11.474     ])
504     , -202391     , array([ 0.0728993  ,  0.0999559  ,  0.0065893  ,  11.4855    ])
520     , -202431     , array([ 0.0729719  ,  0.0999552  ,  0.00658931 ,  11.4739    ])
524     , -202404     , array([ 0.0728294  ,  0.099831   ,  0.00658995 ,  11.4602    ])
Finshed optimization **************************************************
Writing out parameters **************************************************
Writing out SFS **************************************************
Making plots **************************************************
carrying out inference 6 for model 2D.5epoch.fixedN1N3.nomig for pop MN-IR
Beginning optimization ************************************************
4       , -354347     , array([ 0.0174366  ,  0.0744839  ,  0.00550374 ,  17.2582    ])
8       , -225737     , array([ 0.0379372  ,  0.0393564  ,  0.00500427 ,  17.2606    ])
12      , -225736     , array([ 0.0379372  ,  0.0393564  ,  0.00500427 ,  17.2779    ])
20      , -225625     , array([ 0.0379589  ,  0.0393582  ,  0.00501607 ,  17.2618    ])
24      , -225623     , array([ 0.0379589  ,  0.0393582  ,  0.00501607 ,  17.279     ])
28      , -224079     , array([ 0.0382532  ,  0.0394215  ,  0.00517829 ,  17.2775    ])
32      , -292966     , array([ 0.0736885  ,  0.0414686  ,  0.0771569  ,  18.6672    ])
36      , -292966     , array([ 0.0736885  ,  0.0414686  ,  0.0771569  ,  18.6859    ])
40      , -218324     , array([ 0.0428842  ,  0.0397778  ,  0.00829231 ,  17.5121    ])
52      , -218324     , array([ 0.0428858  ,  0.0397795  ,  0.00829229 ,  17.5122    ])
56      , -218363     , array([ 0.0428873  ,  0.0397415  ,  0.00829228 ,  17.5123    ])
60      , -218362     , array([ 0.0428873  ,  0.0397415  ,  0.00829228 ,  17.5298    ])
64      , -210847     , array([ 0.0880452  ,  0.0940877  ,  0.00804843 ,  20.1857    ])
76      , -210847     , array([ 0.0880455  ,  0.0940882  ,  0.00804843 ,  20.1857    ])
80      , -210883     , array([ 0.0880459  ,  0.0939946  ,  0.00804843 ,  20.1857    ])
84      , -210882     , array([ 0.0880459  ,  0.0939946  ,  0.00804843 ,  20.2059    ])
92      , -210883     , array([ 0.088046   ,  0.0939947  ,  0.00804843 ,  20.1857    ])
96      , -210882     , array([ 0.088046   ,  0.0939947  ,  0.00804843 ,  20.2059    ])
100     , -210847     , array([ 0.088046   ,  0.0940888  ,  0.00804843 ,  20.1857    ])
112     , -210847     , array([ 0.0880461  ,  0.0940888  ,  0.00804843 ,  20.1857    ])
116     , -210883     , array([ 0.0880461  ,  0.0939948  ,  0.00804843 ,  20.1857    ])
120     , -210882     , array([ 0.0880461  ,  0.0939948  ,  0.00804843 ,  20.2059    ])
128     , -210883     , array([ 0.0880461  ,  0.0939948  ,  0.00804843 ,  20.1857    ])
132     , -210882     , array([ 0.0880461  ,  0.0939948  ,  0.00804843 ,  20.2059    ])
136     , -210847     , array([ 0.0880461  ,  0.0940889  ,  0.00804843 ,  20.1857    ])
140     , -210589     , array([ 0.0906975  ,  0.0973924  ,  0.00803853 ,  20.3044    ])
144     , -210589     , array([ 0.0906975  ,  0.0973924  ,  0.00803853 ,  20.3247    ])
148     , -210362     , array([ 0.092491   ,  0.0998015  ,  0.008032   ,  20.383     ])
160     , -210362     , array([ 0.092491   ,  0.0998015  ,  0.008032   ,  20.383     ])
164     , -210397     , array([ 0.092491   ,  0.0997018  ,  0.008032   ,  20.383     ])
168     , -210397     , array([ 0.092491   ,  0.0997018  ,  0.008032   ,  20.4034    ])
176     , -210397     , array([ 0.092491   ,  0.0997018  ,  0.008032   ,  20.383     ])
180     , -210397     , array([ 0.092491   ,  0.0997018  ,  0.008032   ,  20.4034    ])
184     , -210362     , array([ 0.092491   ,  0.0998015  ,  0.008032   ,  20.383     ])
188     , -210381     , array([ 0.0926451  ,  0.0999006  ,  0.00803144 ,  20.3897    ])
192     , -210381     , array([ 0.0926451  ,  0.0999006  ,  0.00803144 ,  20.4101    ])
196     , -210362     , array([ 0.092491   ,  0.0998015  ,  0.008032   ,  20.383     ])
200     , -210387     , array([ 0.0925937  ,  0.0998343  ,  0.00803163 ,  20.3875    ])
204     , -210386     , array([ 0.0925937  ,  0.0998343  ,  0.00803163 ,  20.4079    ])
208     , -210348     , array([ 0.0926279  ,  0.0999784  ,  0.0080315  ,  20.389     ])
212     , -210382     , array([ 0.0926394  ,  0.0998932  ,  0.00803146 ,  20.3895    ])
216     , -210381     , array([ 0.0926394  ,  0.0998932  ,  0.00803146 ,  20.4099    ])
220     , -210346     , array([ 0.0926432  ,  0.0999981  ,  0.00803145 ,  20.3897    ])
224     , -210381     , array([ 0.0926444  ,  0.0998998  ,  0.00803145 ,  20.3897    ])
228     , -210381     , array([ 0.0926444  ,  0.0998998  ,  0.00803145 ,  20.4101    ])
236     , -210381     , array([ 0.092645   ,  0.0999005  ,  0.00803144 ,  20.3897    ])
240     , -210381     , array([ 0.092645   ,  0.0999005  ,  0.00803144 ,  20.4101    ])
248     , -210381     , array([ 0.0926451  ,  0.0999006  ,  0.00803144 ,  20.3897    ])
252     , -210381     , array([ 0.0926451  ,  0.0999006  ,  0.00803144 ,  20.4101    ])
260     , -210381     , array([ 0.0926451  ,  0.0999006  ,  0.00803144 ,  20.3897    ])
264     , -210381     , array([ 0.0926451  ,  0.0999006  ,  0.00803144 ,  20.4101    ])
272     , -210381     , array([ 0.0926451  ,  0.0999006  ,  0.00803144 ,  20.3897    ])
276     , -210381     , array([ 0.0926451  ,  0.0999006  ,  0.00803144 ,  20.4101    ])
284     , -210381     , array([ 0.0926451  ,  0.0999006  ,  0.00803144 ,  20.3897    ])
288     , -210381     , array([ 0.0926451  ,  0.0999006  ,  0.00803144 ,  20.4101    ])
296     , -210381     , array([ 0.0926451  ,  0.0999006  ,  0.00803144 ,  20.3897    ])
300     , -210381     , array([ 0.0926451  ,  0.0999006  ,  0.00803144 ,  20.4101    ])
308     , -210381     , array([ 0.0926451  ,  0.0999006  ,  0.00803144 ,  20.3897    ])
312     , -210381     , array([ 0.0926451  ,  0.0999006  ,  0.00803144 ,  20.4101    ])
320     , -210883     , array([ 0.0880421  ,  0.0939897  ,  0.00804845 ,  20.1855    ])
324     , -210891     , array([ 0.0880421  ,  0.0939897  ,  0.0080565  ,  20.1855    ])
332     , -210404     , array([ 0.0920905  ,  0.0992845  ,  0.00803344 ,  20.3656    ])
340     , -210349     , array([ 0.0926095  ,  0.0999545  ,  0.00803157 ,  20.3882    ])
Finshed optimization **************************************************
Writing out parameters **************************************************
Writing out SFS **************************************************
Making plots **************************************************
carrying out inference 7 for model 2D.5epoch.fixedN1N3.nomig for pop MN-IR
Beginning optimization ************************************************
4       , -324860     , array([ 0.0151684  ,  0.0574726  ,  0.00621411 ,  13.0843    ])
8       , -227447     , array([ 0.0321481  ,  0.0295533  ,  0.00552642 ,  13.0838    ])
12      , -227445     , array([ 0.0321481  ,  0.0295533  ,  0.00552642 ,  13.0969    ])
20      , -227382     , array([ 0.0321608  ,  0.0295527  ,  0.00553603 ,  13.0848    ])
24      , -227381     , array([ 0.0321608  ,  0.0295527  ,  0.00553603 ,  13.0978    ])
28      , -227262     , array([ 0.0321739  ,  0.0295816  ,  0.00554592 ,  13.0857    ])
32      , -293573     , array([ 0.0587015  ,  0.0286069  ,  0.0781523  ,  14.6033    ])
36      , -293573     , array([ 0.0587015  ,  0.0286069  ,  0.0781523  ,  14.6179    ])
40      , -224031     , array([ 0.0358297  ,  0.02941    ,  0.00890462 ,  13.3453    ])
44      , -216628     , array([ 0.0939012  ,  0.0861115  ,  0.00867806 ,  18.529     ])
48      , -216627     , array([ 0.0939012  ,  0.0861115  ,  0.00867806 ,  18.5476    ])
56      , -216626     , array([ 0.0939199  ,  0.0861307  ,  0.00867802 ,  18.5303    ])
60      , -216625     , array([ 0.0939199  ,  0.0861307  ,  0.00867802 ,  18.5488    ])
64      , -216592     , array([ 0.0939386  ,  0.0862361  ,  0.00867797 ,  18.5316    ])
76      , -216591     , array([ 0.0939433  ,  0.0862408  ,  0.00867796 ,  18.5319    ])
80      , -216624     , array([ 0.093948   ,  0.0861594  ,  0.00867795 ,  18.5322    ])
84      , -216623     , array([ 0.093948   ,  0.0861594  ,  0.00867795 ,  18.5507    ])
92      , -216624     , array([ 0.0939491  ,  0.0861606  ,  0.00867794 ,  18.5323    ])
96      , -216623     , array([ 0.0939491  ,  0.0861606  ,  0.00867794 ,  18.5508    ])
100     , -216591     , array([ 0.0939503  ,  0.086248   ,  0.00867794 ,  18.5324    ])
112     , -216591     , array([ 0.0939506  ,  0.0862483  ,  0.00867794 ,  18.5324    ])
116     , -216623     , array([ 0.0939509  ,  0.0861624  ,  0.00867794 ,  18.5324    ])
120     , -216623     , array([ 0.0939509  ,  0.0861624  ,  0.00867794 ,  18.5509    ])
128     , -216623     , array([ 0.093951   ,  0.0861625  ,  0.00867794 ,  18.5324    ])
132     , -216623     , array([ 0.093951   ,  0.0861625  ,  0.00867794 ,  18.5509    ])
136     , -216591     , array([ 0.093951   ,  0.0862488  ,  0.00867794 ,  18.5324    ])
140     , -215648     , array([ 0.105973   ,  0.0985558  ,  0.00865003 ,  19.3083    ])
144     , -215647     , array([ 0.105973   ,  0.0985558  ,  0.00865003 ,  19.3276    ])
148     , -215616     , array([ 0.105973   ,  0.0986544  ,  0.00865003 ,  19.3083    ])
152     , -215648     , array([ 0.105973   ,  0.0985558  ,  0.00865003 ,  19.3083    ])
156     , -215647     , array([ 0.105973   ,  0.0985558  ,  0.00865003 ,  19.3276    ])
164     , -215648     , array([ 0.105973   ,  0.0985558  ,  0.00865003 ,  19.3083    ])
168     , -215647     , array([ 0.105973   ,  0.0985558  ,  0.00865003 ,  19.3276    ])
172     , -215616     , array([ 0.105973   ,  0.0986545  ,  0.00865003 ,  19.3083    ])
184     , -215616     , array([ 0.105973   ,  0.0986545  ,  0.00865003 ,  19.3083    ])
188     , -215648     , array([ 0.105973   ,  0.0985559  ,  0.00865003 ,  19.3083    ])
192     , -215647     , array([ 0.105973   ,  0.0985559  ,  0.00865003 ,  19.3276    ])
200     , -215648     , array([ 0.105973   ,  0.0985559  ,  0.00865003 ,  19.3083    ])
204     , -215647     , array([ 0.105973   ,  0.0985559  ,  0.00865003 ,  19.3276    ])
208     , -215616     , array([ 0.105973   ,  0.0986545  ,  0.00865003 ,  19.3083    ])
212     , -215587     , array([ 0.106773   ,  0.0993872  ,  0.00864829 ,  19.3579    ])
216     , -215586     , array([ 0.106773   ,  0.0993872  ,  0.00864829 ,  19.3772    ])
224     , -215587     , array([ 0.106773   ,  0.0993872  ,  0.00864829 ,  19.3579    ])
228     , -215586     , array([ 0.106773   ,  0.0993872  ,  0.00864829 ,  19.3772    ])
232     , -215528     , array([ 0.107128   ,  0.099855   ,  0.00864753 ,  19.3797    ])
236     , -215551     , array([ 0.107246   ,  0.0998781  ,  0.00864727 ,  19.387     ])
240     , -215551     , array([ 0.107246   ,  0.0998781  ,  0.00864727 ,  19.4064    ])
248     , -215547     , array([ 0.107301   ,  0.0999353  ,  0.00864715 ,  19.3904    ])
252     , -215546     , array([ 0.107301   ,  0.0999353  ,  0.00864715 ,  19.4098    ])
260     , -215547     , array([ 0.107305   ,  0.0999395  ,  0.00864714 ,  19.3906    ])
264     , -215546     , array([ 0.107305   ,  0.0999395  ,  0.00864714 ,  19.41      ])
272     , -215547     , array([ 0.107305   ,  0.0999396  ,  0.00864714 ,  19.3906    ])
276     , -215546     , array([ 0.107305   ,  0.0999396  ,  0.00864714 ,  19.41      ])
284     , -215547     , array([ 0.107305   ,  0.0999396  ,  0.00864714 ,  19.3906    ])
288     , -215546     , array([ 0.107305   ,  0.0999396  ,  0.00864714 ,  19.41      ])
296     , -215547     , array([ 0.107305   ,  0.0999396  ,  0.00864714 ,  19.3906    ])
300     , -215546     , array([ 0.107305   ,  0.0999396  ,  0.00864714 ,  19.41      ])
308     , -215547     , array([ 0.107305   ,  0.0999396  ,  0.00864714 ,  19.3906    ])
312     , -215546     , array([ 0.107305   ,  0.0999396  ,  0.00864714 ,  19.41      ])
320     , -215547     , array([ 0.107305   ,  0.0999396  ,  0.00864714 ,  19.3906    ])
324     , -215546     , array([ 0.107305   ,  0.0999396  ,  0.00864714 ,  19.41      ])
332     , -215547     , array([ 0.107305   ,  0.0999396  ,  0.00864714 ,  19.3906    ])
336     , -215546     , array([ 0.107305   ,  0.0999396  ,  0.00864714 ,  19.41      ])
344     , -215547     , array([ 0.107305   ,  0.0999396  ,  0.00864714 ,  19.3906    ])
348     , -215546     , array([ 0.107305   ,  0.0999396  ,  0.00864714 ,  19.41      ])
352     , -216595     , array([ 0.0939012  ,  0.0861977  ,  0.00867806 ,  18.529     ])
360     , -215680     , array([ 0.106025   ,  0.0985     ,  0.00865015 ,  19.305     ])
368     , -215591     , array([ 0.106719   ,  0.099331   ,  0.00864841 ,  19.3545    ])
372     , -215590     , array([ 0.106719   ,  0.099331   ,  0.00864841 ,  19.3739    ])
376     , -215529     , array([ 0.107122   ,  0.0998489  ,  0.00864754 ,  19.3793    ])
380     , -215545     , array([ 0.107324   ,  0.0999588  ,  0.0086471  ,  19.3918    ])
384     , -215545     , array([ 0.107324   ,  0.0999588  ,  0.0086471  ,  19.4112    ])
Finshed optimization **************************************************
Writing out parameters **************************************************
Writing out SFS **************************************************
Making plots **************************************************
carrying out inference 8 for model 2D.5epoch.fixedN1N3.nomig for pop MN-IR
Beginning optimization ************************************************
4       , -696747     , array([ 0.0133992  ,  0.099      ,  0.0162684  ,  9.6677     ])
8       , -229396     , array([ 0.0319535  ,  0.0760085  ,  0.0104513  ,  9.61859    ])
12      , -229396     , array([ 0.0319535  ,  0.0760085  ,  0.0104513  ,  9.62821    ])
16      , -222063     , array([ 0.0381906  ,  5.78503e-05,  0.00465223 ,  10.3745    ])
20      , -211474     , array([ 0.0426743  ,  5.04657e-05,  0.00576212 ,  10.4033    ])
24      , -211474     , array([ 0.0426743  ,  5.04657e-05,  0.00576212 ,  10.4138    ])
32      , -211474     , array([ 0.0426751  ,  5.04669e-05,  0.00576206 ,  10.4312    ])
36      , -211473     , array([ 0.0426751  ,  5.04669e-05,  0.00576206 ,  10.4416    ])
44      , -211474     , array([ 0.0426751  ,  5.04669e-05,  0.00576206 ,  10.4312    ])
48      , -211473     , array([ 0.0426751  ,  5.04669e-05,  0.00576206 ,  10.4416    ])
52      , -211311     , array([ 0.042945   ,  5.0891e-05 ,  0.00574344 ,  24.2181    ])
56      , -210985     , array([ 0.043215   ,  5.04627e-05,  0.00580912 ,  25.0887    ])
60      , -210985     , array([ 0.043215   ,  5.04627e-05,  0.00580912 ,  25.1138    ])
64      , -209874     , array([ 0.0443119  ,  4.90297e-05,  0.0060794  ,  28.8958    ])
76      , -209874     , array([ 0.0443119  ,  4.90297e-05,  0.0060794  ,  28.8958    ])
80      , -209874     , array([ 0.044312   ,  4.89806e-05,  0.00607942 ,  28.8965    ])
84      , -209874     , array([ 0.044312   ,  4.89806e-05,  0.00607942 ,  28.9254    ])
92      , -209874     , array([ 0.044312   ,  4.89806e-05,  0.00607942 ,  28.8965    ])
96      , -209874     , array([ 0.044312   ,  4.89806e-05,  0.00607942 ,  28.9254    ])
100     , -209874     , array([ 0.044312   ,  4.90296e-05,  0.00607943 ,  28.8967    ])
112     , -209874     , array([ 0.044312   ,  4.90296e-05,  0.00607943 ,  28.8967    ])
116     , -209874     , array([ 0.044312   ,  4.89806e-05,  0.00607943 ,  28.8967    ])
120     , -209874     , array([ 0.044312   ,  4.89806e-05,  0.00607943 ,  28.9256    ])
128     , -209874     , array([ 0.044312   ,  4.89806e-05,  0.00607943 ,  28.8967    ])
132     , -209874     , array([ 0.044312   ,  4.89806e-05,  0.00607943 ,  28.9256    ])
136     , -209874     , array([ 0.044312   ,  4.90296e-05,  0.00607943 ,  28.8967    ])
148     , -209874     , array([ 0.044312   ,  4.90296e-05,  0.00607943 ,  28.8967    ])
152     , -209874     , array([ 0.044312   ,  4.89806e-05,  0.00607943 ,  28.8967    ])
156     , -209874     , array([ 0.044312   ,  4.89806e-05,  0.00607943 ,  28.9257    ])
160     , -209808     , array([ 0.0444005  ,  4.89145e-05,  0.00610006 ,  29.5471    ])
164     , -209764     , array([ 0.0444589  ,  4.87898e-05,  0.00611372 ,  29.9844    ])
172     , -209808     , array([ 0.0444005  ,  4.89145e-05,  0.00610006 ,  29.5471    ])
176     , -209779     , array([ 0.0444394  ,  4.88151e-05,  0.00610916 ,  29.8379    ])
180     , -209778     , array([ 0.0444394  ,  4.88151e-05,  0.00610916 ,  29.8678    ])
184     , -209769     , array([ 0.0444524  ,  4.88471e-05,  0.0061122  ,  29.9355    ])
188     , -209766     , array([ 0.0444568  ,  4.87926e-05,  0.00611321 ,  29.9681    ])
192     , -209766     , array([ 0.0444568  ,  4.87926e-05,  0.00611321 ,  29.9981    ])
196     , -209765     , array([ 0.0444582  ,  4.88396e-05,  0.00611355 ,  29.979     ])
200     , -209764     , array([ 0.0444588  ,  4.879e-05  ,  0.00611368 ,  29.9833    ])
208     , -209764     , array([ 0.0444589  ,  4.88387e-05,  0.00611371 ,  29.9842    ])
212     , -209764     , array([ 0.0444589  ,  4.87899e-05,  0.00611372 ,  29.9844    ])
220     , -209764     , array([ 0.0444589  ,  4.88387e-05,  0.00611372 ,  29.9844    ])
224     , -209764     , array([ 0.0444589  ,  4.87898e-05,  0.00611372 ,  29.9844    ])
232     , -209764     , array([ 0.0444589  ,  4.88387e-05,  0.00611372 ,  29.9844    ])
236     , -209764     , array([ 0.0444589  ,  4.87898e-05,  0.00611372 ,  29.9844    ])
244     , -209764     , array([ 0.0444589  ,  4.88387e-05,  0.00611372 ,  29.9844    ])
248     , -209764     , array([ 0.0444589  ,  4.87898e-05,  0.00611372 ,  29.9844    ])
256     , -209764     , array([ 0.0444589  ,  4.88387e-05,  0.00611372 ,  29.9844    ])
260     , -209764     , array([ 0.0444589  ,  4.87898e-05,  0.00611372 ,  29.9844    ])
268     , -209764     , array([ 0.0444589  ,  4.88387e-05,  0.00611372 ,  29.9844    ])
272     , -209764     , array([ 0.0444589  ,  4.87898e-05,  0.00611372 ,  29.9844    ])
280     , -209764     , array([ 0.0444589  ,  4.88387e-05,  0.00611372 ,  29.9844    ])
284     , -209764     , array([ 0.0444589  ,  4.87898e-05,  0.00611372 ,  29.9844    ])
292     , -209764     , array([ 0.0444589  ,  4.88387e-05,  0.00611372 ,  29.9844    ])
296     , -209764     , array([ 0.0444589  ,  4.87898e-05,  0.00611372 ,  29.9844    ])
304     , -209764     , array([ 0.0444589  ,  4.88387e-05,  0.00611372 ,  29.9844    ])
308     , -209764     , array([ 0.0444589  ,  4.87898e-05,  0.00611372 ,  29.9844    ])
316     , -209764     , array([ 0.0444589  ,  4.88387e-05,  0.00611372 ,  29.9844    ])
320     , -209764     , array([ 0.0444589  ,  4.87898e-05,  0.00611372 ,  29.9844    ])
332     , -209808     , array([ 0.0444448  ,  4.88658e-05,  0.00610003 ,  29.5462    ])
336     , -209775     , array([ 0.0444446  ,  4.88084e-05,  0.00611038 ,  29.8769    ])
340     , -209757     , array([ 0.0444446  ,  4.88084e-05,  0.00611649 ,  29.8769    ])
344     , -209767     , array([ 0.0444557  ,  4.8794e-05 ,  0.00611296 ,  29.9601    ])
348     , -209766     , array([ 0.0444557  ,  4.8794e-05 ,  0.00611296 ,  29.9901    ])
352     , -209764     , array([ 0.044503   ,  4.87904e-05,  0.00611361 ,  29.981     ])
356     , -209766     , array([ 0.044457   ,  4.87923e-05,  0.00611327 ,  29.9699    ])
Finshed optimization **************************************************
Writing out parameters **************************************************
Writing out SFS **************************************************
Making plots **************************************************
carrying out inference 9 for model 2D.5epoch.fixedN1N3.nomig for pop MN-IR
Beginning optimization ************************************************
4       , -802406     , array([ 0.00516396 ,  0.099      ,  0.00729189 ,  6.53345    ])
8       , -546997     , array([ 0.0122232  ,  0.098998   ,  0.00430097 ,  6.49267    ])
12      , -546997     , array([ 0.0122232  ,  0.098998   ,  0.00430097 ,  6.49916    ])
16      , -303587     , array([ 0.0790128  ,  0.0751684  ,  0.00284073 ,  6.49109    ])
28      , -303184     , array([ 0.0792143  ,  0.0755047  ,  0.00284486 ,  6.49196    ])
32      , -302839     , array([ 0.0794166  ,  0.0757672  ,  0.00284901 ,  6.49284    ])
36      , -302834     , array([ 0.0794166  ,  0.0757672  ,  0.00284901 ,  6.49933    ])
44      , -302737     , array([ 0.0794675  ,  0.0758524  ,  0.00285005 ,  6.49305    ])
48      , -302732     , array([ 0.0794675  ,  0.0758524  ,  0.00285005 ,  6.49955    ])
52      , -302575     , array([ 0.0795186  ,  0.0760139  ,  0.0028511  ,  6.49327    ])
64      , -302549     , array([ 0.0795315  ,  0.0760356  ,  0.00285136 ,  6.49333    ])
68      , -302582     , array([ 0.0795444  ,  0.0759812  ,  0.00285163 ,  6.49339    ])
72      , -302577     , array([ 0.0795444  ,  0.0759812  ,  0.00285163 ,  6.49988    ])
80      , -302576     , array([ 0.0795477  ,  0.0759867  ,  0.00285169 ,  6.4934     ])
84      , -302571     , array([ 0.0795477  ,  0.0759867  ,  0.00285169 ,  6.4999     ])
88      , -302510     , array([ 0.0795509  ,  0.0760681  ,  0.00285176 ,  6.49341    ])
100     , -302508     , array([ 0.0795518  ,  0.0760695  ,  0.00285177 ,  6.49342    ])
104     , -302566     , array([ 0.0795526  ,  0.0759948  ,  0.00285179 ,  6.49342    ])
108     , -302561     , array([ 0.0795526  ,  0.0759948  ,  0.00285179 ,  6.49992    ])
112     , -287425     , array([ 0.0876359  ,  0.0901356  ,  0.00301375 ,  6.52661    ])
124     , -287425     , array([ 0.087636   ,  0.0901358  ,  0.00301375 ,  6.52661    ])
128     , -287485     , array([ 0.0876361  ,  0.0900459  ,  0.00301375 ,  6.52661    ])
132     , -287480     , array([ 0.0876361  ,  0.0900459  ,  0.00301375 ,  6.53314    ])
136     , -282666     , array([ 0.0904798  ,  0.095326   ,  0.00306919 ,  6.5376     ])
140     , -279627     , array([ 0.0924071  ,  0.0988151  ,  0.00310633 ,  6.54486    ])
144     , -279622     , array([ 0.0924071  ,  0.0988151  ,  0.00310633 ,  6.55141    ])
152     , -279627     , array([ 0.0924071  ,  0.0988151  ,  0.00310633 ,  6.54486    ])
156     , -279622     , array([ 0.0924071  ,  0.0988151  ,  0.00310633 ,  6.55141    ])
160     , -278890     , array([ 0.0928451  ,  0.0997375  ,  0.00311473 ,  6.54649    ])
164     , -278950     , array([ 0.0928451  ,  0.0996379  ,  0.00311473 ,  6.54649    ])
168     , -278945     , array([ 0.0928451  ,  0.0996379  ,  0.00311473 ,  6.55304    ])
172     , -278890     , array([ 0.0928451  ,  0.0997375  ,  0.00311473 ,  6.54649    ])
176     , -278775     , array([ 0.0929583  ,  0.0998509  ,  0.0031169  ,  6.54691    ])
180     , -278770     , array([ 0.0929583  ,  0.0998509  ,  0.0031169  ,  6.55346    ])
184     , -278715     , array([ 0.0929583  ,  0.0999508  ,  0.0031169  ,  6.54691    ])
188     , -278659     , array([ 0.0930331  ,  0.0999917  ,  0.00311833 ,  6.54719    ])
192     , -278654     , array([ 0.0930331  ,  0.0999917  ,  0.00311833 ,  6.55374    ])
196     , -278715     , array([ 0.0929583  ,  0.0999508  ,  0.0031169  ,  6.54691    ])
200     , -278698     , array([ 0.0930081  ,  0.0999447  ,  0.00311785 ,  6.5471     ])
204     , -278693     , array([ 0.0930081  ,  0.0999447  ,  0.00311785 ,  6.55365    ])
212     , -278661     , array([ 0.093032   ,  0.0999896  ,  0.00311831 ,  6.54718    ])
216     , -278656     , array([ 0.093032   ,  0.0999896  ,  0.00311831 ,  6.55374    ])
224     , -278659     , array([ 0.093033   ,  0.0999916  ,  0.00311833 ,  6.54719    ])
228     , -278654     , array([ 0.093033   ,  0.0999916  ,  0.00311833 ,  6.55374    ])
236     , -278659     , array([ 0.0930331  ,  0.0999917  ,  0.00311833 ,  6.54719    ])
240     , -278654     , array([ 0.0930331  ,  0.0999917  ,  0.00311833 ,  6.55374    ])
248     , -278659     , array([ 0.0930331  ,  0.0999917  ,  0.00311833 ,  6.54719    ])
252     , -278654     , array([ 0.0930331  ,  0.0999917  ,  0.00311833 ,  6.55374    ])
260     , -278659     , array([ 0.0930331  ,  0.0999917  ,  0.00311833 ,  6.54719    ])
264     , -278654     , array([ 0.0930331  ,  0.0999917  ,  0.00311833 ,  6.55374    ])
272     , -278659     , array([ 0.0930331  ,  0.0999917  ,  0.00311833 ,  6.54719    ])
276     , -278654     , array([ 0.0930331  ,  0.0999917  ,  0.00311833 ,  6.55374    ])
284     , -278659     , array([ 0.0930331  ,  0.0999917  ,  0.00311833 ,  6.54719    ])
288     , -278654     , array([ 0.0930331  ,  0.0999917  ,  0.00311833 ,  6.55374    ])
296     , -278659     , array([ 0.0930331  ,  0.0999917  ,  0.00311833 ,  6.54719    ])
300     , -278654     , array([ 0.0930331  ,  0.0999917  ,  0.00311833 ,  6.55374    ])
308     , -278659     , array([ 0.0930331  ,  0.0999917  ,  0.00311833 ,  6.54719    ])
312     , -278654     , array([ 0.0930331  ,  0.0999917  ,  0.00311833 ,  6.55374    ])
324     , -288451     , array([ 0.0870684  ,  0.0890258  ,  0.00300259 ,  6.52437    ])
328     , -288274     , array([ 0.0870684  ,  0.0890258  ,  0.0030056  ,  6.52437    ])
332     , -281256     , array([ 0.0914905  ,  0.0969333  ,  0.00308695 ,  6.54108    ])
340     , -279400     , array([ 0.092515   ,  0.0991167  ,  0.0031084  ,  6.54526    ])
344     , -279026     , array([ 0.0927961  ,  0.0995457  ,  0.00311379 ,  6.54631    ])
348     , -278856     , array([ 0.0927961  ,  0.0995457  ,  0.00311691 ,  6.54631    ])
352     , -278866     , array([ 0.09303    ,  0.0998107  ,  0.00311649 ,  6.54683    ])
Finshed optimization **************************************************
Writing out parameters **************************************************
Writing out SFS **************************************************
Making plots **************************************************
carrying out inference 10 for model 2D.5epoch.fixedN1N3.nomig for pop MN-IR
Beginning optimization ************************************************
4       , -688199     , array([ 0.0102658  ,  0.099      ,  0.0100465  ,  13.3556    ])
8       , -306274     , array([ 0.0236715  ,  0.0931256  ,  0.00570866 ,  13.2995    ])
12      , -306274     , array([ 0.0236715  ,  0.0931256  ,  0.00570866 ,  13.3128    ])
16      , -1.00277e+06, array([ 0.669189   ,  0.0729857  ,  0.000597519,  13.0774    ])
20      , -242022     , array([ 0.0541495  ,  0.0876508  ,  0.00326458 ,  13.2442    ])
24      , -242019     , array([ 0.0541495  ,  0.0876508  ,  0.00326458 ,  13.2574    ])
32      , -240659     , array([ 0.0548911  ,  0.0885578  ,  0.00330175 ,  13.2507    ])
36      , -240656     , array([ 0.0548911  ,  0.0885578  ,  0.00330175 ,  13.264     ])
40      , -238062     , array([ 0.0563641  ,  0.090441   ,  0.00337535 ,  13.2635    ])
52      , -237764     , array([ 0.0565434  ,  0.0906587  ,  0.00338429 ,  13.265     ])
56      , -237473     , array([ 0.056736   ,  0.0908014  ,  0.00339388 ,  13.2667    ])
60      , -237470     , array([ 0.056736   ,  0.0908014  ,  0.00339388 ,  13.28      ])
68      , -237404     , array([ 0.0567794  ,  0.0908541  ,  0.00339605 ,  13.2671    ])
72      , -237401     , array([ 0.0567794  ,  0.0908541  ,  0.00339605 ,  13.2803    ])
76      , -237277     , array([ 0.0568229  ,  0.0909977  ,  0.00339821 ,  13.2674    ])
88      , -237260     , array([ 0.0568338  ,  0.0910109  ,  0.00339875 ,  13.2675    ])
92      , -236873     , array([ 0.0571153  ,  0.0912605  ,  0.00341276 ,  13.2699    ])
96      , -236870     , array([ 0.0571153  ,  0.0912605  ,  0.00341276 ,  13.2832    ])
104     , -236868     , array([ 0.057118   ,  0.0912638  ,  0.0034129  ,  13.2699    ])
108     , -236866     , array([ 0.057118   ,  0.0912638  ,  0.0034129  ,  13.2832    ])
112     , -236773     , array([ 0.0571424  ,  0.0913846  ,  0.00341411 ,  13.2701    ])
124     , -236771     , array([ 0.0571431  ,  0.0913854  ,  0.00341414 ,  13.2701    ])
128     , -236819     , array([ 0.0571492  ,  0.0913015  ,  0.00341445 ,  13.2702    ])
132     , -236816     , array([ 0.0571492  ,  0.0913015  ,  0.00341445 ,  13.2835    ])
140     , -236819     , array([ 0.0571493  ,  0.0913017  ,  0.00341446 ,  13.2702    ])
144     , -236816     , array([ 0.0571493  ,  0.0913017  ,  0.00341446 ,  13.2835    ])
148     , -236759     , array([ 0.0571509  ,  0.0913949  ,  0.00341453 ,  13.2702    ])
152     , -230734     , array([ 0.0612967  ,  0.0962734  ,  0.00361952 ,  13.3041    ])
156     , -230732     , array([ 0.0612967  ,  0.0962734  ,  0.00361952 ,  13.3174    ])
164     , -230733     , array([ 0.0612969  ,  0.0962758  ,  0.00361951 ,  13.3041    ])
168     , -230731     , array([ 0.0612969  ,  0.0962758  ,  0.00361951 ,  13.3174    ])
172     , -230677     , array([ 0.0612971  ,  0.0963745  ,  0.0036195  ,  13.3041    ])
184     , -230677     , array([ 0.0612971  ,  0.0963751  ,  0.0036195  ,  13.3041    ])
188     , -230732     , array([ 0.0612972  ,  0.0962794  ,  0.00361949 ,  13.3041    ])
192     , -230729     , array([ 0.0612972  ,  0.0962794  ,  0.00361949 ,  13.3174    ])
200     , -230732     , array([ 0.0612972  ,  0.0962796  ,  0.00361949 ,  13.3041    ])
204     , -230729     , array([ 0.0612972  ,  0.0962796  ,  0.00361949 ,  13.3174    ])
208     , -230676     , array([ 0.0612972  ,  0.096376   ,  0.00361949 ,  13.3041    ])
220     , -230676     , array([ 0.0612972  ,  0.0963761  ,  0.00361949 ,  13.3041    ])
224     , -230732     , array([ 0.0612972  ,  0.0962798  ,  0.00361949 ,  13.3041    ])
228     , -230729     , array([ 0.0612972  ,  0.0962798  ,  0.00361949 ,  13.3174    ])
236     , -230732     , array([ 0.0612972  ,  0.0962798  ,  0.00361949 ,  13.3041    ])
240     , -230729     , array([ 0.0612972  ,  0.0962798  ,  0.00361949 ,  13.3174    ])
244     , -230676     , array([ 0.0612972  ,  0.0963761  ,  0.00361949 ,  13.3041    ])
248     , -230028     , array([ 0.0614616  ,  0.0982736  ,  0.0036111  ,  13.3097    ])
252     , -230026     , array([ 0.0614616  ,  0.0982736  ,  0.0036111  ,  13.323     ])
256     , -229523     , array([ 0.0615704  ,  0.0997118  ,  0.00360557 ,  13.3134    ])
268     , -229523     , array([ 0.0615704  ,  0.0997118  ,  0.00360557 ,  13.3134    ])
272     , -229577     , array([ 0.0615704  ,  0.0996121  ,  0.00360557 ,  13.3134    ])
276     , -229574     , array([ 0.0615704  ,  0.0996121  ,  0.00360557 ,  13.3267    ])
280     , -229448     , array([ 0.0615889  ,  0.0999413  ,  0.00360464 ,  13.314     ])
284     , -229451     , array([ 0.0616011  ,  0.0999931  ,  0.00360402 ,  13.3144    ])
288     , -229448     , array([ 0.0616011  ,  0.0999931  ,  0.00360402 ,  13.3277    ])
292     , -229448     , array([ 0.0615889  ,  0.0999413  ,  0.00360464 ,  13.314     ])
296     , -229468     , array([ 0.061597   ,  0.0999425  ,  0.00360422 ,  13.3143    ])
300     , -229465     , array([ 0.061597   ,  0.0999425  ,  0.00360422 ,  13.3276    ])
308     , -229452     , array([ 0.0616009  ,  0.0999908  ,  0.00360402 ,  13.3144    ])
312     , -229449     , array([ 0.0616009  ,  0.0999908  ,  0.00360402 ,  13.3277    ])
320     , -229451     , array([ 0.0616011  ,  0.099993   ,  0.00360402 ,  13.3144    ])
324     , -229449     , array([ 0.0616011  ,  0.099993   ,  0.00360402 ,  13.3277    ])
332     , -229451     , array([ 0.0616011  ,  0.0999931  ,  0.00360402 ,  13.3144    ])
336     , -229448     , array([ 0.0616011  ,  0.0999931  ,  0.00360402 ,  13.3277    ])
344     , -229451     , array([ 0.0616011  ,  0.0999931  ,  0.00360402 ,  13.3144    ])
348     , -229448     , array([ 0.0616011  ,  0.0999931  ,  0.00360402 ,  13.3277    ])
356     , -229451     , array([ 0.0616011  ,  0.0999931  ,  0.00360402 ,  13.3144    ])
360     , -229448     , array([ 0.0616011  ,  0.0999931  ,  0.00360402 ,  13.3277    ])
368     , -229451     , array([ 0.0616011  ,  0.0999931  ,  0.00360402 ,  13.3144    ])
372     , -229448     , array([ 0.0616011  ,  0.0999931  ,  0.00360402 ,  13.3277    ])
380     , -229451     , array([ 0.0616011  ,  0.0999931  ,  0.00360402 ,  13.3144    ])
384     , -229448     , array([ 0.0616011  ,  0.0999931  ,  0.00360402 ,  13.3277    ])
392     , -229451     , array([ 0.0616011  ,  0.0999931  ,  0.00360402 ,  13.3144    ])
396     , -229448     , array([ 0.0616011  ,  0.0999931  ,  0.00360402 ,  13.3277    ])
404     , -229451     , array([ 0.0616011  ,  0.0999931  ,  0.00360402 ,  13.3144    ])
408     , -229448     , array([ 0.0616011  ,  0.0999931  ,  0.00360402 ,  13.3277    ])
420     , -230030     , array([ 0.0614611  ,  0.0982674  ,  0.00361113 ,  13.3097    ])
424     , -229914     , array([ 0.0614611  ,  0.0982674  ,  0.00361474 ,  13.3097    ])
428     , -229744     , array([ 0.061605   ,  0.0992798  ,  0.00360694 ,  13.3125    ])
432     , -229518     , array([ 0.0615847  ,  0.0997899  ,  0.00360485 ,  13.3138    ])
436     , -229402     , array([ 0.0615847  ,  0.0997899  ,  0.00360845 ,  13.3138    ])
440     , -229476     , array([ 0.061595   ,  0.0999178  ,  0.00360432 ,  13.3142    ])
444     , -229473     , array([ 0.061595   ,  0.0999178  ,  0.00360432 ,  13.3275    ])
Finshed optimization **************************************************
Writing out parameters **************************************************
Writing out SFS **************************************************
Making plots **************************************************
carrying out inference 11 for model 2D.5epoch.fixedN1N3.nomig for pop MN-IR
Beginning optimization ************************************************
4       , -379690     , array([ 0.0148323  ,  0.0616143  ,  0.0073591  ,  17.2492    ])
8       , -217183     , array([ 0.0316886  ,  0.0322285  ,  0.00630003 ,  17.2387    ])
12      , -217182     , array([ 0.0316886  ,  0.0322285  ,  0.00630003 ,  17.256     ])
20      , -217007     , array([ 0.0318719  ,  0.0323397  ,  0.00637719 ,  17.257     ])
24      , -217006     , array([ 0.0318719  ,  0.0323397  ,  0.00637719 ,  17.2743    ])
28      , -216125     , array([ 0.0333223  ,  0.0332433  ,  0.00700525 ,  17.3988    ])
32      , -214129     , array([ 0.041939   ,  0.0433456  ,  0.00695621 ,  18.3491    ])
36      , -214128     , array([ 0.041939   ,  0.0433456  ,  0.00695621 ,  18.3675    ])
44      , -214129     , array([ 0.0419396  ,  0.0433462  ,  0.00695621 ,  18.3492    ])
48      , -214128     , array([ 0.0419396  ,  0.0433462  ,  0.00695621 ,  18.3675    ])
52      , -214082     , array([ 0.0419433  ,  0.0433941  ,  0.00695619 ,  18.3496    ])
56      , -210134     , array([ 0.0664369  ,  0.073845   ,  0.00685916 ,  20.4086    ])
60      , -210134     , array([ 0.0664369  ,  0.073845   ,  0.00685916 ,  20.429     ])
68      , -210134     , array([ 0.066437   ,  0.0738451  ,  0.00685916 ,  20.4086    ])
72      , -210133     , array([ 0.066437   ,  0.0738451  ,  0.00685916 ,  20.429     ])
76      , -210091     , array([ 0.066437   ,  0.0739191  ,  0.00685916 ,  20.4086    ])
80      , -208887     , array([ 0.0773261  ,  0.0880357  ,  0.00682744 ,  21.1375    ])
84      , -208886     , array([ 0.0773261  ,  0.0880357  ,  0.00682744 ,  21.1587    ])
92      , -208887     , array([ 0.0773318  ,  0.0880432  ,  0.00682745 ,  21.1307    ])
96      , -208886     , array([ 0.0773318  ,  0.0880432  ,  0.00682745 ,  21.1519    ])
100     , -208844     , array([ 0.0773528  ,  0.0881591  ,  0.00682748 ,  21.1056    ])
112     , -208843     , array([ 0.0773542  ,  0.088161   ,  0.00682749 ,  21.1039    ])
116     , -208885     , array([ 0.0773595  ,  0.0880798  ,  0.00682749 ,  21.0976    ])
120     , -208884     , array([ 0.0773595  ,  0.0880798  ,  0.00682749 ,  21.1187    ])
128     , -208885     , array([ 0.0773598  ,  0.0880803  ,  0.00682749 ,  21.0972    ])
132     , -208884     , array([ 0.0773598  ,  0.0880803  ,  0.00682749 ,  21.1183    ])
136     , -208843     , array([ 0.0773612  ,  0.0881702  ,  0.0068275  ,  21.0956    ])
148     , -208843     , array([ 0.0773612  ,  0.0881703  ,  0.0068275  ,  21.0955    ])
152     , -208885     , array([ 0.0773616  ,  0.0880826  ,  0.0068275  ,  21.0952    ])
156     , -208884     , array([ 0.0773616  ,  0.0880826  ,  0.0068275  ,  21.1163    ])
164     , -208885     , array([ 0.0773616  ,  0.0880826  ,  0.0068275  ,  21.0951    ])
168     , -208884     , array([ 0.0773616  ,  0.0880826  ,  0.0068275  ,  21.1162    ])
172     , -208843     , array([ 0.0773617  ,  0.0881708  ,  0.0068275  ,  21.095     ])
176     , -208490     , array([ 0.0849579  ,  0.0981886  ,  0.00683976 ,  14.0072    ])
180     , -208489     , array([ 0.0849579  ,  0.0981886  ,  0.00683976 ,  14.0212    ])
188     , -208490     , array([ 0.0849579  ,  0.0981886  ,  0.00683976 ,  14.0072    ])
192     , -208489     , array([ 0.0849579  ,  0.0981886  ,  0.00683976 ,  14.0212    ])
196     , -208449     , array([ 0.084958   ,  0.0982869  ,  0.00683976 ,  14.0072    ])
208     , -208449     , array([ 0.084958   ,  0.0982869  ,  0.00683976 ,  14.0072    ])
212     , -208490     , array([ 0.084958   ,  0.0981886  ,  0.00683976 ,  14.0072    ])
216     , -208489     , array([ 0.084958   ,  0.0981886  ,  0.00683976 ,  14.0212    ])
224     , -208490     , array([ 0.084958   ,  0.0981886  ,  0.00683976 ,  14.0072    ])
228     , -208489     , array([ 0.084958   ,  0.0981886  ,  0.00683976 ,  14.0212    ])
236     , -208490     , array([ 0.084958   ,  0.0981886  ,  0.00683976 ,  14.0072    ])
240     , -208489     , array([ 0.084958   ,  0.0981886  ,  0.00683976 ,  14.0212    ])
244     , -208449     , array([ 0.084958   ,  0.0982869  ,  0.00683976 ,  14.0072    ])
248     , -208424     , array([ 0.0856738  ,  0.0991428  ,  0.00683883 ,  14.0395    ])
252     , -208423     , array([ 0.0856738  ,  0.0991428  ,  0.00683883 ,  14.0536    ])
256     , -208341     , array([ 0.0861496  ,  0.0998774  ,  0.00683822 ,  14.0609    ])
260     , -208367     , array([ 0.0863119  ,  0.0999944  ,  0.00683801 ,  14.0682    ])
264     , -208366     , array([ 0.0863119  ,  0.0999944  ,  0.00683801 ,  14.0823    ])
268     , -208341     , array([ 0.0861496  ,  0.0998774  ,  0.00683822 ,  14.0609    ])
272     , -208371     , array([ 0.0862578  ,  0.0999221  ,  0.00683808 ,  14.0658    ])
276     , -208370     , array([ 0.0862578  ,  0.0999221  ,  0.00683808 ,  14.0799    ])
284     , -208367     , array([ 0.0863095  ,  0.0999911  ,  0.00683801 ,  14.0681    ])
288     , -208366     , array([ 0.0863095  ,  0.0999911  ,  0.00683801 ,  14.0822    ])
296     , -208367     , array([ 0.0863118  ,  0.0999942  ,  0.00683801 ,  14.0682    ])
300     , -208366     , array([ 0.0863118  ,  0.0999942  ,  0.00683801 ,  14.0823    ])
308     , -208367     , array([ 0.0863119  ,  0.0999944  ,  0.00683801 ,  14.0682    ])
312     , -208366     , array([ 0.0863119  ,  0.0999944  ,  0.00683801 ,  14.0823    ])
320     , -208367     , array([ 0.0863119  ,  0.0999944  ,  0.00683801 ,  14.0682    ])
324     , -208366     , array([ 0.0863119  ,  0.0999944  ,  0.00683801 ,  14.0823    ])
332     , -208367     , array([ 0.0863119  ,  0.0999944  ,  0.00683801 ,  14.0682    ])
336     , -208366     , array([ 0.0863119  ,  0.0999944  ,  0.00683801 ,  14.0823    ])
344     , -208367     , array([ 0.0863119  ,  0.0999944  ,  0.00683801 ,  14.0682    ])
348     , -208366     , array([ 0.0863119  ,  0.0999944  ,  0.00683801 ,  14.0823    ])
356     , -208367     , array([ 0.0863119  ,  0.0999944  ,  0.00683801 ,  14.0682    ])
360     , -208366     , array([ 0.0863119  ,  0.0999944  ,  0.00683801 ,  14.0823    ])
368     , -208367     , array([ 0.0863119  ,  0.0999944  ,  0.00683801 ,  14.0682    ])
372     , -208366     , array([ 0.0863119  ,  0.0999944  ,  0.00683801 ,  14.0823    ])
380     , -208367     , array([ 0.0863119  ,  0.0999944  ,  0.00683801 ,  14.0682    ])
384     , -208366     , array([ 0.0863119  ,  0.0999944  ,  0.00683801 ,  14.0823    ])
392     , -208367     , array([ 0.0863119  ,  0.0999944  ,  0.00683801 ,  14.0682    ])
396     , -208366     , array([ 0.0863119  ,  0.0999944  ,  0.00683801 ,  14.0823    ])
404     , -208367     , array([ 0.0863119  ,  0.0999944  ,  0.00683801 ,  14.0682    ])
408     , -208366     , array([ 0.0863119  ,  0.0999944  ,  0.00683801 ,  14.0823    ])
420     , -208430     , array([ 0.086131   ,  0.0996379  ,  0.00683835 ,  14.0562    ])
428     , -208417     , array([ 0.086268   ,  0.0998206  ,  0.00683818 ,  14.0624    ])
432     , -208372     , array([ 0.0862502  ,  0.099912   ,  0.00683809 ,  14.0654    ])
436     , -208362     , array([ 0.0862502  ,  0.099912   ,  0.00684493 ,  14.0654    ])
440     , -208373     , array([ 0.0862435  ,  0.099903   ,  0.0068381  ,  14.0651    ])
Finshed optimization **************************************************
Writing out parameters **************************************************
Writing out SFS **************************************************
Making plots **************************************************
carrying out inference 12 for model 2D.5epoch.fixedN1N3.nomig for pop MN-IR
Beginning optimization ************************************************
4       , -741037     , array([ 0.00575428 ,  0.0703511  ,  0.00550888 ,  9.92951    ])
8       , -399108     , array([ 0.0147561  ,  0.0694672  ,  0.003821   ,  9.90146    ])
12      , -399107     , array([ 0.0147561  ,  0.0694672  ,  0.003821   ,  9.91137    ])
16      , -750278     , array([ 0.6381     ,  0.0661074  ,  0.000887914,  9.79006    ])
20      , -291955     , array([ 0.0439231  ,  0.0684573  ,  0.00250405 ,  9.86908    ])
24      , -291950     , array([ 0.0439231  ,  0.0684573  ,  0.00250405 ,  9.87895    ])
32      , -290582     , array([ 0.0443184  ,  0.0687819  ,  0.00252484 ,  9.87211    ])
36      , -290577     , array([ 0.0443184  ,  0.0687819  ,  0.00252484 ,  9.88199    ])
40      , -289073     , array([ 0.0447236  ,  0.0691822  ,  0.00254613 ,  9.87519    ])
52      , -288742     , array([ 0.044822   ,  0.0692625  ,  0.0025513  ,  9.87594    ])
56      , -288483     , array([ 0.0449207  ,  0.0692738  ,  0.00255648 ,  9.87668    ])
60      , -288478     , array([ 0.0449207  ,  0.0692738  ,  0.00255648 ,  9.88657    ])
68      , -288399     , array([ 0.0449457  ,  0.0692941  ,  0.00255779 ,  9.87687    ])
72      , -288394     , array([ 0.0449457  ,  0.0692941  ,  0.00255779 ,  9.88675    ])
76      , -288240     , array([ 0.0449708  ,  0.0693839  ,  0.00255911 ,  9.87706    ])
88      , -288218     , array([ 0.0449772  ,  0.0693891  ,  0.00255945 ,  9.87711    ])
92      , -288269     , array([ 0.0449837  ,  0.069325   ,  0.00255979 ,  9.87716    ])
96      , -288264     , array([ 0.0449837  ,  0.069325   ,  0.00255979 ,  9.88704    ])
100     , -244022     , array([ 0.0650575  ,  0.0843184  ,  0.00359814 ,  10.003     ])
112     , -244007     , array([ 0.0650609  ,  0.0843511  ,  0.00359798 ,  10.0031    ])
116     , -244054     , array([ 0.0650644  ,  0.0842995  ,  0.00359782 ,  10.0031    ])
120     , -244051     , array([ 0.0650644  ,  0.0842995  ,  0.00359782 ,  10.0131    ])
128     , -244050     , array([ 0.0650653  ,  0.0843077  ,  0.00359778 ,  10.0031    ])
132     , -244047     , array([ 0.0650653  ,  0.0843077  ,  0.00359778 ,  10.0131    ])
136     , -243983     , array([ 0.0650661  ,  0.0844003  ,  0.00359774 ,  10.0031    ])
148     , -243982     , array([ 0.0650664  ,  0.0844023  ,  0.00359773 ,  10.0031    ])
152     , -244044     , array([ 0.0650666  ,  0.08432    ,  0.00359772 ,  10.0031    ])
156     , -244041     , array([ 0.0650666  ,  0.08432    ,  0.00359772 ,  10.0131    ])
164     , -244044     , array([ 0.0650666  ,  0.0843205  ,  0.00359772 ,  10.0031    ])
168     , -244041     , array([ 0.0650666  ,  0.0843205  ,  0.00359772 ,  10.0131    ])
172     , -243981     , array([ 0.0650667  ,  0.0844054  ,  0.00359772 ,  10.0031    ])
176     , -238241     , array([ 0.0664199  ,  0.0979796  ,  0.00353739 ,  10.0142    ])
180     , -238238     , array([ 0.0664199  ,  0.0979796  ,  0.00353739 ,  10.0243    ])
188     , -238241     , array([ 0.0664199  ,  0.0979797  ,  0.00353739 ,  10.0142    ])
192     , -238238     , array([ 0.0664199  ,  0.0979797  ,  0.00353739 ,  10.0243    ])
196     , -238182     , array([ 0.0664199  ,  0.0980778  ,  0.00353739 ,  10.0142    ])
208     , -238182     , array([ 0.0664199  ,  0.0980778  ,  0.00353739 ,  10.0142    ])
212     , -238241     , array([ 0.0664199  ,  0.0979798  ,  0.00353739 ,  10.0142    ])
216     , -238238     , array([ 0.0664199  ,  0.0979798  ,  0.00353739 ,  10.0243    ])
224     , -238241     , array([ 0.0664199  ,  0.0979798  ,  0.00353739 ,  10.0142    ])
228     , -238238     , array([ 0.0664199  ,  0.0979798  ,  0.00353739 ,  10.0243    ])
232     , -238182     , array([ 0.0664199  ,  0.0980778  ,  0.00353739 ,  10.0142    ])
236     , -237785     , array([ 0.0665328  ,  0.0992009  ,  0.00353245 ,  10.0152    ])
240     , -237782     , array([ 0.0665328  ,  0.0992009  ,  0.00353245 ,  10.0252    ])
248     , -237785     , array([ 0.0665328  ,  0.0992009  ,  0.00353245 ,  10.0152    ])
252     , -237782     , array([ 0.0665328  ,  0.0992009  ,  0.00353245 ,  10.0252    ])
256     , -237726     , array([ 0.0665328  ,  0.0993001  ,  0.00353245 ,  10.0152    ])
260     , -237636     , array([ 0.0665701  ,  0.0996071  ,  0.00353083 ,  10.0155    ])
264     , -237632     , array([ 0.0665701  ,  0.0996071  ,  0.00353083 ,  10.0255    ])
268     , -237479     , array([ 0.0665947  ,  0.0999761  ,  0.00352976 ,  10.0157    ])
272     , -237504     , array([ 0.0666031  ,  0.0999678  ,  0.00352939 ,  10.0157    ])
276     , -237501     , array([ 0.0666031  ,  0.0999678  ,  0.00352939 ,  10.0258    ])
280     , -237479     , array([ 0.0665947  ,  0.0999761  ,  0.00352976 ,  10.0157    ])
284     , -237515     , array([ 0.0666003  ,  0.0999373  ,  0.00352951 ,  10.0157    ])
288     , -237512     , array([ 0.0666003  ,  0.0999373  ,  0.00352951 ,  10.0257    ])
296     , -237504     , array([ 0.066603   ,  0.0999665  ,  0.0035294  ,  10.0157    ])
300     , -237501     , array([ 0.066603   ,  0.0999665  ,  0.0035294  ,  10.0258    ])
308     , -237504     , array([ 0.0666031  ,  0.0999678  ,  0.00352939 ,  10.0157    ])
312     , -237501     , array([ 0.0666031  ,  0.0999678  ,  0.00352939 ,  10.0258    ])
320     , -237504     , array([ 0.0666031  ,  0.0999678  ,  0.00352939 ,  10.0157    ])
324     , -237501     , array([ 0.0666031  ,  0.0999678  ,  0.00352939 ,  10.0258    ])
332     , -237504     , array([ 0.0666031  ,  0.0999678  ,  0.00352939 ,  10.0157    ])
336     , -237501     , array([ 0.0666031  ,  0.0999678  ,  0.00352939 ,  10.0258    ])
344     , -237504     , array([ 0.0666031  ,  0.0999678  ,  0.00352939 ,  10.0157    ])
348     , -237501     , array([ 0.0666031  ,  0.0999678  ,  0.00352939 ,  10.0258    ])
356     , -237504     , array([ 0.0666031  ,  0.0999678  ,  0.00352939 ,  10.0157    ])
360     , -237501     , array([ 0.0666031  ,  0.0999678  ,  0.00352939 ,  10.0258    ])
368     , -237504     , array([ 0.0666031  ,  0.0999678  ,  0.00352939 ,  10.0157    ])
372     , -237501     , array([ 0.0666031  ,  0.0999678  ,  0.00352939 ,  10.0258    ])
380     , -237504     , array([ 0.0666031  ,  0.0999678  ,  0.00352939 ,  10.0157    ])
384     , -237501     , array([ 0.0666031  ,  0.0999678  ,  0.00352939 ,  10.0258    ])
392     , -237504     , array([ 0.0666031  ,  0.0999678  ,  0.00352939 ,  10.0157    ])
396     , -237501     , array([ 0.0666031  ,  0.0999678  ,  0.00352939 ,  10.0258    ])
404     , -238217     , array([ 0.0664113  ,  0.0979854  ,  0.00353776 ,  10.0142    ])
412     , -237527     , array([ 0.0665825  ,  0.0998427  ,  0.00353029 ,  10.0156    ])
Finshed optimization **************************************************
Writing out parameters **************************************************
Writing out SFS **************************************************
Making plots **************************************************
carrying out inference 13 for model 2D.5epoch.fixedN1N3.nomig for pop MN-IR
Beginning optimization ************************************************
4       , -533488     , array([ 0.0116032  ,  0.0547561  ,  0.0122982  ,  6.92359    ])
8       , -215147     , array([ 0.0249678  ,  0.0291486  ,  0.0101796  ,  6.90749    ])
12      , -215146     , array([ 0.0249678  ,  0.0291486  ,  0.0101796  ,  6.9144     ])
20      , -214474     , array([ 0.0249567  ,  0.0292537  ,  0.00999496 ,  6.91077    ])
24      , -214473     , array([ 0.0249567  ,  0.0292537  ,  0.00999496 ,  6.91769    ])
28      , -213107     , array([ 0.0293458  ,  0.0355774  ,  0.00997539 ,  7.25565    ])
32      , -208450     , array([ 0.0561015  ,  0.0774416  ,  0.00989749 ,  8.81606    ])
36      , -208449     , array([ 0.0561015  ,  0.0774416  ,  0.00989749 ,  8.82488    ])
44      , -208450     , array([ 0.0560995  ,  0.077438   ,  0.00989748 ,  8.82095    ])
48      , -208449     , array([ 0.0560995  ,  0.077438   ,  0.00989748 ,  8.82978    ])
52      , -208236     , array([ 0.0535181  ,  0.072981   ,  0.00988623 ,  18.2963    ])
56      , -207872     , array([ 0.0563276  ,  0.0775518  ,  0.00985956 ,  18.682     ])
60      , -207871     , array([ 0.0563276  ,  0.0775518  ,  0.00985956 ,  18.7007    ])
64      , -206417     , array([ 0.0691201  ,  0.0993786  ,  0.0097536  ,  20.3077    ])
76      , -206417     , array([ 0.0691203  ,  0.0993789  ,  0.0097536  ,  20.3077    ])
80      , -206435     , array([ 0.069121   ,  0.0992809  ,  0.00975359 ,  20.3079    ])
84      , -206434     , array([ 0.069121   ,  0.0992809  ,  0.00975359 ,  20.3282    ])
92      , -206435     , array([ 0.0691211  ,  0.099281   ,  0.00975359 ,  20.3079    ])
96      , -206434     , array([ 0.0691211  ,  0.099281   ,  0.00975359 ,  20.3282    ])
100     , -206416     , array([ 0.0691213  ,  0.0993806  ,  0.00975359 ,  20.308     ])
112     , -206416     , array([ 0.0691213  ,  0.0993807  ,  0.00975359 ,  20.308     ])
116     , -206435     , array([ 0.0691213  ,  0.0992814  ,  0.00975359 ,  20.308     ])
120     , -206434     , array([ 0.0691213  ,  0.0992814  ,  0.00975359 ,  20.3283    ])
128     , -206435     , array([ 0.0691213  ,  0.0992814  ,  0.00975359 ,  20.308     ])
132     , -206434     , array([ 0.0691213  ,  0.0992814  ,  0.00975359 ,  20.3283    ])
136     , -206416     , array([ 0.0691213  ,  0.0993808  ,  0.00975359 ,  20.308     ])
148     , -206416     , array([ 0.0691213  ,  0.0993808  ,  0.00975359 ,  20.308     ])
152     , -206435     , array([ 0.0691213  ,  0.0992814  ,  0.00975359 ,  20.308     ])
156     , -206434     , array([ 0.0691213  ,  0.0992814  ,  0.00975359 ,  20.3283    ])
164     , -206435     , array([ 0.0691213  ,  0.0992814  ,  0.00975359 ,  20.308     ])
168     , -206434     , array([ 0.0691213  ,  0.0992814  ,  0.00975359 ,  20.3283    ])
172     , -206416     , array([ 0.0691213  ,  0.0993808  ,  0.00975359 ,  20.308     ])
184     , -206416     , array([ 0.0691213  ,  0.0993808  ,  0.00975359 ,  20.308     ])
188     , -206435     , array([ 0.0691213  ,  0.0992814  ,  0.00975359 ,  20.308     ])
192     , -206434     , array([ 0.0691213  ,  0.0992814  ,  0.00975359 ,  20.3283    ])
196     , -206387     , array([ 0.0693585  ,  0.0997956  ,  0.00975038 ,  20.3736    ])
200     , -206387     , array([ 0.0695155  ,  0.0999704  ,  0.00974826 ,  20.4171    ])
204     , -206386     , array([ 0.0695155  ,  0.0999704  ,  0.00974826 ,  20.4375    ])
208     , -206387     , array([ 0.0693585  ,  0.0997956  ,  0.00975038 ,  20.3736    ])
212     , -206393     , array([ 0.0694632  ,  0.0998788  ,  0.00974897 ,  20.4026    ])
216     , -206393     , array([ 0.0694632  ,  0.0998788  ,  0.00974897 ,  20.423     ])
224     , -206387     , array([ 0.0695118  ,  0.0999639  ,  0.00974831 ,  20.416     ])
228     , -206387     , array([ 0.0695118  ,  0.0999639  ,  0.00974831 ,  20.4365    ])
236     , -206387     , array([ 0.0695154  ,  0.0999701  ,  0.00974826 ,  20.417     ])
240     , -206386     , array([ 0.0695154  ,  0.0999701  ,  0.00974826 ,  20.4375    ])
248     , -206387     , array([ 0.0695155  ,  0.0999704  ,  0.00974826 ,  20.4171    ])
252     , -206386     , array([ 0.0695155  ,  0.0999704  ,  0.00974826 ,  20.4375    ])
260     , -206387     , array([ 0.0695155  ,  0.0999704  ,  0.00974826 ,  20.4171    ])
264     , -206386     , array([ 0.0695155  ,  0.0999704  ,  0.00974826 ,  20.4375    ])
272     , -206387     , array([ 0.0695155  ,  0.0999704  ,  0.00974826 ,  20.4171    ])
276     , -206386     , array([ 0.0695155  ,  0.0999704  ,  0.00974826 ,  20.4375    ])
284     , -206387     , array([ 0.0695155  ,  0.0999704  ,  0.00974826 ,  20.4171    ])
288     , -206386     , array([ 0.0695155  ,  0.0999704  ,  0.00974826 ,  20.4375    ])
296     , -206387     , array([ 0.0695155  ,  0.0999704  ,  0.00974826 ,  20.4171    ])
300     , -206386     , array([ 0.0695155  ,  0.0999704  ,  0.00974826 ,  20.4375    ])
308     , -206387     , array([ 0.0695155  ,  0.0999704  ,  0.00974826 ,  20.4171    ])
312     , -206386     , array([ 0.0695155  ,  0.0999704  ,  0.00974826 ,  20.4375    ])
320     , -206387     , array([ 0.0695155  ,  0.0999704  ,  0.00974826 ,  20.4171    ])
324     , -206386     , array([ 0.0695155  ,  0.0999704  ,  0.00974826 ,  20.4375    ])
332     , -206387     , array([ 0.0695155  ,  0.0999704  ,  0.00974826 ,  20.4171    ])
336     , -206386     , array([ 0.0695155  ,  0.0999704  ,  0.00974826 ,  20.4375    ])
344     , -206387     , array([ 0.0695155  ,  0.0999704  ,  0.00974826 ,  20.4171    ])
348     , -206386     , array([ 0.0695155  ,  0.0999704  ,  0.00974826 ,  20.4375    ])
356     , -206387     , array([ 0.0695155  ,  0.0999704  ,  0.00974826 ,  20.4171    ])
360     , -206386     , array([ 0.0695155  ,  0.0999704  ,  0.00974826 ,  20.4375    ])
368     , -206387     , array([ 0.0695155  ,  0.0999704  ,  0.00974826 ,  20.4171    ])
372     , -206386     , array([ 0.0695155  ,  0.0999704  ,  0.00974826 ,  20.4375    ])
380     , -206387     , array([ 0.0695155  ,  0.0999704  ,  0.00974826 ,  20.4171    ])
384     , -206386     , array([ 0.0695155  ,  0.0999704  ,  0.00974826 ,  20.4375    ])
392     , -206387     , array([ 0.0695155  ,  0.0999704  ,  0.00974826 ,  20.4171    ])
396     , -206386     , array([ 0.0695155  ,  0.0999704  ,  0.00974826 ,  20.4375    ])
404     , -206406     , array([ 0.0693573  ,  0.0996937  ,  0.0097504  ,  20.3733    ])
408     , -206441     , array([ 0.0693573  ,  0.0996937  ,  0.00976015 ,  20.3733    ])
412     , -206409     , array([ 0.0695457  ,  0.0999016  ,  0.00974879 ,  20.4062    ])
416     , -206400     , array([ 0.0694089  ,  0.099784   ,  0.0097497  ,  20.3876    ])
Finshed optimization **************************************************
Writing out parameters **************************************************
Writing out SFS **************************************************
Making plots **************************************************
carrying out inference 14 for model 2D.5epoch.fixedN1N3.nomig for pop MN-IR
Beginning optimization ************************************************
4       , -751192     , array([ 0.00853389 ,  0.099      ,  0.0110093  ,  9.11159    ])
8       , -406685     , array([ 0.0193393  ,  0.0977171  ,  0.0060837  ,  9.05327    ])
12      , -406685     , array([ 0.0193393  ,  0.0977171  ,  0.0060837  ,  9.06232    ])
16      , -1.04137e+06, array([ 0.510049   ,  0.0928426  ,  0.00056956 ,  8.8237     ])
20      , -238562     , array([ 0.048237   ,  0.0963036  ,  0.00313955 ,  8.98855    ])
24      , -238558     , array([ 0.048237   ,  0.0963036  ,  0.00313955 ,  8.99755    ])
32      , -236750     , array([ 0.0491431  ,  0.0970489  ,  0.0031895  ,  8.99621    ])
36      , -236746     , array([ 0.0491431  ,  0.0970489  ,  0.0031895  ,  9.00521    ])
40      , -234017     , array([ 0.0506103  ,  0.0983374  ,  0.00327008 ,  9.00834    ])
52      , -233588     , array([ 0.0508314  ,  0.0985151  ,  0.0032822  ,  9.01013    ])
64      , -233588     , array([ 0.0508315  ,  0.0985155  ,  0.0032822  ,  9.01014    ])
68      , -233622     , array([ 0.0508319  ,  0.0984194  ,  0.00328222 ,  9.01014    ])
72      , -233618     , array([ 0.0508319  ,  0.0984194  ,  0.00328222 ,  9.01916    ])
80      , -233622     , array([ 0.0508319  ,  0.0984195  ,  0.00328222 ,  9.01014    ])
84      , -233618     , array([ 0.0508319  ,  0.0984195  ,  0.00328222 ,  9.01916    ])
88      , -233587     , array([ 0.0508321  ,  0.0985186  ,  0.00328222 ,  9.01014    ])
100     , -233586     , array([ 0.0508321  ,  0.0985186  ,  0.00328222 ,  9.01015    ])
104     , -233622     , array([ 0.0508321  ,  0.0984203  ,  0.00328222 ,  9.01015    ])
108     , -233618     , array([ 0.0508321  ,  0.0984203  ,  0.00328222 ,  9.01916    ])
116     , -233622     , array([ 0.0508321  ,  0.0984203  ,  0.00328222 ,  9.01015    ])
120     , -233618     , array([ 0.0508321  ,  0.0984203  ,  0.00328222 ,  9.01916    ])
124     , -233586     , array([ 0.0508321  ,  0.0985188  ,  0.00328222 ,  9.01015    ])
128     , -233004     , array([ 0.051074   ,  0.0996464  ,  0.00329166 ,  9.0138     ])
132     , -233000     , array([ 0.051074   ,  0.0996464  ,  0.00329166 ,  9.02282    ])
140     , -233004     , array([ 0.051074   ,  0.0996464  ,  0.00329166 ,  9.0138     ])
144     , -233000     , array([ 0.051074   ,  0.0996464  ,  0.00329166 ,  9.02282    ])
148     , -232970     , array([ 0.051074   ,  0.0997461  ,  0.00329166 ,  9.0138     ])
160     , -232970     , array([ 0.051074   ,  0.0997461  ,  0.00329166 ,  9.0138     ])
164     , -233004     , array([ 0.051074   ,  0.0996464  ,  0.00329166 ,  9.0138     ])
168     , -233000     , array([ 0.051074   ,  0.0996464  ,  0.00329166 ,  9.02282    ])
172     , -232870     , array([ 0.051114   ,  0.09995    ,  0.00329322 ,  9.01441    ])
176     , -232837     , array([ 0.0511405  ,  0.0999848  ,  0.00329425 ,  9.01481    ])
180     , -232833     , array([ 0.0511405  ,  0.0999848  ,  0.00329425 ,  9.02383    ])
184     , -232870     , array([ 0.051114   ,  0.09995    ,  0.00329322 ,  9.01441    ])
188     , -232859     , array([ 0.0511316  ,  0.0999399  ,  0.00329391 ,  9.01467    ])
192     , -232855     , array([ 0.0511316  ,  0.0999399  ,  0.00329391 ,  9.02369    ])
200     , -232838     , array([ 0.0511401  ,  0.0999828  ,  0.00329423 ,  9.0148     ])
204     , -232834     , array([ 0.0511401  ,  0.0999828  ,  0.00329423 ,  9.02382    ])
212     , -232837     , array([ 0.0511404  ,  0.0999847  ,  0.00329425 ,  9.01481    ])
216     , -232833     , array([ 0.0511404  ,  0.0999847  ,  0.00329425 ,  9.02383    ])
224     , -232837     , array([ 0.0511405  ,  0.0999848  ,  0.00329425 ,  9.01481    ])
228     , -232833     , array([ 0.0511405  ,  0.0999848  ,  0.00329425 ,  9.02383    ])
236     , -232837     , array([ 0.0511405  ,  0.0999848  ,  0.00329425 ,  9.01481    ])
240     , -232833     , array([ 0.0511405  ,  0.0999848  ,  0.00329425 ,  9.02383    ])
248     , -232837     , array([ 0.0511405  ,  0.0999848  ,  0.00329425 ,  9.01481    ])
252     , -232833     , array([ 0.0511405  ,  0.0999848  ,  0.00329425 ,  9.02383    ])
260     , -232837     , array([ 0.0511405  ,  0.0999848  ,  0.00329425 ,  9.01481    ])
264     , -232833     , array([ 0.0511405  ,  0.0999848  ,  0.00329425 ,  9.02383    ])
272     , -232837     , array([ 0.0511405  ,  0.0999848  ,  0.00329425 ,  9.01481    ])
276     , -232833     , array([ 0.0511405  ,  0.0999848  ,  0.00329425 ,  9.02383    ])
284     , -232837     , array([ 0.0511405  ,  0.0999848  ,  0.00329425 ,  9.01481    ])
288     , -232833     , array([ 0.0511405  ,  0.0999848  ,  0.00329425 ,  9.02383    ])
296     , -232837     , array([ 0.0511405  ,  0.0999848  ,  0.00329425 ,  9.01481    ])
300     , -232833     , array([ 0.0511405  ,  0.0999848  ,  0.00329425 ,  9.02383    ])
308     , -232837     , array([ 0.0511405  ,  0.0999848  ,  0.00329425 ,  9.01481    ])
312     , -232833     , array([ 0.0511405  ,  0.0999848  ,  0.00329425 ,  9.02383    ])
320     , -232837     , array([ 0.0511405  ,  0.0999848  ,  0.00329425 ,  9.01481    ])
324     , -232833     , array([ 0.0511405  ,  0.0999848  ,  0.00329425 ,  9.02383    ])
332     , -232837     , array([ 0.0511405  ,  0.0999848  ,  0.00329425 ,  9.01481    ])
336     , -232833     , array([ 0.0511405  ,  0.0999848  ,  0.00329425 ,  9.02383    ])
344     , -232837     , array([ 0.0511405  ,  0.0999848  ,  0.00329425 ,  9.01481    ])
348     , -232833     , array([ 0.0511405  ,  0.0999848  ,  0.00329425 ,  9.02383    ])
356     , -232972     , array([ 0.0510733  ,  0.0997427  ,  0.00329163 ,  9.01379    ])
360     , -232853     , array([ 0.051134   ,  0.0999519  ,  0.003294   ,  9.01471    ])
364     , -232725     , array([ 0.051134   ,  0.0999519  ,  0.00329729 ,  9.01471    ])
368     , -232869     , array([ 0.0511278  ,  0.0999203  ,  0.00329376 ,  9.01462    ])
Finshed optimization **************************************************
Writing out parameters **************************************************
Writing out SFS **************************************************
Making plots **************************************************
carrying out inference 15 for model 2D.5epoch.fixedN1N3.nomig for pop MN-IR
Beginning optimization ************************************************
4       , -471026     , array([ 0.0162258  ,  0.099      ,  0.00549361 ,  16.9154    ])
8       , -206879     , array([ 0.0391972  ,  0.0624495  ,  0.0046171  ,  16.9086    ])
12      , -206877     , array([ 0.0391972  ,  0.0624495  ,  0.0046171  ,  16.9255    ])
20      , -206387     , array([ 0.0393654  ,  0.0625813  ,  0.00466153 ,  16.914     ])
24      , -206386     , array([ 0.0393654  ,  0.0625813  ,  0.00466153 ,  16.9309    ])
28      , -205899     , array([ 0.0395357  ,  0.0627772  ,  0.00470674 ,  16.9194    ])
40      , -205799     , array([ 0.0395746  ,  0.0628076  ,  0.00471708 ,  16.9206    ])
44      , -205000     , array([ 0.039909   ,  0.0630053  ,  0.00480666 ,  16.9312    ])
48      , -204998     , array([ 0.039909   ,  0.0630053  ,  0.00480666 ,  16.9482    ])
52      , -201804     , array([ 0.045364   ,  0.0793746  ,  0.00474636 ,  17.2063    ])
64      , -201804     , array([ 0.045364   ,  0.0793746  ,  0.00474635 ,  17.2077    ])
68      , -201836     , array([ 0.045364   ,  0.0792951  ,  0.00474633 ,  17.2154    ])
72      , -201834     , array([ 0.045364   ,  0.0792951  ,  0.00474633 ,  17.2326    ])
80      , -201836     , array([ 0.045364   ,  0.0792951  ,  0.00474633 ,  17.2158    ])
84      , -201834     , array([ 0.045364   ,  0.0792951  ,  0.00474633 ,  17.233     ])
88      , -201803     , array([ 0.045364   ,  0.0793744  ,  0.00474632 ,  17.2177    ])
100     , -201803     , array([ 0.045364   ,  0.0793744  ,  0.00474632 ,  17.2178    ])
104     , -201836     , array([ 0.045364   ,  0.079295   ,  0.00474632 ,  17.2183    ])
108     , -201834     , array([ 0.045364   ,  0.079295   ,  0.00474632 ,  17.2355    ])
116     , -201836     , array([ 0.045364   ,  0.079295   ,  0.00474632 ,  17.2183    ])
120     , -201834     , array([ 0.045364   ,  0.079295   ,  0.00474632 ,  17.2355    ])
124     , -201803     , array([ 0.045364   ,  0.0793744  ,  0.00474632 ,  17.2184    ])
128     , -201558     , array([ 0.0453256  ,  0.0791186  ,  0.0047221  ,  27.9547    ])
132     , -201557     , array([ 0.0453256  ,  0.0791186  ,  0.0047221  ,  27.9827    ])
136     , -200965     , array([ 0.0459175  ,  0.0807506  ,  0.00475745 ,  27.7883    ])
140     , -198991     , array([ 0.0483631  ,  0.0871851  ,  0.00490151 ,  27.1325    ])
144     , -198990     , array([ 0.0483631  ,  0.0871851  ,  0.00490151 ,  27.1597    ])
152     , -198991     , array([ 0.0483631  ,  0.0871852  ,  0.00490151 ,  27.1326    ])
156     , -198990     , array([ 0.0483631  ,  0.0871852  ,  0.00490151 ,  27.1598    ])
160     , -198966     , array([ 0.0483634  ,  0.0872731  ,  0.00490153 ,  27.133     ])
172     , -198966     , array([ 0.0483634  ,  0.0872731  ,  0.00490153 ,  27.133     ])
176     , -198991     , array([ 0.0483634  ,  0.087186   ,  0.00490154 ,  27.1331    ])
180     , -198990     , array([ 0.0483634  ,  0.087186   ,  0.00490154 ,  27.1602    ])
184     , -197717     , array([ 0.0497849  ,  0.0911445  ,  0.00501002 ,  29.4837    ])
196     , -197717     , array([ 0.0497849  ,  0.0911445  ,  0.00501002 ,  29.4838    ])
200     , -197738     , array([ 0.049785   ,  0.0910535  ,  0.00501002 ,  29.4839    ])
204     , -197738     , array([ 0.049785   ,  0.0910535  ,  0.00501002 ,  29.5134    ])
212     , -197738     , array([ 0.049785   ,  0.0910536  ,  0.00501002 ,  29.4839    ])
216     , -197738     , array([ 0.049785   ,  0.0910536  ,  0.00501002 ,  29.5134    ])
220     , -197716     , array([ 0.049785   ,  0.0911447  ,  0.00501003 ,  29.4839    ])
232     , -197716     , array([ 0.049785   ,  0.0911447  ,  0.00501003 ,  29.4839    ])
236     , -197738     , array([ 0.049785   ,  0.0910536  ,  0.00501003 ,  29.484     ])
240     , -197738     , array([ 0.049785   ,  0.0910536  ,  0.00501003 ,  29.5135    ])
248     , -197738     , array([ 0.049785   ,  0.0910536  ,  0.00501003 ,  29.484     ])
252     , -197738     , array([ 0.049785   ,  0.0910536  ,  0.00501003 ,  29.5135    ])
256     , -197716     , array([ 0.049785   ,  0.0911447  ,  0.00501003 ,  29.484     ])
260     , -197580     , array([ 0.049944   ,  0.0914826  ,  0.00502657 ,  29.8964    ])
264     , -197580     , array([ 0.049944   ,  0.0914826  ,  0.00502657 ,  29.9263    ])
272     , -197580     , array([ 0.049944   ,  0.0914826  ,  0.00502657 ,  29.8964    ])
276     , -197580     , array([ 0.049944   ,  0.0914826  ,  0.00502657 ,  29.9263    ])
280     , -197559     , array([ 0.049944   ,  0.0915742  ,  0.00502657 ,  29.8964    ])
292     , -197559     , array([ 0.049944   ,  0.0915742  ,  0.00502657 ,  29.8964    ])
296     , -197580     , array([ 0.049944   ,  0.0914826  ,  0.00502657 ,  29.8964    ])
300     , -197580     , array([ 0.049944   ,  0.0914826  ,  0.00502657 ,  29.9263    ])
304     , -197533     , array([ 0.0499703  ,  0.0916452  ,  0.00502931 ,  29.965     ])
316     , -197533     , array([ 0.0499703  ,  0.0916452  ,  0.00502931 ,  29.965     ])
320     , -197555     , array([ 0.0499703  ,  0.0915536  ,  0.00502931 ,  29.965     ])
324     , -197554     , array([ 0.0499703  ,  0.0915536  ,  0.00502931 ,  29.995     ])
328     , -197525     , array([ 0.0499789  ,  0.0916687  ,  0.00503021 ,  29.9877    ])
332     , -197555     , array([ 0.0499703  ,  0.0915536  ,  0.00502931 ,  29.965     ])
336     , -197554     , array([ 0.0499703  ,  0.0915536  ,  0.00502931 ,  29.995     ])
340     , -197527     , array([ 0.049976   ,  0.0916609  ,  0.00502991 ,  29.9801    ])
344     , -197547     , array([ 0.0499783  ,  0.0915754  ,  0.00503014 ,  29.9861    ])
352     , -197525     , array([ 0.0499788  ,  0.0916683  ,  0.00503019 ,  29.9873    ])
356     , -197546     , array([ 0.0499789  ,  0.091577   ,  0.00503021 ,  29.9876    ])
364     , -197525     , array([ 0.0499789  ,  0.0916687  ,  0.00503021 ,  29.9877    ])
368     , -197546     , array([ 0.0499789  ,  0.091577   ,  0.00503021 ,  29.9877    ])
376     , -197525     , array([ 0.0499789  ,  0.0916687  ,  0.00503021 ,  29.9877    ])
380     , -197546     , array([ 0.0499789  ,  0.0915771  ,  0.00503021 ,  29.9877    ])
388     , -197525     , array([ 0.0499789  ,  0.0916687  ,  0.00503021 ,  29.9877    ])
392     , -197546     , array([ 0.0499789  ,  0.0915771  ,  0.00503021 ,  29.9877    ])
400     , -197525     , array([ 0.0499789  ,  0.0916687  ,  0.00503021 ,  29.9877    ])
404     , -197546     , array([ 0.0499789  ,  0.0915771  ,  0.00503021 ,  29.9877    ])
412     , -197525     , array([ 0.0499789  ,  0.0916687  ,  0.00503021 ,  29.9877    ])
416     , -197546     , array([ 0.0499789  ,  0.0915771  ,  0.00503021 ,  29.9877    ])
424     , -197525     , array([ 0.0499789  ,  0.0916687  ,  0.00503021 ,  29.9877    ])
428     , -197546     , array([ 0.0499789  ,  0.0915771  ,  0.00503021 ,  29.9877    ])
436     , -197525     , array([ 0.0499789  ,  0.0916687  ,  0.00503021 ,  29.9877    ])
440     , -197546     , array([ 0.0499789  ,  0.0915771  ,  0.00503021 ,  29.9877    ])
448     , -197525     , array([ 0.0499789  ,  0.0916687  ,  0.00503021 ,  29.9877    ])
452     , -197546     , array([ 0.0499789  ,  0.0915771  ,  0.00503021 ,  29.9877    ])
460     , -197525     , array([ 0.0499789  ,  0.0916687  ,  0.00503021 ,  29.9877    ])
464     , -197546     , array([ 0.0499789  ,  0.0915771  ,  0.00503021 ,  29.9877    ])
476     , -197559     , array([ 0.0499439  ,  0.0915739  ,  0.00502656 ,  29.8962    ])
484     , -197539     , array([ 0.0499638  ,  0.0916278  ,  0.00502863 ,  29.9481    ])
488     , -197551     , array([ 0.0499738  ,  0.0915631  ,  0.00502967 ,  29.9742    ])
Finshed optimization **************************************************
Writing out parameters **************************************************
Writing out SFS **************************************************
Making plots **************************************************
carrying out inference 16 for model 2D.5epoch.fixedN1N3.nomig for pop MN-IR
Beginning optimization ************************************************
4       , -837313     , array([ 0.00538544 ,  0.099      ,  0.00948355 ,  6.35569    ])
8       , -558248     , array([ 0.0120771  ,  0.0989963  ,  0.00516597 ,  6.30682    ])
12      , -558248     , array([ 0.0120771  ,  0.0989963  ,  0.00516597 ,  6.31313    ])
16      , -283139     , array([ 0.0839645  ,  0.0669959  ,  0.00335767 ,  6.30316    ])
28      , -282624     , array([ 0.0842847  ,  0.067449   ,  0.00336544 ,  6.30455    ])
32      , -282158     , array([ 0.0846055  ,  0.0678367  ,  0.00337322 ,  6.30593    ])
36      , -282153     , array([ 0.0846055  ,  0.0678367  ,  0.00337322 ,  6.31224    ])
44      , -282029     , array([ 0.084686   ,  0.067951   ,  0.00337517 ,  6.30627    ])
48      , -282025     , array([ 0.084686   ,  0.067951   ,  0.00337517 ,  6.31258    ])
52      , -281853     , array([ 0.0847666  ,  0.0681337  ,  0.00337712 ,  6.30662    ])
64      , -281820     , array([ 0.0847868  ,  0.0681625  ,  0.00337761 ,  6.30671    ])
68      , -281835     , array([ 0.084807   ,  0.0681231  ,  0.0033781  ,  6.30679    ])
72      , -281831     , array([ 0.084807   ,  0.0681231  ,  0.0033781  ,  6.3131     ])
80      , -281827     , array([ 0.0848121  ,  0.0681303  ,  0.00337822 ,  6.30681    ])
84      , -281823     , array([ 0.0848121  ,  0.0681303  ,  0.00337822 ,  6.31312    ])
88      , -281772     , array([ 0.0848171  ,  0.0682056  ,  0.00337834 ,  6.30684    ])
100     , -281770     , array([ 0.0848184  ,  0.0682075  ,  0.00337837 ,  6.30684    ])
104     , -281815     , array([ 0.0848196  ,  0.0681411  ,  0.0033784  ,  6.30685    ])
108     , -281811     , array([ 0.0848196  ,  0.0681411  ,  0.0033784  ,  6.31316    ])
112     , -264895     , array([ 0.0963968  ,  0.0855604  ,  0.00365152 ,  6.35356    ])
116     , -254685     , array([ 0.104891   ,  0.0992664  ,  0.00384377 ,  6.38457    ])
120     , -254681     , array([ 0.104891   ,  0.0992664  ,  0.00384377 ,  6.39096    ])
124     , -254635     , array([ 0.104891   ,  0.0993658  ,  0.00384377 ,  6.38457    ])
136     , -254635     , array([ 0.104891   ,  0.0993658  ,  0.00384377 ,  6.38457    ])
148     , -254635     , array([ 0.104891   ,  0.0993658  ,  0.00384377 ,  6.38457    ])
160     , -254635     , array([ 0.104891   ,  0.0993658  ,  0.00384377 ,  6.38457    ])
164     , -254274     , array([ 0.105226   ,  0.0998298  ,  0.00385124 ,  6.38575    ])
168     , -254271     , array([ 0.105226   ,  0.0998298  ,  0.00385124 ,  6.39214    ])
176     , -254268     , array([ 0.105226   ,  0.0998279  ,  0.00385084 ,  6.41904    ])
180     , -254265     , array([ 0.105226   ,  0.0998279  ,  0.00385084 ,  6.42546    ])
184     , -254152     , array([ 0.105209   ,  0.0998815  ,  0.00384132 ,  7.26572    ])
188     , -254060     , array([ 0.10529    ,  0.0999773  ,  0.00384179 ,  7.40425    ])
192     , -254057     , array([ 0.10529    ,  0.0999773  ,  0.00384179 ,  7.41165    ])
196     , -254152     , array([ 0.105209   ,  0.0998815  ,  0.00384132 ,  7.26572    ])
200     , -254107     , array([ 0.105263   ,  0.0999121  ,  0.00384164 ,  7.35778    ])
204     , -254104     , array([ 0.105263   ,  0.0999121  ,  0.00384164 ,  7.36514    ])
212     , -254062     , array([ 0.105288   ,  0.0999744  ,  0.00384179 ,  7.40217    ])
216     , -254059     , array([ 0.105288   ,  0.0999744  ,  0.00384179 ,  7.40957    ])
224     , -254060     , array([ 0.105289   ,  0.0999772  ,  0.00384179 ,  7.40415    ])
228     , -254057     , array([ 0.105289   ,  0.0999772  ,  0.00384179 ,  7.41156    ])
236     , -254060     , array([ 0.10529    ,  0.0999773  ,  0.00384179 ,  7.40424    ])
240     , -254057     , array([ 0.10529    ,  0.0999773  ,  0.00384179 ,  7.41165    ])
248     , -254060     , array([ 0.10529    ,  0.0999773  ,  0.00384179 ,  7.40425    ])
252     , -254057     , array([ 0.10529    ,  0.0999773  ,  0.00384179 ,  7.41165    ])
260     , -254060     , array([ 0.10529    ,  0.0999773  ,  0.00384179 ,  7.40425    ])
264     , -254057     , array([ 0.10529    ,  0.0999773  ,  0.00384179 ,  7.41165    ])
272     , -254060     , array([ 0.10529    ,  0.0999773  ,  0.00384179 ,  7.40425    ])
276     , -254057     , array([ 0.10529    ,  0.0999773  ,  0.00384179 ,  7.41165    ])
284     , -254060     , array([ 0.10529    ,  0.0999773  ,  0.00384179 ,  7.40425    ])
288     , -254057     , array([ 0.10529    ,  0.0999773  ,  0.00384179 ,  7.41165    ])
296     , -254060     , array([ 0.10529    ,  0.0999773  ,  0.00384179 ,  7.40425    ])
300     , -254057     , array([ 0.10529    ,  0.0999773  ,  0.00384179 ,  7.41165    ])
308     , -254060     , array([ 0.10529    ,  0.0999773  ,  0.00384179 ,  7.40425    ])
312     , -254057     , array([ 0.10529    ,  0.0999773  ,  0.00384179 ,  7.41165    ])
320     , -254060     , array([ 0.10529    ,  0.0999773  ,  0.00384179 ,  7.40425    ])
324     , -254057     , array([ 0.10529    ,  0.0999773  ,  0.00384179 ,  7.41165    ])
332     , -254060     , array([ 0.10529    ,  0.0999773  ,  0.00384179 ,  7.40425    ])
336     , -254057     , array([ 0.10529    ,  0.0999773  ,  0.00384179 ,  7.41165    ])
344     , -254090     , array([ 0.105273   ,  0.0999359  ,  0.00384169 ,  7.37475    ])
348     , -254061     , array([ 0.105289   ,  0.0999758  ,  0.00384179 ,  7.40319    ])
352     , -254060     , array([ 0.10529    ,  0.0999772  ,  0.00384179 ,  7.40421    ])
Finshed optimization **************************************************
Writing out parameters **************************************************
Writing out SFS **************************************************
Making plots **************************************************
carrying out inference 17 for model 2D.5epoch.fixedN1N3.nomig for pop MN-IR
Beginning optimization ************************************************
4       , -562386     , array([ 0.013619   ,  0.0665459  ,  0.0148015  ,  15.7855    ])
8       , -218910     , array([ 0.0297348  ,  0.0363221  ,  0.0119952  ,  15.7609    ])
12      , -218909     , array([ 0.0297348  ,  0.0363221  ,  0.0119952  ,  15.7767    ])
20      , -218110     , array([ 0.029707   ,  0.0364289  ,  0.0117931  ,  15.7634    ])
24      , -218109     , array([ 0.029707   ,  0.0364289  ,  0.0117931  ,  15.7792    ])
32      , -217842     , array([ 0.0296972  ,  0.0364669  ,  0.0117223  ,  15.7643    ])
36      , -217841     , array([ 0.0296972  ,  0.0364669  ,  0.0117223  ,  15.7801    ])
40      , -213123     , array([ 0.0295237  ,  0.0371823  ,  0.0105374  ,  15.78      ])
44      , -2.54685e+06, array([ 0.0232724  ,  0.0784878  ,  0.000139303,  16.4292    ])
48      , -2.54684e+06, array([ 0.0232724  ,  0.0784878  ,  0.000139303,  16.4456    ])
52      , -201580     , array([ 0.028596   ,  0.0411085  ,  0.0058971  ,  15.8656    ])
64      , -201578     , array([ 0.028601   ,  0.0411177  ,  0.00589701 ,  15.8662    ])
68      , -201540     , array([ 0.0288057  ,  0.0414574  ,  0.00589339 ,  15.8919    ])
72      , -201539     , array([ 0.0288057  ,  0.0414574  ,  0.00589339 ,  15.9078    ])
80      , -201539     , array([ 0.0288069  ,  0.0414597  ,  0.00589337 ,  15.8921    ])
84      , -201538     , array([ 0.0288069  ,  0.0414597  ,  0.00589337 ,  15.908     ])
88      , -201494     , array([ 0.0288082  ,  0.0415034  ,  0.00589334 ,  15.8922    ])
100     , -201494     , array([ 0.0288085  ,  0.041504   ,  0.00589334 ,  15.8923    ])
104     , -201539     , array([ 0.0288088  ,  0.0414631  ,  0.00589333 ,  15.8923    ])
108     , -201537     , array([ 0.0288088  ,  0.0414631  ,  0.00589333 ,  15.9082    ])
112     , -197916     , array([ 0.0417537  ,  0.0670793  ,  0.00570769 ,  17.2889    ])
124     , -197916     , array([ 0.0417534  ,  0.0670787  ,  0.00570768 ,  17.2921    ])
128     , -197950     , array([ 0.041753   ,  0.0670109  ,  0.00570767 ,  17.2956    ])
132     , -197949     , array([ 0.041753   ,  0.0670109  ,  0.00570767 ,  17.3129    ])
140     , -197950     , array([ 0.0417529  ,  0.0670107  ,  0.00570767 ,  17.2964    ])
144     , -197949     , array([ 0.0417529  ,  0.0670107  ,  0.00570767 ,  17.3137    ])
148     , -197916     , array([ 0.0417528  ,  0.0670775  ,  0.00570767 ,  17.2973    ])
160     , -197916     , array([ 0.0417528  ,  0.0670775  ,  0.00570767 ,  17.2975    ])
164     , -197950     , array([ 0.0417528  ,  0.0670104  ,  0.00570767 ,  17.2977    ])
168     , -197949     , array([ 0.0417528  ,  0.0670104  ,  0.00570767 ,  17.315     ])
176     , -197950     , array([ 0.0417528  ,  0.0670104  ,  0.00570767 ,  17.2978    ])
180     , -197949     , array([ 0.0417528  ,  0.0670104  ,  0.00570767 ,  17.3151    ])
184     , -197916     , array([ 0.0417528  ,  0.0670774  ,  0.00570767 ,  17.2978    ])
196     , -197916     , array([ 0.0417528  ,  0.0670774  ,  0.00570767 ,  17.2978    ])
200     , -197950     , array([ 0.0417528  ,  0.0670104  ,  0.00570767 ,  17.2978    ])
204     , -197949     , array([ 0.0417528  ,  0.0670104  ,  0.00570767 ,  17.3152    ])
208     , -197746     , array([ 0.0409448  ,  0.0653797  ,  0.00568819 ,  27.5324    ])
212     , -197441     , array([ 0.0425648  ,  0.0685806  ,  0.00572075 ,  24.1438    ])
216     , -197440     , array([ 0.0425648  ,  0.0685806  ,  0.00572075 ,  24.1679    ])
220     , -196761     , array([ 0.0452282  ,  0.0743435  ,  0.0057102  ,  28.5673    ])
232     , -196761     , array([ 0.0452282  ,  0.0743435  ,  0.0057102  ,  28.5673    ])
236     , -196792     , array([ 0.0452282  ,  0.0742693  ,  0.0057102  ,  28.5673    ])
240     , -196791     , array([ 0.0452282  ,  0.0742693  ,  0.0057102  ,  28.5959    ])
248     , -196792     , array([ 0.0452282  ,  0.0742693  ,  0.0057102  ,  28.5673    ])
252     , -196791     , array([ 0.0452282  ,  0.0742693  ,  0.0057102  ,  28.5959    ])
256     , -196761     , array([ 0.0452282  ,  0.0743436  ,  0.0057102  ,  28.5673    ])
260     , -196475     , array([ 0.0465586  ,  0.0771699  ,  0.0057215  ,  29.2923    ])
264     , -196474     , array([ 0.0465586  ,  0.0771699  ,  0.0057215  ,  29.3216    ])
272     , -196475     , array([ 0.0465587  ,  0.0771699  ,  0.0057215  ,  29.2923    ])
276     , -196474     , array([ 0.0465587  ,  0.0771699  ,  0.0057215  ,  29.3216    ])
280     , -196445     , array([ 0.0465587  ,  0.0772471  ,  0.0057215  ,  29.2923    ])
292     , -196445     , array([ 0.0465587  ,  0.0772471  ,  0.0057215  ,  29.2923    ])
296     , -196475     , array([ 0.0465587  ,  0.0771699  ,  0.0057215  ,  29.2923    ])
300     , -196474     , array([ 0.0465587  ,  0.0771699  ,  0.0057215  ,  29.3216    ])
308     , -196475     , array([ 0.0465587  ,  0.0771699  ,  0.0057215  ,  29.2923    ])
312     , -196474     , array([ 0.0465587  ,  0.0771699  ,  0.0057215  ,  29.3216    ])
316     , -196445     , array([ 0.0465587  ,  0.0772471  ,  0.0057215  ,  29.2923    ])
320     , -196394     , array([ 0.0468463  ,  0.0778466  ,  0.00572129 ,  29.7878    ])
324     , -196394     , array([ 0.0468463  ,  0.0778466  ,  0.00572129 ,  29.8176    ])
332     , -196394     , array([ 0.0468463  ,  0.0778466  ,  0.00572129 ,  29.7878    ])
336     , -196394     , array([ 0.0468463  ,  0.0778466  ,  0.00572129 ,  29.8176    ])
340     , -196365     , array([ 0.0468463  ,  0.0779245  ,  0.00572129 ,  29.7878    ])
344     , -196368     , array([ 0.0469417  ,  0.0780712  ,  0.00572123 ,  29.9531    ])
348     , -196367     , array([ 0.0469417  ,  0.0780712  ,  0.00572123 ,  29.9831    ])
352     , -196339     , array([ 0.0469417  ,  0.0781493  ,  0.00572123 ,  29.9531    ])
356     , -196368     , array([ 0.0469417  ,  0.0780712  ,  0.00572123 ,  29.9531    ])
360     , -196367     , array([ 0.0469417  ,  0.0780712  ,  0.00572123 ,  29.9831    ])
368     , -196368     , array([ 0.0469417  ,  0.0780712  ,  0.00572123 ,  29.9531    ])
372     , -196367     , array([ 0.0469417  ,  0.0780712  ,  0.00572123 ,  29.9831    ])
376     , -196339     , array([ 0.0469417  ,  0.0781493  ,  0.00572123 ,  29.9531    ])
380     , -196361     , array([ 0.0469655  ,  0.0781275  ,  0.00572121 ,  29.9946    ])
388     , -196339     , array([ 0.0469417  ,  0.0781493  ,  0.00572123 ,  29.9531    ])
392     , -196364     , array([ 0.0469576  ,  0.0781087  ,  0.00572121 ,  29.9808    ])
400     , -196333     , array([ 0.0469639  ,  0.0782017  ,  0.00572121 ,  29.9917    ])
404     , -196361     , array([ 0.0469652  ,  0.0781267  ,  0.00572121 ,  29.994     ])
412     , -196332     , array([ 0.0469655  ,  0.0782055  ,  0.00572121 ,  29.9945    ])
416     , -196361     , array([ 0.0469655  ,  0.0781275  ,  0.00572121 ,  29.9946    ])
424     , -196332     , array([ 0.0469655  ,  0.0782057  ,  0.00572121 ,  29.9946    ])
428     , -196361     , array([ 0.0469655  ,  0.0781275  ,  0.00572121 ,  29.9946    ])
436     , -196332     , array([ 0.0469655  ,  0.0782057  ,  0.00572121 ,  29.9946    ])
440     , -196361     , array([ 0.0469655  ,  0.0781275  ,  0.00572121 ,  29.9946    ])
448     , -196332     , array([ 0.0469655  ,  0.0782057  ,  0.00572121 ,  29.9946    ])
452     , -196361     , array([ 0.0469655  ,  0.0781275  ,  0.00572121 ,  29.9946    ])
460     , -196332     , array([ 0.0469655  ,  0.0782057  ,  0.00572121 ,  29.9946    ])
464     , -196361     , array([ 0.0469655  ,  0.0781275  ,  0.00572121 ,  29.9946    ])
472     , -196332     , array([ 0.0469655  ,  0.0782057  ,  0.00572121 ,  29.9946    ])
476     , -196361     , array([ 0.0469655  ,  0.0781275  ,  0.00572121 ,  29.9946    ])
484     , -196332     , array([ 0.0469655  ,  0.0782057  ,  0.00572121 ,  29.9946    ])
488     , -196361     , array([ 0.0469655  ,  0.0781275  ,  0.00572121 ,  29.9946    ])
496     , -196332     , array([ 0.0469655  ,  0.0782057  ,  0.00572121 ,  29.9946    ])
500     , -196361     , array([ 0.0469655  ,  0.0781275  ,  0.00572121 ,  29.9946    ])
508     , -196332     , array([ 0.0469655  ,  0.0782057  ,  0.00572121 ,  29.9946    ])
512     , -196361     , array([ 0.0469655  ,  0.0781275  ,  0.00572121 ,  29.9946    ])
520     , -196332     , array([ 0.0469655  ,  0.0782057  ,  0.00572121 ,  29.9946    ])
524     , -196361     , array([ 0.0469655  ,  0.0781275  ,  0.00572121 ,  29.9946    ])
532     , -196394     , array([ 0.0468463  ,  0.0778466  ,  0.00572129 ,  29.7878    ])
536     , -196377     , array([ 0.0468463  ,  0.0778466  ,  0.00572702 ,  29.7878    ])
540     , -196374     , array([ 0.0469185  ,  0.0780167  ,  0.00572124 ,  29.9129    ])
544     , -196374     , array([ 0.0469185  ,  0.0780167  ,  0.00572124 ,  29.9429    ])
548     , -196335     , array([ 0.0469547  ,  0.07818    ,  0.00572122 ,  29.9757    ])
552     , -196367     , array([ 0.0469463  ,  0.0780821  ,  0.00572122 ,  29.9611    ])
Finshed optimization **************************************************
Writing out parameters **************************************************
Writing out SFS **************************************************
Making plots **************************************************
carrying out inference 18 for model 2D.5epoch.fixedN1N3.nomig for pop MN-IR
Beginning optimization ************************************************
4       , -563229     , array([ 0.017805   ,  0.099      ,  0.0145436  ,  5.0068     ])
8       , -211860     , array([ 0.0407312  ,  0.0599142  ,  0.0108907  ,  4.98585    ])
12      , -211859     , array([ 0.0407312  ,  0.0599142  ,  0.0108907  ,  4.99084    ])
20      , -211024     , array([ 0.0406375  ,  0.0601255  ,  0.0106958  ,  4.98759    ])
24      , -211023     , array([ 0.0406375  ,  0.0601255  ,  0.0106958  ,  4.99258    ])
32      , -210896     , array([ 0.0406232  ,  0.060158   ,  0.0106663  ,  4.98786    ])
36      , -210895     , array([ 0.0406232  ,  0.060158   ,  0.0106663  ,  4.99285    ])
44      , -210840     , array([ 0.040617   ,  0.0601721  ,  0.0106535  ,  4.98798    ])
48      , -210839     , array([ 0.040617   ,  0.0601721  ,  0.0106535  ,  4.99297    ])
56      , -210816     , array([ 0.0406142  ,  0.0601783  ,  0.0106479  ,  4.98803    ])
60      , -210815     , array([ 0.0406142  ,  0.0601783  ,  0.0106479  ,  4.99302    ])
64      , -341833     , array([ 0.0326126  ,  0.084249   ,  0.00190727 ,  5.1569     ])
68      , -197497     , array([ 0.0385731  ,  0.0651145  ,  0.00710803 ,  5.02721    ])
72      , -197495     , array([ 0.0385731  ,  0.0651145  ,  0.00710803 ,  5.03224    ])
80      , -197495     , array([ 0.0385777  ,  0.0651272  ,  0.00710798 ,  5.02764    ])
84      , -197493     , array([ 0.0385777  ,  0.0651272  ,  0.00710798 ,  5.03267    ])
88      , -197476     , array([ 0.0385897  ,  0.0652256  ,  0.00710784 ,  5.02875    ])
100     , -197476     , array([ 0.0385908  ,  0.0652287  ,  0.00710783 ,  5.02886    ])
104     , -197490     , array([ 0.0385937  ,  0.0651714  ,  0.0071078  ,  5.02913    ])
108     , -197488     , array([ 0.0385937  ,  0.0651714  ,  0.0071078  ,  5.03416    ])
116     , -197490     , array([ 0.038594   ,  0.0651722  ,  0.00710779 ,  5.02915    ])
120     , -197488     , array([ 0.038594   ,  0.0651722  ,  0.00710779 ,  5.03419    ])
124     , -197474     , array([ 0.0385947  ,  0.0652394  ,  0.00710778 ,  5.02922    ])
136     , -197474     , array([ 0.0385947  ,  0.0652396  ,  0.00710778 ,  5.02923    ])
140     , -197490     , array([ 0.0385949  ,  0.0651749  ,  0.00710778 ,  5.02924    ])
144     , -197488     , array([ 0.0385949  ,  0.0651749  ,  0.00710778 ,  5.03428    ])
148     , -196416     , array([ 0.0450131  ,  0.0838975  ,  0.00703953 ,  5.61292    ])
152     , -194690     , array([ 0.0448733  ,  0.0833493  ,  0.00683751 ,  16.8893    ])
156     , -194689     , array([ 0.0448733  ,  0.0833493  ,  0.00683751 ,  16.9062    ])
164     , -194690     , array([ 0.0448733  ,  0.0833493  ,  0.00683751 ,  16.8895    ])
168     , -194689     , array([ 0.0448733  ,  0.0833493  ,  0.00683751 ,  16.9064    ])
176     , -194690     , array([ 0.0448733  ,  0.0833493  ,  0.0068375  ,  16.8895    ])
180     , -194689     , array([ 0.0448733  ,  0.0833493  ,  0.0068375  ,  16.9064    ])
184     , -193602     , array([ 0.0446005  ,  0.0849662  ,  0.00631798 ,  28.603     ])
196     , -193602     , array([ 0.0446005  ,  0.0849662  ,  0.00631798 ,  28.6031    ])
208     , -193602     , array([ 0.0446005  ,  0.0849662  ,  0.00631798 ,  28.6031    ])
220     , -193602     , array([ 0.0446005  ,  0.0849662  ,  0.00631798 ,  28.6031    ])
232     , -193602     , array([ 0.0446005  ,  0.0849662  ,  0.00631798 ,  28.6031    ])
244     , -193602     , array([ 0.0446005  ,  0.0849662  ,  0.00631798 ,  28.6031    ])
256     , -193602     , array([ 0.0446005  ,  0.0849662  ,  0.00631798 ,  28.6031    ])
260     , -193601     , array([ 0.0446005  ,  0.0848812  ,  0.00631798 ,  28.6031    ])
264     , -193600     , array([ 0.0446005  ,  0.0848812  ,  0.00631798 ,  28.6317    ])
272     , -193601     , array([ 0.0446005  ,  0.0848812  ,  0.00631798 ,  28.6031    ])
276     , -193600     , array([ 0.0446005  ,  0.0848812  ,  0.00631798 ,  28.6317    ])
280     , -193565     , array([ 0.0445619  ,  0.0849029  ,  0.00630323 ,  29.9112    ])
292     , -193565     , array([ 0.0445619  ,  0.0849029  ,  0.00630323 ,  29.9112    ])
296     , -193564     , array([ 0.0445619  ,  0.084818   ,  0.00630323 ,  29.9112    ])
300     , -193563     , array([ 0.0445619  ,  0.084818   ,  0.00630323 ,  29.9411    ])
308     , -193564     , array([ 0.0445619  ,  0.084818   ,  0.00630323 ,  29.9112    ])
312     , -193563     , array([ 0.0445619  ,  0.084818   ,  0.00630323 ,  29.9411    ])
320     , -193564     , array([ 0.0445619  ,  0.084818   ,  0.00630323 ,  29.9112    ])
324     , -193563     , array([ 0.0445619  ,  0.084818   ,  0.00630323 ,  29.9411    ])
328     , -193565     , array([ 0.0445619  ,  0.0849029  ,  0.00630323 ,  29.9112    ])
332     , -193562     , array([ 0.0445598  ,  0.0848144  ,  0.0063024  ,  29.9863    ])
340     , -193565     , array([ 0.0445619  ,  0.0849029  ,  0.00630323 ,  29.9112    ])
344     , -193563     , array([ 0.0445605  ,  0.0848156  ,  0.00630268 ,  29.9613    ])
348     , -193562     , array([ 0.0445605  ,  0.0848156  ,  0.00630268 ,  29.9912    ])
352     , -193563     , array([ 0.04456    ,  0.0848997  ,  0.0063025  ,  29.978     ])
356     , -193562     , array([ 0.0445598  ,  0.0848145  ,  0.00630242 ,  29.9846    ])
364     , -193563     , array([ 0.0445598  ,  0.0848993  ,  0.00630241 ,  29.9859    ])
368     , -193562     , array([ 0.0445598  ,  0.0848144  ,  0.00630241 ,  29.9862    ])
376     , -193563     , array([ 0.0445598  ,  0.0848993  ,  0.0063024  ,  29.9863    ])
380     , -193562     , array([ 0.0445598  ,  0.0848144  ,  0.0063024  ,  29.9863    ])
388     , -193563     , array([ 0.0445598  ,  0.0848993  ,  0.0063024  ,  29.9863    ])
392     , -193562     , array([ 0.0445598  ,  0.0848144  ,  0.0063024  ,  29.9863    ])
400     , -193563     , array([ 0.0445598  ,  0.0848993  ,  0.0063024  ,  29.9863    ])
404     , -193562     , array([ 0.0445598  ,  0.0848144  ,  0.0063024  ,  29.9863    ])
412     , -193563     , array([ 0.0445598  ,  0.0848993  ,  0.0063024  ,  29.9863    ])
416     , -193562     , array([ 0.0445598  ,  0.0848144  ,  0.0063024  ,  29.9863    ])
424     , -193563     , array([ 0.0445598  ,  0.0848993  ,  0.0063024  ,  29.9863    ])
428     , -193562     , array([ 0.0445598  ,  0.0848144  ,  0.0063024  ,  29.9863    ])
436     , -193563     , array([ 0.0445598  ,  0.0848993  ,  0.0063024  ,  29.9863    ])
440     , -193562     , array([ 0.0445598  ,  0.0848144  ,  0.0063024  ,  29.9863    ])
448     , -193563     , array([ 0.0445598  ,  0.0848993  ,  0.0063024  ,  29.9863    ])
452     , -193562     , array([ 0.0445598  ,  0.0848144  ,  0.0063024  ,  29.9863    ])
460     , -193563     , array([ 0.0445598  ,  0.0848993  ,  0.0063024  ,  29.9863    ])
464     , -193562     , array([ 0.0445598  ,  0.0848144  ,  0.0063024  ,  29.9863    ])
472     , -193563     , array([ 0.0445598  ,  0.0848993  ,  0.0063024  ,  29.9863    ])
476     , -193562     , array([ 0.0445598  ,  0.0848144  ,  0.0063024  ,  29.9863    ])
488     , -193572     , array([ 0.0446159  ,  0.0848334  ,  0.00630683 ,  29.5867    ])
496     , -193567     , array([ 0.044564   ,  0.0849063  ,  0.00630404 ,  29.8379    ])
500     , -193563     , array([ 0.0445604  ,  0.0848155  ,  0.00630265 ,  29.9643    ])
504     , -193562     , array([ 0.0445604  ,  0.0848155  ,  0.00630265 ,  29.9943    ])
508     , -193561     , array([ 0.0446041  ,  0.084814   ,  0.0063023  ,  29.996     ])
512     , -193562     , array([ 0.04456    ,  0.0848148  ,  0.00630249 ,  29.9785    ])
Finshed optimization **************************************************
Writing out parameters **************************************************
Writing out SFS **************************************************
Making plots **************************************************
carrying out inference 19 for model 2D.5epoch.fixedN1N3.nomig for pop MN-IR
Beginning optimization ************************************************
4       , -525430     , array([ 0.0181405  ,  0.099      ,  0.012051   ,  7.2697     ])
8       , -205258     , array([ 0.041302   ,  0.0592894  ,  0.00906817 ,  7.24655    ])
12      , -205257     , array([ 0.041302   ,  0.0592894  ,  0.00906817 ,  7.2538     ])
20      , -204511     , array([ 0.0412466  ,  0.0596731  ,  0.00888774 ,  7.25105    ])
24      , -204510     , array([ 0.0412466  ,  0.0596731  ,  0.00888774 ,  7.25831    ])
28      , -203693     , array([ 0.0411873  ,  0.0601471  ,  0.00869841 ,  7.25588    ])
40      , -203530     , array([ 0.0411727  ,  0.0602495  ,  0.00865242 ,  7.25707    ])
44      , -201363     , array([ 0.0409876  ,  0.0615061  ,  0.00808827 ,  7.27221    ])
48      , -201362     , array([ 0.0409876  ,  0.0615061  ,  0.00808827 ,  7.27949    ])
56      , -201363     , array([ 0.0409878  ,  0.0615067  ,  0.00808826 ,  7.27224    ])
60      , -201362     , array([ 0.0409878  ,  0.0615067  ,  0.00808826 ,  7.27951    ])
64      , -201339     , array([ 0.0409889  ,  0.0615707  ,  0.00808824 ,  7.27233    ])
68      , -198513     , array([ 0.051579   ,  0.0886235  ,  0.00792491 ,  8.20162    ])
72      , -198512     , array([ 0.051579   ,  0.0886235  ,  0.00792491 ,  8.20982    ])
80      , -198513     , array([ 0.051579   ,  0.0886235  ,  0.00792491 ,  8.20183    ])
84      , -198512     , array([ 0.051579   ,  0.0886235  ,  0.00792491 ,  8.21003    ])
92      , -198513     , array([ 0.0515789  ,  0.0886234  ,  0.0079249  ,  8.20192    ])
96      , -198512     , array([ 0.0515789  ,  0.0886234  ,  0.0079249  ,  8.21012    ])
100     , -196456     , array([ 0.0505017  ,  0.0867535  ,  0.00753655 ,  26.1942    ])
104     , -193781     , array([ 0.0495467  ,  0.0907468  ,  0.00639609 ,  29.2552    ])
108     , -193780     , array([ 0.0495467  ,  0.0907468  ,  0.00639609 ,  29.2845    ])
116     , -193781     , array([ 0.0495467  ,  0.0907468  ,  0.00639609 ,  29.2553    ])
120     , -193780     , array([ 0.0495467  ,  0.0907468  ,  0.00639609 ,  29.2846    ])
124     , -193773     , array([ 0.0495467  ,  0.0908377  ,  0.00639609 ,  29.2556    ])
136     , -193773     , array([ 0.0495467  ,  0.0908377  ,  0.00639609 ,  29.2556    ])
140     , -193781     , array([ 0.0495467  ,  0.0907469  ,  0.00639609 ,  29.2556    ])
144     , -193780     , array([ 0.0495467  ,  0.0907469  ,  0.00639609 ,  29.2849    ])
152     , -193781     , array([ 0.0495467  ,  0.0907469  ,  0.00639609 ,  29.2556    ])
156     , -193780     , array([ 0.0495467  ,  0.0907469  ,  0.00639609 ,  29.2849    ])
160     , -193773     , array([ 0.0495467  ,  0.0908377  ,  0.00639609 ,  29.2557    ])
172     , -193773     , array([ 0.0495467  ,  0.0908377  ,  0.00639609 ,  29.2557    ])
176     , -193781     , array([ 0.0495467  ,  0.0907469  ,  0.00639609 ,  29.2557    ])
180     , -193780     , array([ 0.0495467  ,  0.0907469  ,  0.00639609 ,  29.2849    ])
188     , -193781     , array([ 0.0495467  ,  0.0907469  ,  0.00639609 ,  29.2557    ])
192     , -193780     , array([ 0.0495467  ,  0.0907469  ,  0.00639609 ,  29.2849    ])
196     , -193773     , array([ 0.0495467  ,  0.0908377  ,  0.00639609 ,  29.2557    ])
208     , -193773     , array([ 0.0495467  ,  0.0908377  ,  0.00639609 ,  29.2557    ])
212     , -193781     , array([ 0.0495467  ,  0.0907469  ,  0.00639609 ,  29.2557    ])
216     , -193780     , array([ 0.0495467  ,  0.0907469  ,  0.00639609 ,  29.2849    ])
220     , -193752     , array([ 0.0496075  ,  0.0910432  ,  0.00639036 ,  29.832     ])
232     , -193752     , array([ 0.0496075  ,  0.0910432  ,  0.00639036 ,  29.832     ])
236     , -193759     , array([ 0.0496075  ,  0.0909522  ,  0.00639036 ,  29.832     ])
240     , -193759     , array([ 0.0496075  ,  0.0909522  ,  0.00639036 ,  29.8618    ])
248     , -193759     , array([ 0.0496075  ,  0.0909522  ,  0.00639036 ,  29.832     ])
252     , -193759     , array([ 0.0496075  ,  0.0909522  ,  0.00639036 ,  29.8618    ])
256     , -193752     , array([ 0.0496075  ,  0.0910432  ,  0.00639036 ,  29.832     ])
260     , -193756     , array([ 0.0496175  ,  0.0909861  ,  0.00638942 ,  29.9282    ])
264     , -193755     , array([ 0.0496175  ,  0.0909861  ,  0.00638942 ,  29.9581    ])
268     , -193747     , array([ 0.0496242  ,  0.0910996  ,  0.00638879 ,  29.9918    ])
272     , -193756     , array([ 0.0496175  ,  0.0909861  ,  0.00638942 ,  29.9282    ])
276     , -193755     , array([ 0.0496175  ,  0.0909861  ,  0.00638942 ,  29.9581    ])
280     , -193747     , array([ 0.0496219  ,  0.0910921  ,  0.006389   ,  29.9706    ])
284     , -193754     , array([ 0.0496237  ,  0.0910069  ,  0.00638884 ,  29.9873    ])
292     , -193747     , array([ 0.0496241  ,  0.0910992  ,  0.0063888  ,  29.9909    ])
296     , -193754     , array([ 0.0496241  ,  0.0910084  ,  0.0063888  ,  29.9916    ])
304     , -193747     , array([ 0.0496241  ,  0.0910995  ,  0.0063888  ,  29.9918    ])
308     , -193754     , array([ 0.0496242  ,  0.0910085  ,  0.00638879 ,  29.9918    ])
316     , -193747     , array([ 0.0496242  ,  0.0910996  ,  0.00638879 ,  29.9918    ])
320     , -193754     , array([ 0.0496242  ,  0.0910085  ,  0.00638879 ,  29.9918    ])
328     , -193747     , array([ 0.0496242  ,  0.0910996  ,  0.00638879 ,  29.9918    ])
332     , -193754     , array([ 0.0496242  ,  0.0910085  ,  0.00638879 ,  29.9918    ])
340     , -193747     , array([ 0.0496242  ,  0.0910996  ,  0.00638879 ,  29.9918    ])
344     , -193754     , array([ 0.0496242  ,  0.0910085  ,  0.00638879 ,  29.9918    ])
352     , -193747     , array([ 0.0496242  ,  0.0910996  ,  0.00638879 ,  29.9918    ])
356     , -193754     , array([ 0.0496242  ,  0.0910085  ,  0.00638879 ,  29.9918    ])
364     , -193747     , array([ 0.0496242  ,  0.0910996  ,  0.00638879 ,  29.9918    ])
368     , -193754     , array([ 0.0496242  ,  0.0910085  ,  0.00638879 ,  29.9918    ])
376     , -193747     , array([ 0.0496242  ,  0.0910996  ,  0.00638879 ,  29.9918    ])
380     , -193754     , array([ 0.0496242  ,  0.0910085  ,  0.00638879 ,  29.9918    ])
388     , -193747     , array([ 0.0496242  ,  0.0910996  ,  0.00638879 ,  29.9918    ])
392     , -193754     , array([ 0.0496242  ,  0.0910085  ,  0.00638879 ,  29.9918    ])
400     , -193747     , array([ 0.0496242  ,  0.0910996  ,  0.00638879 ,  29.9918    ])
404     , -193754     , array([ 0.0496242  ,  0.0910085  ,  0.00638879 ,  29.9918    ])
412     , -193747     , array([ 0.0496242  ,  0.0910996  ,  0.00638879 ,  29.9918    ])
416     , -193754     , array([ 0.0496242  ,  0.0910085  ,  0.00638879 ,  29.9918    ])
428     , -193759     , array([ 0.0496075  ,  0.0909521  ,  0.00639037 ,  29.8316    ])
432     , -193759     , array([ 0.0496075  ,  0.0909521  ,  0.00639037 ,  29.8614    ])
436     , -193762     , array([ 0.0496723  ,  0.0910034  ,  0.00638894 ,  29.9774    ])
440     , -193757     , array([ 0.0496139  ,  0.090974   ,  0.00638976 ,  29.8938    ])
Finshed optimization **************************************************
Writing out parameters **************************************************
Writing out SFS **************************************************
Making plots **************************************************
carrying out inference 20 for model 2D.5epoch.fixedN1N3.nomig for pop MN-IR
Beginning optimization ************************************************
4       , -598429     , array([ 0.00885464 ,  0.0518242  ,  0.00767296 ,  8.99497    ])
8       , -200407     , array([ 0.0198306  ,  0.0292756  ,  0.00621715 ,  8.97796    ])
12      , -200405     , array([ 0.0198306  ,  0.0292756  ,  0.00621715 ,  8.98694    ])
20      , -199345     , array([ 0.0212531  ,  0.032121   ,  0.00625579 ,  9.15558    ])
24      , -199343     , array([ 0.0212531  ,  0.032121   ,  0.00625579 ,  9.16474    ])
28      , -197563     , array([ 0.0241968  ,  0.0390859  ,  0.00596155 ,  9.53703    ])
40      , -197563     , array([ 0.0241968  ,  0.0390859  ,  0.00596154 ,  9.53717    ])
52      , -197563     , array([ 0.0241968  ,  0.0390858  ,  0.00596154 ,  9.53721    ])
56      , -196821     , array([ 0.024044   ,  0.038642   ,  0.00589695 ,  21.3475    ])
60      , -196820     , array([ 0.024044   ,  0.038642   ,  0.00589695 ,  21.3689    ])
64      , -195415     , array([ 0.0268781  ,  0.0453511  ,  0.00584004 ,  25.7568    ])
76      , -195415     , array([ 0.0268781  ,  0.0453512  ,  0.00584004 ,  25.7568    ])
80      , -195441     , array([ 0.0268782  ,  0.045306   ,  0.00584004 ,  25.757     ])
84      , -195440     , array([ 0.0268782  ,  0.045306   ,  0.00584004 ,  25.7828    ])
92      , -195441     , array([ 0.0268782  ,  0.045306   ,  0.00584004 ,  25.757     ])
96      , -195440     , array([ 0.0268782  ,  0.045306   ,  0.00584004 ,  25.7828    ])
100     , -195415     , array([ 0.0268782  ,  0.0453514  ,  0.00584004 ,  25.757     ])
104     , -194783     , array([ 0.0284251  ,  0.0489685  ,  0.00587135 ,  29.1073    ])
108     , -194783     , array([ 0.0284251  ,  0.0489685  ,  0.00587135 ,  29.1364    ])
116     , -194783     , array([ 0.0284252  ,  0.0489685  ,  0.00587135 ,  29.1073    ])
120     , -194783     , array([ 0.0284252  ,  0.0489685  ,  0.00587135 ,  29.1364    ])
124     , -194762     , array([ 0.0284252  ,  0.0490175  ,  0.00587135 ,  29.1073    ])
136     , -194762     , array([ 0.0284252  ,  0.0490176  ,  0.00587135 ,  29.1073    ])
140     , -194783     , array([ 0.0284252  ,  0.0489686  ,  0.00587135 ,  29.1073    ])
144     , -194783     , array([ 0.0284252  ,  0.0489686  ,  0.00587135 ,  29.1364    ])
152     , -194783     , array([ 0.0284252  ,  0.0489686  ,  0.00587135 ,  29.1073    ])
156     , -194783     , array([ 0.0284252  ,  0.0489686  ,  0.00587135 ,  29.1364    ])
160     , -194762     , array([ 0.0284252  ,  0.0490176  ,  0.00587135 ,  29.1073    ])
172     , -194762     , array([ 0.0284252  ,  0.0490176  ,  0.00587135 ,  29.1073    ])
176     , -194783     , array([ 0.0284252  ,  0.0489686  ,  0.00587135 ,  29.1073    ])
180     , -194783     , array([ 0.0284252  ,  0.0489686  ,  0.00587135 ,  29.1364    ])
184     , -194675     , array([ 0.0286194  ,  0.0494607  ,  0.00588361 ,  29.5601    ])
196     , -194675     , array([ 0.0286194  ,  0.0494607  ,  0.00588361 ,  29.5601    ])
200     , -194696     , array([ 0.0286194  ,  0.0494113  ,  0.00588361 ,  29.5601    ])
204     , -194695     , array([ 0.0286194  ,  0.0494113  ,  0.00588361 ,  29.5897    ])
212     , -194696     , array([ 0.0286194  ,  0.0494113  ,  0.00588361 ,  29.5601    ])
216     , -194695     , array([ 0.0286194  ,  0.0494113  ,  0.00588361 ,  29.5897    ])
220     , -194675     , array([ 0.0286194  ,  0.0494607  ,  0.00588361 ,  29.5601    ])
224     , -194651     , array([ 0.0287321  ,  0.0496948  ,  0.00588303 ,  29.982     ])
232     , -194675     , array([ 0.0286194  ,  0.0494607  ,  0.00588361 ,  29.5601    ])
236     , -194666     , array([ 0.0286945  ,  0.0496001  ,  0.00588323 ,  29.8407    ])
240     , -194666     , array([ 0.0286945  ,  0.0496001  ,  0.00588323 ,  29.8706    ])
244     , -194636     , array([ 0.0287196  ,  0.0497129  ,  0.0058831  ,  29.9348    ])
248     , -194653     , array([ 0.0287279  ,  0.0496843  ,  0.00588305 ,  29.9663    ])
252     , -194652     , array([ 0.0287279  ,  0.0496843  ,  0.00588305 ,  29.9963    ])
256     , -194631     , array([ 0.0287307  ,  0.049741   ,  0.00588304 ,  29.9768    ])
260     , -194651     , array([ 0.0287318  ,  0.049694   ,  0.00588303 ,  29.9809    ])
268     , -194631     , array([ 0.0287321  ,  0.0497443  ,  0.00588303 ,  29.9818    ])
272     , -194651     , array([ 0.0287321  ,  0.0496947  ,  0.00588303 ,  29.982     ])
280     , -194631     , array([ 0.0287321  ,  0.0497445  ,  0.00588303 ,  29.982     ])
284     , -194651     , array([ 0.0287321  ,  0.0496948  ,  0.00588303 ,  29.982     ])
292     , -194631     , array([ 0.0287321  ,  0.0497445  ,  0.00588303 ,  29.982     ])
296     , -194651     , array([ 0.0287321  ,  0.0496948  ,  0.00588303 ,  29.982     ])
304     , -194631     , array([ 0.0287321  ,  0.0497445  ,  0.00588303 ,  29.982     ])
308     , -194651     , array([ 0.0287321  ,  0.0496948  ,  0.00588303 ,  29.982     ])
316     , -194631     , array([ 0.0287321  ,  0.0497445  ,  0.00588303 ,  29.982     ])
320     , -194651     , array([ 0.0287321  ,  0.0496948  ,  0.00588303 ,  29.982     ])
328     , -194631     , array([ 0.0287321  ,  0.0497445  ,  0.00588303 ,  29.982     ])
332     , -194651     , array([ 0.0287321  ,  0.0496948  ,  0.00588303 ,  29.982     ])
340     , -194631     , array([ 0.0287321  ,  0.0497445  ,  0.00588303 ,  29.982     ])
344     , -194651     , array([ 0.0287321  ,  0.0496948  ,  0.00588303 ,  29.982     ])
352     , -194631     , array([ 0.0287321  ,  0.0497445  ,  0.00588303 ,  29.982     ])
356     , -194651     , array([ 0.0287321  ,  0.0496948  ,  0.00588303 ,  29.982     ])
364     , -194631     , array([ 0.0287321  ,  0.0497445  ,  0.00588303 ,  29.982     ])
368     , -194651     , array([ 0.0287321  ,  0.0496948  ,  0.00588303 ,  29.982     ])
376     , -194631     , array([ 0.0287321  ,  0.0497445  ,  0.00588303 ,  29.982     ])
380     , -194651     , array([ 0.0287321  ,  0.0496948  ,  0.00588303 ,  29.982     ])
388     , -194631     , array([ 0.0287321  ,  0.0497445  ,  0.00588303 ,  29.982     ])
392     , -194651     , array([ 0.0287321  ,  0.0496948  ,  0.00588303 ,  29.982     ])
400     , -194631     , array([ 0.0287321  ,  0.0497445  ,  0.00588303 ,  29.982     ])
408     , -194631     , array([ 0.0287321  ,  0.0497445  ,  0.00588303 ,  29.982     ])
412     , -194662     , array([ 0.0287055  ,  0.0496279  ,  0.00588317 ,  29.8821    ])
416     , -194652     , array([ 0.0287312  ,  0.0496924  ,  0.00588304 ,  29.9784    ])
Finshed optimization **************************************************
Writing out parameters **************************************************
Writing out SFS **************************************************
Making plots **************************************************
carrying out inference 21 for model 2D.5epoch.fixedN1N3.nomig for pop MN-IR
Beginning optimization ************************************************
4       , -599580     , array([ 0.0118524  ,  0.099      ,  0.00729442 ,  13.8131    ])
8       , -224603     , array([ 0.029044   ,  0.0844595  ,  0.00470421 ,  13.7726    ])
12      , -224602     , array([ 0.029044   ,  0.0844595  ,  0.00470421 ,  13.7864    ])
16      , -213565     , array([ 0.351299   ,  0.00872858 ,  0.00590032 ,  14.0304    ])
20      , -225309     , array([ 0.611525   ,  0.0149258  ,  0.01277    ,  14.1549    ])
24      , -225309     , array([ 0.611525   ,  0.0149258  ,  0.01277    ,  14.169     ])
28      , -210554     , array([ 0.408871   ,  0.0101124  ,  0.00728919 ,  14.0643    ])
40      , -210554     , array([ 0.408872   ,  0.0101124  ,  0.00728918 ,  14.0676    ])
52      , -210554     , array([ 0.408872   ,  0.0101124  ,  0.00728918 ,  14.0676    ])
64      , -210554     , array([ 0.408872   ,  0.0101124  ,  0.00728918 ,  14.0676    ])
68      , -210552     , array([ 0.408872   ,  0.0101023  ,  0.00728918 ,  14.0678    ])
72      , -210552     , array([ 0.408872   ,  0.0101023  ,  0.00728918 ,  14.0819    ])
76      , -210444     , array([ 0.409768   ,  0.0101655  ,  0.00727558 ,  23.0321    ])
88      , -210444     , array([ 0.409768   ,  0.0101655  ,  0.00727558 ,  23.0321    ])
100     , -210444     , array([ 0.409768   ,  0.0101655  ,  0.00727558 ,  23.0321    ])
104     , -210442     , array([ 0.409768   ,  0.0101554  ,  0.00727558 ,  23.0321    ])
108     , -210442     , array([ 0.409768   ,  0.0101554  ,  0.00727558 ,  23.0552    ])
112     , -210374     , array([ 0.412752   ,  0.0101108  ,  0.00725999 ,  28.7445    ])
124     , -210374     , array([ 0.412752   ,  0.0101108  ,  0.00725999 ,  28.7445    ])
128     , -210373     , array([ 0.412752   ,  0.0101007  ,  0.00725999 ,  28.7445    ])
132     , -210372     , array([ 0.412752   ,  0.0101007  ,  0.00725999 ,  28.7733    ])
140     , -210373     , array([ 0.412752   ,  0.0101007  ,  0.00725999 ,  28.7445    ])
144     , -210372     , array([ 0.412752   ,  0.0101007  ,  0.00725999 ,  28.7733    ])
148     , -210374     , array([ 0.412752   ,  0.0101108  ,  0.00725999 ,  28.7445    ])
152     , -210362     , array([ 0.413246   ,  0.0100917  ,  0.00725743 ,  29.8147    ])
156     , -210362     , array([ 0.413246   ,  0.0100917  ,  0.00725743 ,  29.8446    ])
164     , -210362     , array([ 0.413246   ,  0.0100917  ,  0.00725743 ,  29.8147    ])
168     , -210362     , array([ 0.413246   ,  0.0100917  ,  0.00725743 ,  29.8446    ])
176     , -210362     , array([ 0.413246   ,  0.0100917  ,  0.00725743 ,  29.8147    ])
180     , -210362     , array([ 0.413246   ,  0.0100917  ,  0.00725743 ,  29.8446    ])
188     , -210362     , array([ 0.413246   ,  0.0100917  ,  0.00725743 ,  29.8147    ])
192     , -210362     , array([ 0.413246   ,  0.0100917  ,  0.00725743 ,  29.8446    ])
196     , -210364     , array([ 0.413246   ,  0.0101018  ,  0.00725743 ,  29.8147    ])
208     , -210364     , array([ 0.413246   ,  0.0101018  ,  0.00725743 ,  29.8147    ])
212     , -210362     , array([ 0.413246   ,  0.0100917  ,  0.00725743 ,  29.8147    ])
216     , -210362     , array([ 0.413246   ,  0.0100917  ,  0.00725743 ,  29.8446    ])
224     , -210362     , array([ 0.413246   ,  0.0100917  ,  0.00725743 ,  29.8147    ])
228     , -210362     , array([ 0.413246   ,  0.0100917  ,  0.00725743 ,  29.8446    ])
232     , -210364     , array([ 0.413246   ,  0.0101018  ,  0.00725743 ,  29.8147    ])
244     , -210364     , array([ 0.413246   ,  0.0101018  ,  0.00725743 ,  29.8147    ])
248     , -210362     , array([ 0.413246   ,  0.0100917  ,  0.00725743 ,  29.8147    ])
252     , -210362     , array([ 0.413246   ,  0.0100917  ,  0.00725743 ,  29.8446    ])
260     , -210362     , array([ 0.413246   ,  0.0100917  ,  0.00725743 ,  29.8147    ])
264     , -210362     , array([ 0.413246   ,  0.0100917  ,  0.00725743 ,  29.8446    ])
268     , -210364     , array([ 0.413246   ,  0.0101018  ,  0.00725743 ,  29.8147    ])
272     , -210359     , array([ 0.413372   ,  0.0100888  ,  0.00725686 ,  29.9665    ])
276     , -210359     , array([ 0.413372   ,  0.0100888  ,  0.00725686 ,  29.9965    ])
284     , -210359     , array([ 0.413372   ,  0.0100888  ,  0.00725686 ,  29.9665    ])
288     , -210359     , array([ 0.413372   ,  0.0100888  ,  0.00725686 ,  29.9965    ])
292     , -210361     , array([ 0.413372   ,  0.0100989  ,  0.00725686 ,  29.9665    ])
296     , -210359     , array([ 0.413372   ,  0.0100888  ,  0.00725686 ,  29.9665    ])
300     , -210359     , array([ 0.413372   ,  0.0100888  ,  0.00725686 ,  29.9965    ])
304     , -210361     , array([ 0.413372   ,  0.0100989  ,  0.00725686 ,  29.9665    ])
308     , -210359     , array([ 0.413372   ,  0.0100888  ,  0.00725686 ,  29.9665    ])
312     , -210359     , array([ 0.413372   ,  0.0100888  ,  0.00725686 ,  29.9965    ])
316     , -210361     , array([ 0.413372   ,  0.0100989  ,  0.00725686 ,  29.9665    ])
320     , -210359     , array([ 0.413372   ,  0.0100888  ,  0.00725686 ,  29.9665    ])
324     , -210359     , array([ 0.413372   ,  0.0100888  ,  0.00725686 ,  29.9965    ])
328     , -210361     , array([ 0.413372   ,  0.0100989  ,  0.00725686 ,  29.9665    ])
332     , -210359     , array([ 0.413372   ,  0.0100888  ,  0.00725686 ,  29.9665    ])
336     , -210359     , array([ 0.413372   ,  0.0100888  ,  0.00725686 ,  29.9965    ])
340     , -210361     , array([ 0.413372   ,  0.0100989  ,  0.00725686 ,  29.9665    ])
344     , -210359     , array([ 0.413372   ,  0.0100888  ,  0.00725686 ,  29.9665    ])
348     , -210359     , array([ 0.413372   ,  0.0100888  ,  0.00725686 ,  29.9965    ])
352     , -210361     , array([ 0.413372   ,  0.0100989  ,  0.00725686 ,  29.9665    ])
364     , -210361     , array([ 0.413391   ,  0.0100984  ,  0.00725678 ,  29.989     ])
368     , -210360     , array([ 0.413357   ,  0.0100891  ,  0.00725693 ,  29.948     ])
Finshed optimization **************************************************
Writing out parameters **************************************************
Writing out SFS **************************************************
Making plots **************************************************
carrying out inference 22 for model 2D.5epoch.fixedN1N3.nomig for pop MN-IR
Beginning optimization ************************************************
4       , -639785     , array([ 0.0087872  ,  0.0634148  ,  0.00670359 ,  14.4587    ])
8       , -197454     , array([ 0.0212779  ,  0.0430823  ,  0.00497339 ,  14.4319    ])
12      , -197452     , array([ 0.0212779  ,  0.0430823  ,  0.00497339 ,  14.4464    ])
20      , -196280     , array([ 0.0215204  ,  0.0426023  ,  0.00516451 ,  14.4591    ])
24      , -196279     , array([ 0.0215204  ,  0.0426023  ,  0.00516451 ,  14.4735    ])
28      , -205729     , array([ 0.0281244  ,  0.0697366  ,  0.00592055 ,  17.2226    ])
32      , -196131     , array([ 0.0221329  ,  0.0448571  ,  0.00523903 ,  14.7267    ])
36      , -196130     , array([ 0.0221329  ,  0.0448571  ,  0.00523903 ,  14.7415    ])
40      , -195878     , array([ 0.0221173  ,  0.0448191  ,  0.00521927 ,  19.3327    ])
44      , -195357     , array([ 0.0223234  ,  0.0449247  ,  0.00531005 ,  21.5732    ])
48      , -195357     , array([ 0.0223234  ,  0.0449247  ,  0.00531005 ,  21.5947    ])
56      , -195357     , array([ 0.0223234  ,  0.0449247  ,  0.00531005 ,  21.5732    ])
60      , -195356     , array([ 0.0223234  ,  0.0449247  ,  0.00531005 ,  21.5947    ])
64      , -195369     , array([ 0.0223234  ,  0.0449696  ,  0.00531006 ,  21.5734    ])
68      , -194874     , array([ 0.0223992  ,  0.0446025  ,  0.00538118 ,  25.9247    ])
72      , -194873     , array([ 0.0223992  ,  0.0446025  ,  0.00538118 ,  25.9507    ])
80      , -194874     , array([ 0.0223992  ,  0.0446025  ,  0.00538118 ,  25.9247    ])
84      , -194873     , array([ 0.0223992  ,  0.0446025  ,  0.00538118 ,  25.9507    ])
88      , -194883     , array([ 0.0223992  ,  0.0446471  ,  0.00538118 ,  25.9247    ])
92      , -194438     , array([ 0.0226113  ,  0.0446512  ,  0.00548978 ,  29.1634    ])
96      , -194437     , array([ 0.0226113  ,  0.0446512  ,  0.00548978 ,  29.1926    ])
104     , -194438     , array([ 0.0226113  ,  0.0446512  ,  0.00548978 ,  29.1634    ])
108     , -194437     , array([ 0.0226113  ,  0.0446512  ,  0.00548978 ,  29.1926    ])
112     , -194446     , array([ 0.0226113  ,  0.0446959  ,  0.00548978 ,  29.1636    ])
124     , -194446     , array([ 0.0226113  ,  0.0446959  ,  0.00548978 ,  29.1636    ])
128     , -194438     , array([ 0.0226113  ,  0.0446512  ,  0.00548978 ,  29.1636    ])
132     , -194437     , array([ 0.0226113  ,  0.0446512  ,  0.00548978 ,  29.1928    ])
140     , -194438     , array([ 0.0226113  ,  0.0446512  ,  0.00548978 ,  29.1636    ])
144     , -194437     , array([ 0.0226113  ,  0.0446512  ,  0.00548978 ,  29.1928    ])
148     , -194446     , array([ 0.0226113  ,  0.0446959  ,  0.00548978 ,  29.1636    ])
160     , -194446     , array([ 0.0226113  ,  0.0446959  ,  0.00548978 ,  29.1636    ])
164     , -194438     , array([ 0.0226113  ,  0.0446512  ,  0.00548978 ,  29.1636    ])
168     , -194437     , array([ 0.0226113  ,  0.0446512  ,  0.00548978 ,  29.1928    ])
172     , -194391     , array([ 0.022629   ,  0.0446696  ,  0.00550166 ,  29.9213    ])
184     , -194391     , array([ 0.022629   ,  0.0446696  ,  0.00550166 ,  29.9213    ])
188     , -194383     , array([ 0.022629   ,  0.044625   ,  0.00550166 ,  29.9213    ])
192     , -194382     , array([ 0.022629   ,  0.044625   ,  0.00550166 ,  29.9512    ])
200     , -194383     , array([ 0.022629   ,  0.044625   ,  0.00550166 ,  29.9213    ])
204     , -194382     , array([ 0.022629   ,  0.044625   ,  0.00550166 ,  29.9512    ])
208     , -194391     , array([ 0.022629   ,  0.0446696  ,  0.00550166 ,  29.9213    ])
220     , -194391     , array([ 0.022629   ,  0.0446696  ,  0.00550166 ,  29.9213    ])
224     , -194383     , array([ 0.022629   ,  0.044625   ,  0.00550166 ,  29.9213    ])
228     , -194382     , array([ 0.022629   ,  0.044625   ,  0.00550166 ,  29.9512    ])
232     , -194387     , array([ 0.0226304  ,  0.0446674  ,  0.00550264 ,  29.9847    ])
236     , -194383     , array([ 0.022629   ,  0.044625   ,  0.00550166 ,  29.9213    ])
240     , -194382     , array([ 0.022629   ,  0.044625   ,  0.00550166 ,  29.9512    ])
244     , -194388     , array([ 0.02263    ,  0.0446682  ,  0.00550232 ,  29.9635    ])
248     , -194379     , array([ 0.0226303  ,  0.044623   ,  0.00550253 ,  29.9776    ])
256     , -194387     , array([ 0.0226304  ,  0.0446675  ,  0.00550262 ,  29.9832    ])
260     , -194379     , array([ 0.0226304  ,  0.0446228  ,  0.00550264 ,  29.9844    ])
268     , -194387     , array([ 0.0226304  ,  0.0446674  ,  0.00550264 ,  29.9846    ])
272     , -194379     , array([ 0.0226304  ,  0.0446228  ,  0.00550264 ,  29.9847    ])
280     , -194387     , array([ 0.0226304  ,  0.0446674  ,  0.00550264 ,  29.9847    ])
284     , -194379     , array([ 0.0226304  ,  0.0446228  ,  0.00550264 ,  29.9847    ])
292     , -194387     , array([ 0.0226304  ,  0.0446674  ,  0.00550264 ,  29.9847    ])
296     , -194379     , array([ 0.0226304  ,  0.0446228  ,  0.00550264 ,  29.9847    ])
304     , -194387     , array([ 0.0226304  ,  0.0446674  ,  0.00550264 ,  29.9847    ])
308     , -194379     , array([ 0.0226304  ,  0.0446228  ,  0.00550264 ,  29.9847    ])
316     , -194387     , array([ 0.0226304  ,  0.0446674  ,  0.00550264 ,  29.9847    ])
320     , -194379     , array([ 0.0226304  ,  0.0446228  ,  0.00550264 ,  29.9847    ])
328     , -194387     , array([ 0.0226304  ,  0.0446674  ,  0.00550264 ,  29.9847    ])
332     , -194379     , array([ 0.0226304  ,  0.0446228  ,  0.00550264 ,  29.9847    ])
340     , -194387     , array([ 0.0226304  ,  0.0446674  ,  0.00550264 ,  29.9847    ])
344     , -194379     , array([ 0.0226304  ,  0.0446228  ,  0.00550264 ,  29.9847    ])
352     , -194387     , array([ 0.0226304  ,  0.0446674  ,  0.00550264 ,  29.9847    ])
356     , -194379     , array([ 0.0226304  ,  0.0446228  ,  0.00550264 ,  29.9847    ])
364     , -194387     , array([ 0.0226304  ,  0.0446674  ,  0.00550264 ,  29.9847    ])
368     , -194379     , array([ 0.0226304  ,  0.0446228  ,  0.00550264 ,  29.9847    ])
376     , -194387     , array([ 0.0226304  ,  0.0446674  ,  0.00550264 ,  29.9847    ])
380     , -194379     , array([ 0.0226304  ,  0.0446228  ,  0.00550264 ,  29.9847    ])
392     , -194391     , array([ 0.022629   ,  0.0446696  ,  0.00550166 ,  29.9211    ])
400     , -194372     , array([ 0.0226527  ,  0.0446233  ,  0.0055024  ,  29.9691    ])
404     , -194378     , array([ 0.0226306  ,  0.0446225  ,  0.00550277 ,  29.9932    ])
408     , -194366     , array([ 0.0226306  ,  0.0446225  ,  0.00550828 ,  29.9932    ])
Finshed optimization **************************************************
Writing out parameters **************************************************
Writing out SFS **************************************************
Making plots **************************************************
carrying out inference 23 for model 2D.5epoch.fixedN1N3.nomig for pop MN-IR
Beginning optimization ************************************************
4       , -489268     , array([ 0.0108378  ,  0.0544577  ,  0.00685118 ,  15.58      ])
8       , -209232     , array([ 0.0236724  ,  0.0292218  ,  0.00589681 ,  15.5674    ])
12      , -209231     , array([ 0.0236724  ,  0.0292218  ,  0.00589681 ,  15.583     ])
20      , -208698     , array([ 0.0240204  ,  0.0295233  ,  0.00606938 ,  15.6058    ])
24      , -208697     , array([ 0.0240204  ,  0.0295233  ,  0.00606938 ,  15.6214    ])
28      , -207605     , array([ 0.0262406  ,  0.0329766  ,  0.00604406 ,  15.8928    ])
32      , -203668     , array([ 0.0373723  ,  0.0510738  ,  0.00594386 ,  17.0947    ])
36      , -203667     , array([ 0.0373723  ,  0.0510738  ,  0.00594386 ,  17.1118    ])
44      , -203668     , array([ 0.0373715  ,  0.0510726  ,  0.00594384 ,  17.1019    ])
48      , -203667     , array([ 0.0373715  ,  0.0510726  ,  0.00594384 ,  17.119     ])
52      , -203527     , array([ 0.0366256  ,  0.0498508  ,  0.00591926 ,  26.3989    ])
56      , -203385     , array([ 0.0372099  ,  0.0507902  ,  0.00591843 ,  26.7417    ])
60      , -203385     , array([ 0.0372099  ,  0.0507902  ,  0.00591843 ,  26.7684    ])
64      , -202601     , array([ 0.0396418  ,  0.0550026  ,  0.00591511 ,  28.1579    ])
76      , -202601     , array([ 0.0396419  ,  0.0550027  ,  0.00591511 ,  28.1579    ])
80      , -202647     , array([ 0.039642   ,  0.054948   ,  0.00591511 ,  28.158     ])
84      , -202646     , array([ 0.039642   ,  0.054948   ,  0.00591511 ,  28.1861    ])
92      , -202647     , array([ 0.039642   ,  0.054948   ,  0.00591511 ,  28.158     ])
96      , -202646     , array([ 0.039642   ,  0.054948   ,  0.00591511 ,  28.1862    ])
100     , -202601     , array([ 0.0396421  ,  0.055003   ,  0.00591511 ,  28.158     ])
104     , -201936     , array([ 0.0422328  ,  0.0594457  ,  0.00591179 ,  29.6491    ])
108     , -201935     , array([ 0.0422328  ,  0.0594457  ,  0.00591179 ,  29.6788    ])
116     , -201936     , array([ 0.0422328  ,  0.0594457  ,  0.00591179 ,  29.6491    ])
120     , -201935     , array([ 0.0422328  ,  0.0594457  ,  0.00591179 ,  29.6788    ])
124     , -201891     , array([ 0.0422328  ,  0.0595052  ,  0.00591179 ,  29.6491    ])
136     , -201891     , array([ 0.0422328  ,  0.0595052  ,  0.00591179 ,  29.6491    ])
140     , -201936     , array([ 0.0422328  ,  0.0594457  ,  0.00591179 ,  29.6491    ])
144     , -201935     , array([ 0.0422328  ,  0.0594457  ,  0.00591179 ,  29.6788    ])
148     , -201777     , array([ 0.0426763  ,  0.0602826  ,  0.00591124 ,  29.9027    ])
160     , -201777     , array([ 0.0426763  ,  0.0602826  ,  0.00591124 ,  29.9027    ])
164     , -201822     , array([ 0.0426763  ,  0.0602224  ,  0.00591124 ,  29.9027    ])
168     , -201821     , array([ 0.0426763  ,  0.0602224  ,  0.00591124 ,  29.9326    ])
172     , -201740     , array([ 0.0428236  ,  0.0605414  ,  0.00591106 ,  29.9868    ])
176     , -201822     , array([ 0.0426763  ,  0.0602224  ,  0.00591124 ,  29.9027    ])
180     , -201821     , array([ 0.0426763  ,  0.0602224  ,  0.00591124 ,  29.9326    ])
184     , -201752     , array([ 0.0427745  ,  0.060455   ,  0.00591112 ,  29.9587    ])
188     , -201788     , array([ 0.0428072  ,  0.0604521  ,  0.00591108 ,  29.9774    ])
196     , -201741     , array([ 0.0428202  ,  0.0605353  ,  0.00591106 ,  29.9848    ])
200     , -201784     , array([ 0.0428229  ,  0.0604796  ,  0.00591106 ,  29.9864    ])
208     , -201740     , array([ 0.0428235  ,  0.0605412  ,  0.00591106 ,  29.9867    ])
212     , -201784     , array([ 0.0428236  ,  0.0604809  ,  0.00591106 ,  29.9868    ])
220     , -201740     , array([ 0.0428236  ,  0.0605414  ,  0.00591106 ,  29.9868    ])
224     , -201784     , array([ 0.0428236  ,  0.0604809  ,  0.00591106 ,  29.9868    ])
232     , -201740     , array([ 0.0428236  ,  0.0605414  ,  0.00591106 ,  29.9868    ])
236     , -201784     , array([ 0.0428236  ,  0.0604809  ,  0.00591106 ,  29.9868    ])
244     , -201740     , array([ 0.0428236  ,  0.0605414  ,  0.00591106 ,  29.9868    ])
248     , -201784     , array([ 0.0428236  ,  0.0604809  ,  0.00591106 ,  29.9868    ])
256     , -201740     , array([ 0.0428236  ,  0.0605414  ,  0.00591106 ,  29.9868    ])
260     , -201784     , array([ 0.0428236  ,  0.0604809  ,  0.00591106 ,  29.9868    ])
268     , -201740     , array([ 0.0428236  ,  0.0605414  ,  0.00591106 ,  29.9868    ])
272     , -201784     , array([ 0.0428236  ,  0.0604809  ,  0.00591106 ,  29.9868    ])
280     , -201740     , array([ 0.0428236  ,  0.0605414  ,  0.00591106 ,  29.9868    ])
284     , -201784     , array([ 0.0428236  ,  0.0604809  ,  0.00591106 ,  29.9868    ])
292     , -201740     , array([ 0.0428236  ,  0.0605414  ,  0.00591106 ,  29.9868    ])
296     , -201784     , array([ 0.0428236  ,  0.0604809  ,  0.00591106 ,  29.9868    ])
304     , -203338     , array([ 0.0372099  ,  0.050841   ,  0.00591843 ,  26.7417    ])
308     , -203198     , array([ 0.0378035  ,  0.0517991  ,  0.0059176  ,  27.0889    ])
312     , -203197     , array([ 0.0378035  ,  0.0517991  ,  0.0059176  ,  27.116     ])
316     , -202783     , array([ 0.0390193  ,  0.0539313  ,  0.00591594 ,  27.7969    ])
320     , -202111     , array([ 0.0415695  ,  0.0582875  ,  0.00591262 ,  29.269     ])
324     , -202110     , array([ 0.0415695  ,  0.0582875  ,  0.00591262 ,  29.2983    ])
328     , -201936     , array([ 0.0422326  ,  0.0594453  ,  0.00591179 ,  29.649     ])
332     , -201915     , array([ 0.0422326  ,  0.0594453  ,  0.0059177  ,  29.649     ])
336     , -201894     , array([ 0.0426108  ,  0.0600328  ,  0.00591137 ,  29.8409    ])
348     , -201894     , array([ 0.0426108  ,  0.060033   ,  0.00591137 ,  29.8409    ])
352     , -201849     , array([ 0.0425685  ,  0.0600334  ,  0.00591137 ,  29.841     ])
356     , -201829     , array([ 0.0425685  ,  0.0600334  ,  0.00591729 ,  29.841     ])
364     , -201849     , array([ 0.0425685  ,  0.0600334  ,  0.00591137 ,  29.841     ])
368     , -201829     , array([ 0.0425685  ,  0.0600334  ,  0.00591729 ,  29.841     ])
372     , -201894     , array([ 0.0426111  ,  0.0600335  ,  0.00591137 ,  29.8411    ])
384     , -201894     , array([ 0.0426111  ,  0.0600335  ,  0.00591137 ,  29.8411    ])
388     , -201849     , array([ 0.0425686  ,  0.0600335  ,  0.00591137 ,  29.8411    ])
392     , -201829     , array([ 0.0425686  ,  0.0600335  ,  0.00591729 ,  29.8411    ])
400     , -201849     , array([ 0.0425686  ,  0.0600335  ,  0.00591137 ,  29.8411    ])
404     , -201829     , array([ 0.0425686  ,  0.0600335  ,  0.00591729 ,  29.8411    ])
408     , -201894     , array([ 0.0426111  ,  0.0600335  ,  0.00591137 ,  29.8411    ])
420     , -201894     , array([ 0.0426111  ,  0.0600335  ,  0.00591137 ,  29.8411    ])
424     , -201849     , array([ 0.0425686  ,  0.0600335  ,  0.00591137 ,  29.8411    ])
428     , -201829     , array([ 0.0425686  ,  0.0600335  ,  0.00591729 ,  29.8411    ])
436     , -201849     , array([ 0.0425686  ,  0.0600335  ,  0.00591137 ,  29.8411    ])
440     , -201829     , array([ 0.0425686  ,  0.0600335  ,  0.00591729 ,  29.8411    ])
444     , -201894     , array([ 0.0426111  ,  0.0600335  ,  0.00591137 ,  29.8411    ])
448     , -201794     , array([ 0.0427459  ,  0.0603555  ,  0.00591175 ,  29.9227    ])
452     , -201774     , array([ 0.0427459  ,  0.0603555  ,  0.00591766 ,  29.9227    ])
456     , -201839     , array([ 0.0427887  ,  0.0603555  ,  0.00591175 ,  29.9227    ])
460     , -201794     , array([ 0.0427459  ,  0.0603555  ,  0.00591175 ,  29.9227    ])
464     , -201774     , array([ 0.0427459  ,  0.0603555  ,  0.00591766 ,  29.9227    ])
468     , -201811     , array([ 0.0428778  ,  0.0605171  ,  0.00591193 ,  29.9636    ])
472     , -201749     , array([ 0.0428937  ,  0.060624   ,  0.00591206 ,  29.9906    ])
476     , -201728     , array([ 0.0428937  ,  0.060624   ,  0.00591797 ,  29.9906    ])
480     , -201811     , array([ 0.0428778  ,  0.0605171  ,  0.00591193 ,  29.9636    ])
484     , -201755     , array([ 0.0428741  ,  0.0605883  ,  0.00591202 ,  29.9816    ])
488     , -201734     , array([ 0.0428741  ,  0.0605883  ,  0.00591793 ,  29.9816    ])
492     , -201794     , array([ 0.0429325  ,  0.0606164  ,  0.00591205 ,  29.9887    ])
496     , -201749     , array([ 0.0428929  ,  0.0606224  ,  0.00591206 ,  29.9902    ])
500     , -201728     , array([ 0.0428929  ,  0.0606224  ,  0.00591797 ,  29.9902    ])
504     , -201793     , array([ 0.0429365  ,  0.0606236  ,  0.00591206 ,  29.9905    ])
508     , -201749     , array([ 0.0428937  ,  0.0606239  ,  0.00591206 ,  29.9906    ])
512     , -201728     , array([ 0.0428937  ,  0.0606239  ,  0.00591797 ,  29.9906    ])
516     , -201793     , array([ 0.0429366  ,  0.060624   ,  0.00591206 ,  29.9906    ])
520     , -201749     , array([ 0.0428937  ,  0.060624   ,  0.00591206 ,  29.9906    ])
524     , -201728     , array([ 0.0428937  ,  0.060624   ,  0.00591797 ,  29.9906    ])
528     , -201793     , array([ 0.0429366  ,  0.060624   ,  0.00591206 ,  29.9906    ])
532     , -201749     , array([ 0.0428937  ,  0.060624   ,  0.00591206 ,  29.9906    ])
536     , -201728     , array([ 0.0428937  ,  0.060624   ,  0.00591797 ,  29.9906    ])
540     , -201793     , array([ 0.0429366  ,  0.060624   ,  0.00591206 ,  29.9906    ])
544     , -201749     , array([ 0.0428937  ,  0.060624   ,  0.00591206 ,  29.9906    ])
548     , -201728     , array([ 0.0428937  ,  0.060624   ,  0.00591797 ,  29.9906    ])
552     , -201793     , array([ 0.0429366  ,  0.060624   ,  0.00591206 ,  29.9906    ])
556     , -201749     , array([ 0.0428937  ,  0.060624   ,  0.00591206 ,  29.9906    ])
560     , -201728     , array([ 0.0428937  ,  0.060624   ,  0.00591797 ,  29.9906    ])
564     , -201793     , array([ 0.0429366  ,  0.060624   ,  0.00591206 ,  29.9906    ])
568     , -201749     , array([ 0.0428937  ,  0.060624   ,  0.00591206 ,  29.9906    ])
572     , -201728     , array([ 0.0428937  ,  0.060624   ,  0.00591797 ,  29.9906    ])
576     , -201793     , array([ 0.0429366  ,  0.060624   ,  0.00591206 ,  29.9906    ])
580     , -201749     , array([ 0.0428937  ,  0.060624   ,  0.00591206 ,  29.9906    ])
584     , -201728     , array([ 0.0428937  ,  0.060624   ,  0.00591797 ,  29.9906    ])
588     , -201793     , array([ 0.0429366  ,  0.060624   ,  0.00591206 ,  29.9906    ])
592     , -201749     , array([ 0.0428937  ,  0.060624   ,  0.00591206 ,  29.9906    ])
596     , -201728     , array([ 0.0428937  ,  0.060624   ,  0.00591797 ,  29.9906    ])
600     , -201793     , array([ 0.0429366  ,  0.060624   ,  0.00591206 ,  29.9906    ])
604     , -201749     , array([ 0.0428937  ,  0.060624   ,  0.00591206 ,  29.9906    ])
608     , -201728     , array([ 0.0428937  ,  0.060624   ,  0.00591797 ,  29.9906    ])
612     , -201793     , array([ 0.0429366  ,  0.060624   ,  0.00591206 ,  29.9906    ])
616     , -201749     , array([ 0.0428937  ,  0.060624   ,  0.00591206 ,  29.9906    ])
620     , -201728     , array([ 0.0428937  ,  0.060624   ,  0.00591797 ,  29.9906    ])
624     , -201793     , array([ 0.0429366  ,  0.060624   ,  0.00591206 ,  29.9906    ])
628     , -201749     , array([ 0.0428937  ,  0.060624   ,  0.00591206 ,  29.9906    ])
632     , -201728     , array([ 0.0428937  ,  0.060624   ,  0.00591797 ,  29.9906    ])
636     , -201793     , array([ 0.0429366  ,  0.060624   ,  0.00591206 ,  29.9906    ])
648     , -201839     , array([ 0.0427883  ,  0.0603548  ,  0.00591175 ,  29.9225    ])
652     , -201767     , array([ 0.0428345  ,  0.0605164  ,  0.00591193 ,  29.9634    ])
656     , -201746     , array([ 0.0428345  ,  0.0605164  ,  0.00591785 ,  29.9634    ])
660     , -201798     , array([ 0.042922   ,  0.0605974  ,  0.00591203 ,  29.9838    ])
664     , -201760     , array([ 0.0428555  ,  0.0605545  ,  0.00591198 ,  29.973     ])
Finshed optimization **************************************************
Writing out parameters **************************************************
Writing out SFS **************************************************
Making plots **************************************************
carrying out inference 24 for model 2D.5epoch.fixedN1N3.nomig for pop MN-IR
Beginning optimization ************************************************
4       , -640267     , array([ 0.00941346 ,  0.0768755  ,  0.00680084 ,  10.0437    ])
8       , -215334     , array([ 0.0233352  ,  0.0617272  ,  0.00462568 ,  10.0116    ])
12      , -215332     , array([ 0.0233352  ,  0.0617272  ,  0.00462568 ,  10.0216    ])
16      , -270663     , array([ 0.352829   ,  0.00108873 ,  0.030405   ,  10.8119    ])
20      , -235061     , array([ 0.0543093  ,  0.0175774  ,  0.00830839 ,  10.2539    ])
24      , -235060     , array([ 0.0543093  ,  0.0175774  ,  0.00830839 ,  10.2642    ])
28      , -203422     , array([ 0.0295495  ,  0.0434948  ,  0.00544834 ,  10.0787    ])
32      , -213683     , array([ 0.0498441  ,  0.0726606  ,  0.0115298  ,  10.8615    ])
36      , -213682     , array([ 0.0498441  ,  0.0726606  ,  0.0115298  ,  10.8724    ])
40      , -199807     , array([ 0.0345539  ,  0.0507291  ,  0.00681842 ,  10.3069    ])
52      , -199807     , array([ 0.0345539  ,  0.0507291  ,  0.00681842 ,  10.3076    ])
56      , -199840     , array([ 0.034554   ,  0.0506785  ,  0.00681815 ,  10.331     ])
60      , -199838     , array([ 0.034554   ,  0.0506785  ,  0.00681815 ,  10.3413    ])
68      , -199840     , array([ 0.034554   ,  0.0506785  ,  0.00681815 ,  10.3312    ])
72      , -199838     , array([ 0.034554   ,  0.0506785  ,  0.00681815 ,  10.3415    ])
76      , -199803     , array([ 0.034554   ,  0.0507293  ,  0.00681808 ,  10.3371    ])
88      , -199803     , array([ 0.034554   ,  0.0507293  ,  0.00681808 ,  10.3371    ])
92      , -199839     , array([ 0.034554   ,  0.0506786  ,  0.00681807 ,  10.3385    ])
96      , -199837     , array([ 0.034554   ,  0.0506786  ,  0.00681807 ,  10.3489    ])
100     , -199077     , array([ 0.0345809  ,  0.0507692  ,  0.00674096 ,  20.1163    ])
104     , -197731     , array([ 0.0340818  ,  0.0517389  ,  0.00661634 ,  26.864     ])
108     , -197730     , array([ 0.0340818  ,  0.0517389  ,  0.00661634 ,  26.8909    ])
116     , -197731     , array([ 0.0340817  ,  0.0517389  ,  0.00661634 ,  26.864     ])
120     , -197730     , array([ 0.0340817  ,  0.0517389  ,  0.00661634 ,  26.8909    ])
124     , -197698     , array([ 0.0340817  ,  0.0517909  ,  0.00661633 ,  26.8646    ])
136     , -197698     , array([ 0.0340817  ,  0.0517909  ,  0.00661633 ,  26.8646    ])
140     , -197731     , array([ 0.0340817  ,  0.0517391  ,  0.00661633 ,  26.8648    ])
144     , -197730     , array([ 0.0340817  ,  0.0517391  ,  0.00661633 ,  26.8916    ])
148     , -197021     , array([ 0.0339021  ,  0.0525318  ,  0.00658639 ,  29.3815    ])
160     , -197021     , array([ 0.0339021  ,  0.0525318  ,  0.00658639 ,  29.3815    ])
172     , -197021     , array([ 0.0339021  ,  0.0525318  ,  0.00658639 ,  29.3815    ])
184     , -197021     , array([ 0.0339021  ,  0.0525318  ,  0.00658639 ,  29.3815    ])
188     , -196928     , array([ 0.0338681  ,  0.0526209  ,  0.00658073 ,  29.885     ])
192     , -196928     , array([ 0.0338681  ,  0.0526209  ,  0.00658073 ,  29.9149    ])
200     , -196928     , array([ 0.0338681  ,  0.0526209  ,  0.00658073 ,  29.885     ])
204     , -196928     , array([ 0.0338681  ,  0.0526209  ,  0.00658073 ,  29.9149    ])
208     , -196898     , array([ 0.0338681  ,  0.0526735  ,  0.00658073 ,  29.885     ])
212     , -196907     , array([ 0.0338623  ,  0.052645   ,  0.00657976 ,  29.9715    ])
220     , -196898     , array([ 0.0338681  ,  0.0526735  ,  0.00658073 ,  29.885     ])
224     , -196914     , array([ 0.0338642  ,  0.052637   ,  0.00658008 ,  29.9426    ])
228     , -196914     , array([ 0.0338642  ,  0.052637   ,  0.00658008 ,  29.9726    ])
232     , -196879     , array([ 0.0338629  ,  0.052695   ,  0.00657987 ,  29.9618    ])
236     , -196908     , array([ 0.0338625  ,  0.0526441  ,  0.0065798  ,  29.9682    ])
240     , -196908     , array([ 0.0338625  ,  0.0526441  ,  0.0065798  ,  29.9982    ])
244     , -196877     , array([ 0.0338624  ,  0.0526974  ,  0.00657978 ,  29.9704    ])
248     , -196907     , array([ 0.0338623  ,  0.052645   ,  0.00657977 ,  29.9712    ])
256     , -196877     , array([ 0.0338623  ,  0.0526977  ,  0.00657976 ,  29.9714    ])
260     , -196907     , array([ 0.0338623  ,  0.052645   ,  0.00657976 ,  29.9714    ])
268     , -196877     , array([ 0.0338623  ,  0.0526977  ,  0.00657976 ,  29.9715    ])
272     , -196907     , array([ 0.0338623  ,  0.052645   ,  0.00657976 ,  29.9715    ])
280     , -196877     , array([ 0.0338623  ,  0.0526977  ,  0.00657976 ,  29.9715    ])
284     , -196907     , array([ 0.0338623  ,  0.052645   ,  0.00657976 ,  29.9715    ])
292     , -196877     , array([ 0.0338623  ,  0.0526977  ,  0.00657976 ,  29.9715    ])
296     , -196907     , array([ 0.0338623  ,  0.052645   ,  0.00657976 ,  29.9715    ])
304     , -196877     , array([ 0.0338623  ,  0.0526977  ,  0.00657976 ,  29.9715    ])
308     , -196907     , array([ 0.0338623  ,  0.052645   ,  0.00657976 ,  29.9715    ])
316     , -196877     , array([ 0.0338623  ,  0.0526977  ,  0.00657976 ,  29.9715    ])
320     , -196907     , array([ 0.0338623  ,  0.052645   ,  0.00657976 ,  29.9715    ])
328     , -196877     , array([ 0.0338623  ,  0.0526977  ,  0.00657976 ,  29.9715    ])
332     , -196907     , array([ 0.0338623  ,  0.052645   ,  0.00657976 ,  29.9715    ])
340     , -196877     , array([ 0.0338623  ,  0.0526977  ,  0.00657976 ,  29.9715    ])
344     , -196907     , array([ 0.0338623  ,  0.052645   ,  0.00657976 ,  29.9715    ])
352     , -196877     , array([ 0.0338623  ,  0.0526977  ,  0.00657976 ,  29.9715    ])
360     , -197022     , array([ 0.0339021  ,  0.0525316  ,  0.0065864  ,  29.3809    ])
368     , -196940     , array([ 0.0338797  ,  0.052625   ,  0.00658267 ,  29.7117    ])
372     , -196930     , array([ 0.0338685  ,  0.0526191  ,  0.0065808  ,  29.8784    ])
376     , -196929     , array([ 0.0338685  ,  0.0526191  ,  0.0065808  ,  29.9083    ])
380     , -196879     , array([ 0.0338629  ,  0.0526951  ,  0.00657987 ,  29.9622    ])
384     , -196905     , array([ 0.0338615  ,  0.0526483  ,  0.00657963 ,  29.9831    ])
388     , -196904     , array([ 0.0338615  ,  0.0526483  ,  0.00658622 ,  29.9831    ])
Finshed optimization **************************************************
Writing out parameters **************************************************
Writing out SFS **************************************************
Making plots **************************************************
carrying out inference 25 for model 2D.5epoch.fixedN1N3.nomig for pop MN-IR
Beginning optimization ************************************************
4       , -872169     , array([ 0.00820508 ,  0.099      ,  0.0193348  ,  17.9289    ])
8       , -491778     , array([ 0.0187901  ,  0.098116   ,  0.0108422  ,  17.8492    ])
12      , -491779     , array([ 0.0187901  ,  0.098116   ,  0.0108422  ,  17.867     ])
16      , -646250     , array([ 0.516792   ,  0.0947531  ,  0.00107638 ,  17.5338    ])
28      , -645902     , array([ 0.517694   ,  0.0947504  ,  0.00107709 ,  17.5339    ])
32      , -645551     , array([ 0.518598   ,  0.0946531  ,  0.0010778  ,  17.534     ])
36      , -645547     , array([ 0.518598   ,  0.0946531  ,  0.0010778  ,  17.5516    ])
44      , -645464     , array([ 0.518825   ,  0.0946525  ,  0.00107798 ,  17.5341    ])
48      , -645460     , array([ 0.518825   ,  0.0946525  ,  0.00107798 ,  17.5516    ])
52      , -645380     , array([ 0.519051   ,  0.0947465  ,  0.00107816 ,  17.5341    ])
56      , -536115     , array([ 0.918163   ,  0.0937987  ,  0.00133665 ,  17.5768    ])
60      , -536113     , array([ 0.918163   ,  0.0937987  ,  0.00133665 ,  17.5944    ])
68      , -536033     , array([ 0.918495   ,  0.0934208  ,  0.00133687 ,  17.5217    ])
72      , -536030     , array([ 0.918495   ,  0.0934208  ,  0.00133687 ,  17.5392    ])
76      , -535953     , array([ 0.918828   ,  0.0931372  ,  0.00133709 ,  17.4666    ])
88      , -535932     , array([ 0.918911   ,  0.093043   ,  0.00133715 ,  17.4529    ])
92      , -535908     , array([ 0.918995   ,  0.092856   ,  0.0013372  ,  17.4392    ])
96      , -535905     , array([ 0.918995   ,  0.092856   ,  0.0013372  ,  17.4566    ])
104     , -535903     , array([ 0.919015   ,  0.0928325  ,  0.00133722 ,  17.4357    ])
108     , -535900     , array([ 0.919015   ,  0.0928325  ,  0.00133722 ,  17.4532    ])
112     , -535901     , array([ 0.919036   ,  0.0929019  ,  0.00133723 ,  17.4323    ])
124     , -535900     , array([ 0.919041   ,  0.092896   ,  0.00133723 ,  17.4314    ])
128     , -535895     , array([ 0.919047   ,  0.0927973  ,  0.00133724 ,  17.4306    ])
132     , -535892     , array([ 0.919047   ,  0.0927973  ,  0.00133724 ,  17.448     ])
136     , -522290     , array([ 0.976506   ,  0.047219   ,  0.00137493 ,  10.2957    ])
148     , -522289     , array([ 0.976506   ,  0.0472187  ,  0.00137493 ,  10.2956    ])
152     , -522286     , array([ 0.976507   ,  0.0471712  ,  0.00137494 ,  10.2956    ])
156     , -522282     , array([ 0.976507   ,  0.0471712  ,  0.00137494 ,  10.3059    ])
160     , -518096     , array([ 0.996245   ,  0.0377696  ,  0.00138761 ,  8.65361    ])
164     , -518093     , array([ 0.996246   ,  0.0377318  ,  0.00138761 ,  8.6536     ])
168     , -518088     , array([ 0.996246   ,  0.0377318  ,  0.00138761 ,  8.66226    ])
176     , -518093     , array([ 0.996246   ,  0.0377318  ,  0.00138761 ,  8.65359    ])
180     , -518088     , array([ 0.996246   ,  0.0377318  ,  0.00138761 ,  8.66225    ])
188     , -518093     , array([ 0.996246   ,  0.0377318  ,  0.00138761 ,  8.65359    ])
192     , -518088     , array([ 0.996246   ,  0.0377318  ,  0.00138761 ,  8.66225    ])
200     , -518093     , array([ 0.996246   ,  0.0377318  ,  0.00138761 ,  8.65359    ])
204     , -518088     , array([ 0.996246   ,  0.0377318  ,  0.00138761 ,  8.66225    ])
212     , -518093     , array([ 0.996246   ,  0.0377318  ,  0.00138761 ,  8.65359    ])
216     , -518088     , array([ 0.996246   ,  0.0377318  ,  0.00138761 ,  8.66225    ])
220     , -517555     , array([ 0.998746   ,  0.0367281  ,  0.0013892  ,  8.46734    ])
232     , -517553     , array([ 0.998753   ,  0.0367178  ,  0.0013892  ,  8.4684     ])
236     , -517548     , array([ 0.998761   ,  0.0366708  ,  0.00138921 ,  8.46946    ])
240     , -517543     , array([ 0.998761   ,  0.0366708  ,  0.00138921 ,  8.47793    ])
248     , -517547     , array([ 0.998763   ,  0.0366682  ,  0.00138921 ,  8.46972    ])
252     , -517543     , array([ 0.998763   ,  0.0366682  ,  0.00138921 ,  8.4782     ])
256     , -517550     , array([ 0.998765   ,  0.0367023  ,  0.00138921 ,  8.46999    ])
268     , -517549     , array([ 0.998765   ,  0.0367017  ,  0.00138921 ,  8.47005    ])
272     , -517546     , array([ 0.998766   ,  0.0366643  ,  0.00138921 ,  8.47012    ])
276     , -517542     , array([ 0.998766   ,  0.0366643  ,  0.00138921 ,  8.47859    ])
284     , -517546     , array([ 0.998766   ,  0.0366642  ,  0.00138921 ,  8.47014    ])
288     , -517542     , array([ 0.998766   ,  0.0366642  ,  0.00138921 ,  8.47861    ])
292     , -517549     , array([ 0.998766   ,  0.0367007  ,  0.00138921 ,  8.47015    ])
304     , -517549     , array([ 0.998766   ,  0.0367007  ,  0.00138921 ,  8.47016    ])
308     , -517546     , array([ 0.998766   ,  0.0366639  ,  0.00138921 ,  8.47016    ])
312     , -517542     , array([ 0.998766   ,  0.0366639  ,  0.00138921 ,  8.47864    ])
320     , -517546     , array([ 0.998766   ,  0.0366639  ,  0.00138921 ,  8.47016    ])
324     , -517542     , array([ 0.998766   ,  0.0366639  ,  0.00138921 ,  8.47864    ])
328     , -517549     , array([ 0.998766   ,  0.0367006  ,  0.00138921 ,  8.47016    ])
340     , -517549     , array([ 0.998766   ,  0.0367006  ,  0.00138921 ,  8.47016    ])
344     , -517546     , array([ 0.998766   ,  0.0366639  ,  0.00138921 ,  8.47016    ])
348     , -517542     , array([ 0.998766   ,  0.0366639  ,  0.00138921 ,  8.47864    ])
352     , -517260     , array([ 0.999728   ,  0.0354415  ,  0.00138956 ,  8.60288    ])
356     , -517546     , array([ 0.998766   ,  0.0366639  ,  0.00138921 ,  8.47016    ])
360     , -517542     , array([ 0.998766   ,  0.0366639  ,  0.00138921 ,  8.47864    ])
364     , -517355     , array([ 0.999407   ,  0.0358563  ,  0.00138944 ,  8.55841    ])
368     , -517277     , array([ 0.99966    ,  0.0354933  ,  0.00138953 ,  8.59346    ])
372     , -517273     , array([ 0.99966    ,  0.0354933  ,  0.00138953 ,  8.60206    ])
376     , -517264     , array([ 0.999714   ,  0.03546    ,  0.00138955 ,  8.60089    ])
380     , -517258     , array([ 0.999725   ,  0.03541    ,  0.00138956 ,  8.60246    ])
384     , -517254     , array([ 0.999725   ,  0.03541    ,  0.00138956 ,  8.61107    ])
388     , -517260     , array([ 0.999727   ,  0.0354424  ,  0.00138956 ,  8.60279    ])
392     , -517257     , array([ 0.999728   ,  0.0354063  ,  0.00138956 ,  8.60286    ])
396     , -517253     , array([ 0.999728   ,  0.0354063  ,  0.00138956 ,  8.61147    ])
400     , -517260     , array([ 0.999728   ,  0.0354416  ,  0.00138956 ,  8.60288    ])
404     , -517257     , array([ 0.999728   ,  0.0354061  ,  0.00138956 ,  8.60288    ])
408     , -517253     , array([ 0.999728   ,  0.0354061  ,  0.00138956 ,  8.61149    ])
412     , -517260     , array([ 0.999728   ,  0.0354415  ,  0.00138956 ,  8.60288    ])
416     , -517257     , array([ 0.999728   ,  0.0354061  ,  0.00138956 ,  8.60288    ])
420     , -517253     , array([ 0.999728   ,  0.0354061  ,  0.00138956 ,  8.61149    ])
424     , -517260     , array([ 0.999728   ,  0.0354415  ,  0.00138956 ,  8.60288    ])
428     , -517257     , array([ 0.999728   ,  0.0354061  ,  0.00138956 ,  8.60288    ])
432     , -517253     , array([ 0.999728   ,  0.0354061  ,  0.00138956 ,  8.61149    ])
436     , -517260     , array([ 0.999728   ,  0.0354415  ,  0.00138956 ,  8.60288    ])
440     , -517257     , array([ 0.999728   ,  0.0354061  ,  0.00138956 ,  8.60288    ])
444     , -517253     , array([ 0.999728   ,  0.0354061  ,  0.00138956 ,  8.61149    ])
448     , -517260     , array([ 0.999728   ,  0.0354415  ,  0.00138956 ,  8.60288    ])
452     , -517257     , array([ 0.999728   ,  0.0354061  ,  0.00138956 ,  8.60288    ])
456     , -517253     , array([ 0.999728   ,  0.0354061  ,  0.00138956 ,  8.61149    ])
460     , -517260     , array([ 0.999728   ,  0.0354415  ,  0.00138956 ,  8.60288    ])
464     , -517257     , array([ 0.999728   ,  0.0354061  ,  0.00138956 ,  8.60288    ])
468     , -517253     , array([ 0.999728   ,  0.0354061  ,  0.00138956 ,  8.61149    ])
472     , -517260     , array([ 0.999728   ,  0.0354415  ,  0.00138956 ,  8.60288    ])
476     , -517257     , array([ 0.999728   ,  0.0354061  ,  0.00138956 ,  8.60288    ])
480     , -517253     , array([ 0.999728   ,  0.0354061  ,  0.00138956 ,  8.61149    ])
484     , -517260     , array([ 0.999728   ,  0.0354415  ,  0.00138956 ,  8.60288    ])
488     , -517257     , array([ 0.999728   ,  0.0354061  ,  0.00138956 ,  8.60288    ])
492     , -517253     , array([ 0.999728   ,  0.0354061  ,  0.00138956 ,  8.61149    ])
496     , -517260     , array([ 0.999728   ,  0.0354415  ,  0.00138956 ,  8.60288    ])
500     , -517257     , array([ 0.999728   ,  0.0354061  ,  0.00138956 ,  8.60288    ])
504     , -517253     , array([ 0.999728   ,  0.0354061  ,  0.00138956 ,  8.61149    ])
508     , -517260     , array([ 0.999728   ,  0.0354415  ,  0.00138956 ,  8.60288    ])
512     , -517257     , array([ 0.999728   ,  0.0354061  ,  0.00138956 ,  8.60288    ])
516     , -517253     , array([ 0.999728   ,  0.0354061  ,  0.00138956 ,  8.61149    ])
524     , -517263     , array([ 0.999708   ,  0.0354323  ,  0.00138955 ,  8.60005    ])
528     , -516834     , array([ 0.999708   ,  0.0354323  ,  0.00139094 ,  8.60005    ])
532     , -517291     , array([ 0.999612   ,  0.0355553  ,  0.00138952 ,  8.58679    ])
Finshed optimization **************************************************
Writing out parameters **************************************************
Writing out SFS **************************************************
Making plots **************************************************
carrying out inference 26 for model 2D.5epoch.fixedN1N3.nomig for pop MN-IR
Beginning optimization ************************************************
4       , -873265     , array([ 0.00755931 ,  0.099      ,  0.0173932  ,  15.1643    ])
8       , -515842     , array([ 0.0170708  ,  0.0986299  ,  0.00956393 ,  15.0895    ])
12      , -515843     , array([ 0.0170708  ,  0.0986299  ,  0.00956393 ,  15.1046    ])
16      , -757591     , array([ 0.443959   ,  0.0972607  ,  0.000877816,  14.794     ])
20      , -213945     , array([ 0.055786   ,  0.0980945  ,  0.004015   ,  14.9814    ])
24      , -213943     , array([ 0.055786   ,  0.0980945  ,  0.004015   ,  14.9964    ])
40      , -213905     , array([ 0.055786   ,  0.0981926  ,  0.004015   ,  14.9814    ])
44      , -213945     , array([ 0.0557861  ,  0.0980946  ,  0.00401501 ,  14.9814    ])
48      , -213942     , array([ 0.0557861  ,  0.0980946  ,  0.00401501 ,  14.9964    ])
56      , -213945     , array([ 0.0557861  ,  0.0980946  ,  0.00401501 ,  14.9814    ])
60      , -213942     , array([ 0.0557861  ,  0.0980946  ,  0.00401501 ,  14.9964    ])
64      , -213904     , array([ 0.0557861  ,  0.0981928  ,  0.00401501 ,  14.9814    ])
68      , -213211     , array([ 0.0562731  ,  0.0991394  ,  0.00404733 ,  14.9877    ])
72      , -213209     , array([ 0.0562731  ,  0.0991394  ,  0.00404733 ,  15.0027    ])
76      , -212690     , array([ 0.0565969  ,  0.099935   ,  0.00406881 ,  14.9919    ])
80      , -212729     , array([ 0.0565969  ,  0.0998351  ,  0.00406881 ,  14.9919    ])
84      , -212727     , array([ 0.0565969  ,  0.0998351  ,  0.00406881 ,  15.0069    ])
88      , -212690     , array([ 0.0565969  ,  0.099935   ,  0.00406881 ,  14.9919    ])
100     , -212690     , array([ 0.0565969  ,  0.099935   ,  0.00406881 ,  14.9919    ])
104     , -212646     , array([ 0.0566521  ,  0.0999538  ,  0.00407248 ,  14.9926    ])
108     , -212644     , array([ 0.0566521  ,  0.0999538  ,  0.00407248 ,  15.0076    ])
112     , -212690     , array([ 0.0565969  ,  0.099935   ,  0.00406881 ,  14.9919    ])
116     , -212674     , array([ 0.0566337  ,  0.0999142  ,  0.00407125 ,  14.9924    ])
120     , -212672     , array([ 0.0566337  ,  0.0999142  ,  0.00407125 ,  15.0074    ])
128     , -212647     , array([ 0.0566513  ,  0.0999521  ,  0.00407242 ,  14.9926    ])
132     , -212645     , array([ 0.0566513  ,  0.0999521  ,  0.00407242 ,  15.0076    ])
140     , -212646     , array([ 0.0566521  ,  0.0999537  ,  0.00407247 ,  14.9926    ])
144     , -212644     , array([ 0.0566521  ,  0.0999537  ,  0.00407247 ,  15.0076    ])
152     , -212646     , array([ 0.0566521  ,  0.0999538  ,  0.00407247 ,  14.9926    ])
156     , -212644     , array([ 0.0566521  ,  0.0999538  ,  0.00407247 ,  15.0076    ])
164     , -212646     , array([ 0.0566521  ,  0.0999538  ,  0.00407248 ,  14.9926    ])
168     , -212644     , array([ 0.0566521  ,  0.0999538  ,  0.00407248 ,  15.0076    ])
176     , -212646     , array([ 0.0566521  ,  0.0999538  ,  0.00407248 ,  14.9926    ])
180     , -212644     , array([ 0.0566521  ,  0.0999538  ,  0.00407248 ,  15.0076    ])
188     , -212646     , array([ 0.0566521  ,  0.0999538  ,  0.00407248 ,  14.9926    ])
192     , -212644     , array([ 0.0566521  ,  0.0999538  ,  0.00407248 ,  15.0076    ])
200     , -212646     , array([ 0.0566521  ,  0.0999538  ,  0.00407248 ,  14.9926    ])
204     , -212644     , array([ 0.0566521  ,  0.0999538  ,  0.00407248 ,  15.0076    ])
212     , -212646     , array([ 0.0566521  ,  0.0999538  ,  0.00407248 ,  14.9926    ])
216     , -212644     , array([ 0.0566521  ,  0.0999538  ,  0.00407248 ,  15.0076    ])
224     , -212646     , array([ 0.0566521  ,  0.0999538  ,  0.00407248 ,  14.9926    ])
228     , -212644     , array([ 0.0566521  ,  0.0999538  ,  0.00407248 ,  15.0076    ])
236     , -212646     , array([ 0.0566521  ,  0.0999538  ,  0.00407248 ,  14.9926    ])
240     , -212644     , array([ 0.0566521  ,  0.0999538  ,  0.00407248 ,  15.0076    ])
248     , -212646     , array([ 0.0566521  ,  0.0999538  ,  0.00407248 ,  14.9926    ])
252     , -212644     , array([ 0.0566521  ,  0.0999538  ,  0.00407248 ,  15.0076    ])
260     , -212646     , array([ 0.0566521  ,  0.0999538  ,  0.00407248 ,  14.9926    ])
264     , -212644     , array([ 0.0566521  ,  0.0999538  ,  0.00407248 ,  15.0076    ])
Finshed optimization **************************************************
Writing out parameters **************************************************
Writing out SFS **************************************************
Making plots **************************************************
carrying out inference 27 for model 2D.5epoch.fixedN1N3.nomig for pop MN-IR
Beginning optimization ************************************************
4       , -861163     , array([ 0.00579751 ,  0.099      ,  0.0117467  ,  7.40771    ])
8       , -567680     , array([ 0.0121421  ,  0.0989891  ,  0.00589684 ,  7.35481    ])
12      , -567681     , array([ 0.0121421  ,  0.0989891  ,  0.00589684 ,  7.36217    ])
16      , -265041     , array([ 0.0854276  ,  0.0610734  ,  0.00393358 ,  7.34563    ])
28      , -264418     , array([ 0.0859058  ,  0.0617217  ,  0.00394682 ,  7.34863    ])
32      , -263836     , array([ 0.0863857  ,  0.0623133  ,  0.00396009 ,  7.35163    ])
36      , -263833     , array([ 0.0863857  ,  0.0623133  ,  0.00396009 ,  7.35899    ])
44      , -263681     , array([ 0.086506   ,  0.0624777  ,  0.00396342 ,  7.35238    ])
48      , -263678     , array([ 0.086506   ,  0.0624777  ,  0.00396342 ,  7.35974    ])
52      , -263487     , array([ 0.0866265  ,  0.062705   ,  0.00396674 ,  7.35313    ])
64      , -263448     , array([ 0.0866566  ,  0.0627462  ,  0.00396757 ,  7.35332    ])
68      , -263448     , array([ 0.0866867  ,  0.0627248  ,  0.0039684  ,  7.3535     ])
72      , -263445     , array([ 0.0866867  ,  0.0627248  ,  0.0039684  ,  7.36086    ])
80      , -263438     , array([ 0.0866942  ,  0.0627351  ,  0.00396861 ,  7.35355    ])
84      , -263435     , array([ 0.0866942  ,  0.0627351  ,  0.00396861 ,  7.36091    ])
88      , -263390     , array([ 0.0867018  ,  0.0628082  ,  0.00396882 ,  7.3536     ])
100     , -263387     , array([ 0.0867037  ,  0.0628107  ,  0.00396887 ,  7.35361    ])
104     , -263424     , array([ 0.0867055  ,  0.0627505  ,  0.00396892 ,  7.35362    ])
108     , -263421     , array([ 0.0867055  ,  0.0627505  ,  0.00396892 ,  7.36098    ])
112     , -245011     , array([ 0.102836   ,  0.0867423  ,  0.00439857 ,  7.44604    ])
124     , -245009     , array([ 0.102836   ,  0.0867417  ,  0.00439841 ,  7.46273    ])
128     , -244998     , array([ 0.102833   ,  0.0866427  ,  0.00439522 ,  7.81607    ])
132     , -244995     , array([ 0.102833   ,  0.0866427  ,  0.00439522 ,  7.82389    ])
140     , -244997     , array([ 0.102833   ,  0.0866426  ,  0.00439519 ,  7.82017    ])
144     , -244994     , array([ 0.102833   ,  0.0866426  ,  0.00439519 ,  7.828      ])
148     , -244941     , array([ 0.102833   ,  0.0867263  ,  0.00439441 ,  7.90905    ])
160     , -244940     , array([ 0.102833   ,  0.0867262  ,  0.0043944  ,  7.91007    ])
164     , -244981     , array([ 0.102833   ,  0.0866388  ,  0.00439421 ,  7.93226    ])
168     , -244978     , array([ 0.102833   ,  0.0866388  ,  0.00439421 ,  7.9402     ])
176     , -244981     , array([ 0.102833   ,  0.0866388  ,  0.0043942  ,  7.93252    ])
180     , -244978     , array([ 0.102833   ,  0.0866388  ,  0.0043942  ,  7.94045    ])
184     , -244936     , array([ 0.102833   ,  0.0867253  ,  0.00439416 ,  7.93806    ])
196     , -244936     , array([ 0.102833   ,  0.0867253  ,  0.00439416 ,  7.93812    ])
200     , -244980     , array([ 0.102833   ,  0.0866386  ,  0.00439414 ,  7.93953    ])
204     , -244977     , array([ 0.102833   ,  0.0866386  ,  0.00439414 ,  7.94747    ])
208     , -244601     , array([ 0.10278    ,  0.0864513  ,  0.00432354 ,  22.3049    ])
212     , -243817     , array([ 0.103422   ,  0.0877898  ,  0.00433881 ,  22.521     ])
216     , -243816     , array([ 0.103422   ,  0.0877898  ,  0.00433881 ,  22.5435    ])
220     , -240480     , array([ 0.106033   ,  0.0938222  ,  0.00440042 ,  23.4066    ])
232     , -240479     , array([ 0.106033   ,  0.0938228  ,  0.00440043 ,  23.4067    ])
236     , -240524     , array([ 0.106033   ,  0.0937295  ,  0.00440043 ,  23.4067    ])
240     , -240523     , array([ 0.106033   ,  0.0937295  ,  0.00440043 ,  23.4302    ])
248     , -240524     , array([ 0.106033   ,  0.0937297  ,  0.00440044 ,  23.4068    ])
252     , -240523     , array([ 0.106033   ,  0.0937297  ,  0.00440044 ,  23.4302    ])
256     , -240479     , array([ 0.106033   ,  0.0938236  ,  0.00440044 ,  23.4068    ])
268     , -240479     , array([ 0.106033   ,  0.0938236  ,  0.00440044 ,  23.4068    ])
272     , -240524     , array([ 0.106033   ,  0.0937299  ,  0.00440044 ,  23.4068    ])
276     , -240523     , array([ 0.106033   ,  0.0937299  ,  0.00440044 ,  23.4302    ])
280     , -238845     , array([ 0.107363   ,  0.0969449  ,  0.00443157 ,  23.8625    ])
284     , -238891     , array([ 0.107363   ,  0.096848   ,  0.00443157 ,  23.8625    ])
288     , -238890     , array([ 0.107363   ,  0.096848   ,  0.00443157 ,  23.8864    ])
292     , -238845     , array([ 0.107363   ,  0.0969449  ,  0.00443157 ,  23.8625    ])
296     , -238056     , array([ 0.108034   ,  0.0984458  ,  0.00444722 ,  24.0937    ])
300     , -238055     , array([ 0.108034   ,  0.0984458  ,  0.00444722 ,  24.1178    ])
304     , -237479     , array([ 0.10848    ,  0.0996143  ,  0.00445758 ,  24.2475    ])
308     , -237345     , array([ 0.108631   ,  0.0998808  ,  0.0044611  ,  24.3       ])
312     , -237344     , array([ 0.108631   ,  0.0998808  ,  0.0044611  ,  24.3243    ])
320     , -237345     , array([ 0.108631   ,  0.0998808  ,  0.0044611  ,  24.3       ])
324     , -237344     , array([ 0.108631   ,  0.0998808  ,  0.0044611  ,  24.3243    ])
328     , -237299     , array([ 0.108631   ,  0.0999807  ,  0.0044611  ,  24.3       ])
332     , -237314     , array([ 0.108657   ,  0.0999431  ,  0.0044617  ,  24.309     ])
336     , -237313     , array([ 0.108657   ,  0.0999431  ,  0.0044617  ,  24.3333    ])
340     , -237299     , array([ 0.108631   ,  0.0999807  ,  0.0044611  ,  24.3       ])
344     , -237324     , array([ 0.108649   ,  0.0999223  ,  0.0044615  ,  24.306     ])
348     , -237323     , array([ 0.108649   ,  0.0999223  ,  0.0044615  ,  24.3303    ])
356     , -237315     , array([ 0.108657   ,  0.0999422  ,  0.00446169 ,  24.3088    ])
360     , -237314     , array([ 0.108657   ,  0.0999422  ,  0.00446169 ,  24.3331    ])
368     , -237314     , array([ 0.108657   ,  0.0999431  ,  0.0044617  ,  24.3089    ])
372     , -237313     , array([ 0.108657   ,  0.0999431  ,  0.0044617  ,  24.3333    ])
380     , -237314     , array([ 0.108657   ,  0.0999431  ,  0.0044617  ,  24.309     ])
384     , -237313     , array([ 0.108657   ,  0.0999431  ,  0.0044617  ,  24.3333    ])
392     , -237314     , array([ 0.108657   ,  0.0999431  ,  0.0044617  ,  24.309     ])
396     , -237313     , array([ 0.108657   ,  0.0999431  ,  0.0044617  ,  24.3333    ])
404     , -237314     , array([ 0.108657   ,  0.0999431  ,  0.0044617  ,  24.309     ])
408     , -237313     , array([ 0.108657   ,  0.0999431  ,  0.0044617  ,  24.3333    ])
416     , -237314     , array([ 0.108657   ,  0.0999431  ,  0.0044617  ,  24.309     ])
420     , -237313     , array([ 0.108657   ,  0.0999431  ,  0.0044617  ,  24.3333    ])
428     , -237314     , array([ 0.108657   ,  0.0999431  ,  0.0044617  ,  24.309     ])
432     , -237313     , array([ 0.108657   ,  0.0999431  ,  0.0044617  ,  24.3333    ])
440     , -237314     , array([ 0.108657   ,  0.0999431  ,  0.0044617  ,  24.309     ])
444     , -237313     , array([ 0.108657   ,  0.0999431  ,  0.0044617  ,  24.3333    ])
452     , -237314     , array([ 0.108657   ,  0.0999431  ,  0.0044617  ,  24.309     ])
456     , -237313     , array([ 0.108657   ,  0.0999431  ,  0.0044617  ,  24.3333    ])
464     , -243817     , array([ 0.103422   ,  0.0877898  ,  0.00433881 ,  22.521     ])
468     , -243816     , array([ 0.103422   ,  0.0877898  ,  0.00433881 ,  22.5435    ])
472     , -242929     , array([ 0.104069   ,  0.0893275  ,  0.00435413 ,  22.7392    ])
476     , -241341     , array([ 0.105374   ,  0.0922071  ,  0.00438494 ,  23.182     ])
480     , -241340     , array([ 0.105374   ,  0.0922071  ,  0.00438494 ,  23.2052    ])
484     , -238011     , array([ 0.108034   ,  0.0985431  ,  0.00444721 ,  24.0935    ])
492     , -237655     , array([ 0.108371   ,  0.0992534  ,  0.00445505 ,  24.21      ])
496     , -237653     , array([ 0.108371   ,  0.0992534  ,  0.00445505 ,  24.2342    ])
500     , -237408     , array([ 0.10854    ,  0.09976    ,  0.00445898 ,  24.2684    ])
504     , -237353     , array([ 0.108625   ,  0.0998644  ,  0.00446095 ,  24.2977    ])
508     , -237352     , array([ 0.108625   ,  0.0998644  ,  0.00446095 ,  24.322     ])
516     , -237314     , array([ 0.108657   ,  0.0999433  ,  0.00446171 ,  24.309     ])
Finshed optimization **************************************************
Writing out parameters **************************************************
Writing out SFS **************************************************
Making plots **************************************************
carrying out inference 28 for model 2D.5epoch.fixedN1N3.nomig for pop MN-IR
Beginning optimization ************************************************
4       , -869447     , array([ 0.00766464 ,  0.099      ,  0.017367   ,  16.7927    ])
8       , -509793     , array([ 0.0173092  ,  0.0985697  ,  0.00954993 ,  16.7166    ])
12      , -509794     , array([ 0.0173092  ,  0.0985697  ,  0.00954993 ,  16.7333    ])
16      , -757598     , array([ 0.450212   ,  0.0969639  ,  0.000876676,  16.4154    ])
20      , -215770     , array([ 0.0571788  ,  0.0979418  ,  0.0039779  ,  16.6055    ])
24      , -215768     , array([ 0.0571788  ,  0.0979418  ,  0.0039779  ,  16.6221    ])
40      , -215726     , array([ 0.0571788  ,  0.0980399  ,  0.0039779  ,  16.6055    ])
44      , -215770     , array([ 0.0571789  ,  0.0979421  ,  0.00397791 ,  16.6055    ])
48      , -215768     , array([ 0.0571789  ,  0.0979421  ,  0.00397791 ,  16.6221    ])
56      , -215770     , array([ 0.0571789  ,  0.0979421  ,  0.00397791 ,  16.6055    ])
60      , -215768     , array([ 0.0571789  ,  0.0979421  ,  0.00397791 ,  16.6221    ])
64      , -214752     , array([ 0.0577995  ,  0.099375   ,  0.00401663 ,  16.6131    ])
68      , -214488     , array([ 0.0580078  ,  0.0997243  ,  0.00402961 ,  16.6157    ])
72      , -214486     , array([ 0.0580078  ,  0.0997243  ,  0.00402961 ,  16.6323    ])
76      , -214343     , array([ 0.0580774  ,  0.0999741  ,  0.00403395 ,  16.6165    ])
80      , -214351     , array([ 0.0581006  ,  0.0999243  ,  0.0040354  ,  16.6168    ])
84      , -214349     , array([ 0.0581006  ,  0.0999243  ,  0.0040354  ,  16.6334    ])
92      , -214335     , array([ 0.0581117  ,  0.0999482  ,  0.00403609 ,  16.6169    ])
96      , -214333     , array([ 0.0581117  ,  0.0999482  ,  0.00403609 ,  16.6335    ])
104     , -214334     , array([ 0.0581122  ,  0.0999492  ,  0.00403612 ,  16.6169    ])
108     , -214332     , array([ 0.0581122  ,  0.0999492  ,  0.00403612 ,  16.6335    ])
116     , -214334     , array([ 0.0581123  ,  0.0999493  ,  0.00403612 ,  16.6169    ])
120     , -214332     , array([ 0.0581123  ,  0.0999493  ,  0.00403612 ,  16.6335    ])
128     , -214334     , array([ 0.0581123  ,  0.0999493  ,  0.00403612 ,  16.6169    ])
132     , -214332     , array([ 0.0581123  ,  0.0999493  ,  0.00403612 ,  16.6335    ])
140     , -214334     , array([ 0.0581123  ,  0.0999493  ,  0.00403612 ,  16.6169    ])
144     , -214332     , array([ 0.0581123  ,  0.0999493  ,  0.00403612 ,  16.6335    ])
152     , -214334     , array([ 0.0581123  ,  0.0999493  ,  0.00403612 ,  16.6169    ])
156     , -214332     , array([ 0.0581123  ,  0.0999493  ,  0.00403612 ,  16.6335    ])
164     , -214334     , array([ 0.0581123  ,  0.0999493  ,  0.00403612 ,  16.6169    ])
168     , -214332     , array([ 0.0581123  ,  0.0999493  ,  0.00403612 ,  16.6335    ])
176     , -214334     , array([ 0.0581123  ,  0.0999493  ,  0.00403612 ,  16.6169    ])
180     , -214332     , array([ 0.0581123  ,  0.0999493  ,  0.00403612 ,  16.6335    ])
188     , -214334     , array([ 0.0581123  ,  0.0999493  ,  0.00403612 ,  16.6169    ])
192     , -214332     , array([ 0.0581123  ,  0.0999493  ,  0.00403612 ,  16.6335    ])
200     , -214334     , array([ 0.0581123  ,  0.0999493  ,  0.00403612 ,  16.6169    ])
204     , -214332     , array([ 0.0581123  ,  0.0999493  ,  0.00403612 ,  16.6335    ])
216     , -214484     , array([ 0.0580104  ,  0.0997298  ,  0.00402978 ,  16.6157    ])
220     , -214482     , array([ 0.0580104  ,  0.0997298  ,  0.00402978 ,  16.6323    ])
Finshed optimization **************************************************
Writing out parameters **************************************************
Writing out SFS **************************************************
Making plots **************************************************
carrying out inference 29 for model 2D.5epoch.fixedN1N3.nomig for pop MN-IR
Beginning optimization ************************************************
4       , -392615     , array([ 0.0166402  ,  0.066684   ,  0.0100474  ,  10.2484    ])
8       , -216619     , array([ 0.0353762  ,  0.0350393  ,  0.00827732 ,  10.2346    ])
12      , -216618     , array([ 0.0353762  ,  0.0350393  ,  0.00827732 ,  10.2448    ])
20      , -216407     , array([ 0.0354147  ,  0.0351903  ,  0.00818073 ,  10.2425    ])
24      , -216406     , array([ 0.0354147  ,  0.0351903  ,  0.00818073 ,  10.2527    ])
28      , -216155     , array([ 0.0354535  ,  0.0353782  ,  0.00808476 ,  10.2504    ])
40      , -216104     , array([ 0.035463   ,  0.0354156  ,  0.00806144 ,  10.2524    ])
44      , -220507     , array([ 0.0369896  ,  0.0417934  ,  0.00511641 ,  10.5641    ])
48      , -220505     , array([ 0.0369896  ,  0.0417934  ,  0.00511641 ,  10.5746    ])
52      , -214790     , array([ 0.0359899  ,  0.0375415  ,  0.00687575 ,  10.3604    ])
56      , -211215     , array([ 0.0536137  ,  0.0595888  ,  0.00677274 ,  11.8326    ])
60      , -211213     , array([ 0.0536137  ,  0.0595888  ,  0.00677274 ,  11.8444    ])
68      , -211214     , array([ 0.0536157  ,  0.0595914  ,  0.00677273 ,  11.8327    ])
72      , -211213     , array([ 0.0536157  ,  0.0595914  ,  0.00677273 ,  11.8445    ])
76      , -211169     , array([ 0.0536178  ,  0.0596537  ,  0.00677272 ,  11.8329    ])
88      , -211169     , array([ 0.0536183  ,  0.0596544  ,  0.00677272 ,  11.8329    ])
92      , -211214     , array([ 0.0536188  ,  0.0595954  ,  0.00677272 ,  11.8329    ])
96      , -211212     , array([ 0.0536188  ,  0.0595954  ,  0.00677272 ,  11.8448    ])
100     , -207794     , array([ 0.0798729  ,  0.0947807  ,  0.00667126 ,  13.5142    ])
112     , -207794     , array([ 0.07988    ,  0.0947906  ,  0.00667127 ,  13.5094    ])
116     , -207834     , array([ 0.0799002  ,  0.0947238  ,  0.0066713  ,  13.4958    ])
120     , -207833     , array([ 0.0799002  ,  0.0947238  ,  0.0066713  ,  13.5093    ])
128     , -207834     , array([ 0.079902   ,  0.0947262  ,  0.0066713  ,  13.4946    ])
132     , -207833     , array([ 0.079902   ,  0.0947262  ,  0.0066713  ,  13.5081    ])
136     , -207792     , array([ 0.079907   ,  0.094828   ,  0.0066713  ,  13.4912    ])
148     , -207792     , array([ 0.0799075  ,  0.0948286  ,  0.00667131 ,  13.4909    ])
152     , -207834     , array([ 0.0799087  ,  0.0947356  ,  0.00667131 ,  13.4901    ])
156     , -207833     , array([ 0.0799087  ,  0.0947356  ,  0.00667131 ,  13.5036    ])
164     , -207834     , array([ 0.0799088  ,  0.0947357  ,  0.00667131 ,  13.49      ])
168     , -207833     , array([ 0.0799088  ,  0.0947357  ,  0.00667131 ,  13.5035    ])
172     , -207792     , array([ 0.0799092  ,  0.0948309  ,  0.00667131 ,  13.4898    ])
184     , -207792     , array([ 0.0799092  ,  0.094831   ,  0.00667131 ,  13.4898    ])
188     , -207834     , array([ 0.0799093  ,  0.0947363  ,  0.00667131 ,  13.4897    ])
192     , -207833     , array([ 0.0799093  ,  0.0947363  ,  0.00667131 ,  13.5032    ])
200     , -207834     , array([ 0.0799093  ,  0.0947363  ,  0.00667131 ,  13.4897    ])
204     , -207833     , array([ 0.0799093  ,  0.0947363  ,  0.00667131 ,  13.5032    ])
208     , -207792     , array([ 0.0799093  ,  0.0948311  ,  0.00667131 ,  13.4897    ])
220     , -207792     , array([ 0.0799093  ,  0.0948311  ,  0.00667131 ,  13.4897    ])
224     , -207834     , array([ 0.0799093  ,  0.0947363  ,  0.00667131 ,  13.4897    ])
228     , -207833     , array([ 0.0799093  ,  0.0947363  ,  0.00667131 ,  13.5032    ])
232     , -207688     , array([ 0.0823013  ,  0.0981527  ,  0.00667437 ,  11.9949    ])
244     , -207688     , array([ 0.0823013  ,  0.0981527  ,  0.00667437 ,  11.9949    ])
248     , -207729     , array([ 0.0823013  ,  0.0980546  ,  0.00667437 ,  11.9949    ])
252     , -207728     , array([ 0.0823013  ,  0.0980546  ,  0.00667437 ,  12.0069    ])
256     , -207581     , array([ 0.0834495  ,  0.0997649  ,  0.00666803 ,  12.0046    ])
268     , -207581     , array([ 0.0834495  ,  0.0997649  ,  0.00666803 ,  12.0046    ])
272     , -207622     , array([ 0.0834495  ,  0.0996651  ,  0.00666803 ,  12.0046    ])
276     , -207621     , array([ 0.0834495  ,  0.0996651  ,  0.00666803 ,  12.0166    ])
284     , -207622     , array([ 0.0834495  ,  0.0996651  ,  0.00666803 ,  12.0046    ])
288     , -207621     , array([ 0.0834495  ,  0.0996651  ,  0.00666803 ,  12.0166    ])
292     , -207581     , array([ 0.0834495  ,  0.0997649  ,  0.00666803 ,  12.0046    ])
296     , -207605     , array([ 0.0836404  ,  0.0999334  ,  0.00666699 ,  12.0062    ])
300     , -207603     , array([ 0.0836404  ,  0.0999334  ,  0.00666699 ,  12.0182    ])
304     , -207581     , array([ 0.0834495  ,  0.0997649  ,  0.00666803 ,  12.0046    ])
308     , -207610     , array([ 0.0835767  ,  0.0998439  ,  0.00666734 ,  12.0056    ])
312     , -207609     , array([ 0.0835767  ,  0.0998439  ,  0.00666734 ,  12.0176    ])
320     , -207605     , array([ 0.083636   ,  0.0999271  ,  0.00666701 ,  12.0061    ])
324     , -207604     , array([ 0.083636   ,  0.0999271  ,  0.00666701 ,  12.0181    ])
332     , -207605     , array([ 0.0836402  ,  0.0999331  ,  0.00666699 ,  12.0062    ])
336     , -207603     , array([ 0.0836402  ,  0.0999331  ,  0.00666699 ,  12.0182    ])
344     , -207605     , array([ 0.0836404  ,  0.0999334  ,  0.00666699 ,  12.0062    ])
348     , -207603     , array([ 0.0836404  ,  0.0999334  ,  0.00666699 ,  12.0182    ])
356     , -207605     , array([ 0.0836404  ,  0.0999334  ,  0.00666699 ,  12.0062    ])
360     , -207603     , array([ 0.0836404  ,  0.0999334  ,  0.00666699 ,  12.0182    ])
368     , -207605     , array([ 0.0836404  ,  0.0999334  ,  0.00666699 ,  12.0062    ])
372     , -207603     , array([ 0.0836404  ,  0.0999334  ,  0.00666699 ,  12.0182    ])
380     , -207605     , array([ 0.0836404  ,  0.0999334  ,  0.00666699 ,  12.0062    ])
384     , -207603     , array([ 0.0836404  ,  0.0999334  ,  0.00666699 ,  12.0182    ])
392     , -207605     , array([ 0.0836404  ,  0.0999334  ,  0.00666699 ,  12.0062    ])
396     , -207603     , array([ 0.0836404  ,  0.0999334  ,  0.00666699 ,  12.0182    ])
404     , -207605     , array([ 0.0836404  ,  0.0999334  ,  0.00666699 ,  12.0062    ])
408     , -207603     , array([ 0.0836404  ,  0.0999334  ,  0.00666699 ,  12.0182    ])
416     , -207605     , array([ 0.0836404  ,  0.0999334  ,  0.00666699 ,  12.0062    ])
420     , -207603     , array([ 0.0836404  ,  0.0999334  ,  0.00666699 ,  12.0182    ])
428     , -207605     , array([ 0.0836404  ,  0.0999334  ,  0.00666699 ,  12.0062    ])
432     , -207603     , array([ 0.0836404  ,  0.0999334  ,  0.00666699 ,  12.0182    ])
440     , -207622     , array([ 0.0834495  ,  0.0996651  ,  0.00666803 ,  12.0046    ])
444     , -207611     , array([ 0.0834495  ,  0.0996651  ,  0.0066747  ,  12.0046    ])
448     , -207609     , array([ 0.0835941  ,  0.0998683  ,  0.00666724 ,  12.0058    ])
452     , -207598     , array([ 0.0835941  ,  0.0998683  ,  0.00667391 ,  12.0058    ])
456     , -207642     , array([ 0.0837502  ,  0.0999701  ,  0.00666685 ,  12.0064    ])
460     , -207606     , array([ 0.0836267  ,  0.0999142  ,  0.00666706 ,  12.006     ])
464     , -207602     , array([ 0.0836652  ,  0.0999681  ,  0.00666685 ,  12.0064    ])
Finshed optimization **************************************************
Writing out parameters **************************************************
Writing out SFS **************************************************
Making plots **************************************************
carrying out inference 30 for model 2D.5epoch.fixedN1N3.nomig for pop MN-IR
Beginning optimization ************************************************
4       , -871937     , array([ 0.00548538 ,  0.099      ,  0.0115851  ,  6.11124    ])
8       , -571881     , array([ 0.012213   ,  0.098995   ,  0.00625131 ,  6.0595     ])
12      , -571882     , array([ 0.012213   ,  0.098995   ,  0.00625131 ,  6.06556    ])
16      , -288083     , array([ 0.079843   ,  0.065171   ,  0.00324397 ,  6.03043    ])
28      , -287536     , array([ 0.0801849  ,  0.0655583  ,  0.00325291 ,  6.03167    ])
40      , -287298     , array([ 0.0803341  ,  0.0657275  ,  0.0032568  ,  6.03221    ])
44      , -287110     , array([ 0.0804834  ,  0.0658311  ,  0.0032607  ,  6.03275    ])
48      , -287105     , array([ 0.0804834  ,  0.0658311  ,  0.0032607  ,  6.03879    ])
56      , -287050     , array([ 0.0805208  ,  0.0658735  ,  0.00326168 ,  6.03289    ])
60      , -287045     , array([ 0.0805208  ,  0.0658735  ,  0.00326168 ,  6.03892    ])
64      , -286941     , array([ 0.0805581  ,  0.0659818  ,  0.00326265 ,  6.03302    ])
76      , -286926     , array([ 0.0805675  ,  0.0659925  ,  0.00326289 ,  6.03306    ])
80      , -286961     , array([ 0.0805768  ,  0.0659371  ,  0.00326314 ,  6.03309    ])
84      , -286956     , array([ 0.0805768  ,  0.0659371  ,  0.00326314 ,  6.03913    ])
92      , -286957     , array([ 0.0805792  ,  0.0659398  ,  0.0032632  ,  6.0331     ])
96      , -286952     , array([ 0.0805792  ,  0.0659398  ,  0.0032632  ,  6.03914    ])
100     , -286904     , array([ 0.0805815  ,  0.0660084  ,  0.00326326 ,  6.03311    ])
104     , -264754     , array([ 0.09685    ,  0.0850951  ,  0.00367339 ,  6.08678    ])
108     , -264750     , array([ 0.09685    ,  0.0850951  ,  0.00367339 ,  6.09287    ])
116     , -264750     , array([ 0.0968482  ,  0.085093   ,  0.003673   ,  6.11478    ])
120     , -264746     , array([ 0.0968482  ,  0.085093   ,  0.003673   ,  6.1209     ])
124     , -264663     , array([ 0.0968283  ,  0.0851555  ,  0.00366879 ,  6.42718    ])
128     , -264628     , array([ 0.0968837  ,  0.0851675  ,  0.0036703  ,  6.42573    ])
132     , -264624     , array([ 0.0968837  ,  0.0851675  ,  0.0036703  ,  6.43216    ])
136     , -264244     , array([ 0.0971056  ,  0.0856423  ,  0.00367636 ,  6.41995    ])
140     , -262935     , array([ 0.097998   ,  0.0871317  ,  0.0037007  ,  6.39688    ])
144     , -262931     , array([ 0.097998   ,  0.0871317  ,  0.0037007  ,  6.40328    ])
148     , -257537     , array([ 0.101651   ,  0.0938209  ,  0.00379967 ,  6.30541    ])
160     , -257536     , array([ 0.101651   ,  0.0938218  ,  0.00379969 ,  6.3054     ])
164     , -257528     , array([ 0.101693   ,  0.0938054  ,  0.00380082 ,  6.30437    ])
168     , -257524     , array([ 0.101693   ,  0.0938054  ,  0.00380082 ,  6.31068    ])
176     , -257528     , array([ 0.101693   ,  0.0938056  ,  0.00380083 ,  6.30437    ])
180     , -257524     , array([ 0.101693   ,  0.0938056  ,  0.00380083 ,  6.31067    ])
184     , -257463     , array([ 0.101704   ,  0.0939192  ,  0.00380111 ,  6.3041     ])
196     , -257463     , array([ 0.101704   ,  0.0939193  ,  0.00380112 ,  6.3041     ])
200     , -257509     , array([ 0.101707   ,  0.0938305  ,  0.00380119 ,  6.30404    ])
204     , -257505     , array([ 0.101707   ,  0.0938305  ,  0.00380119 ,  6.31034    ])
208     , -254847     , array([ 0.103575   ,  0.0973963  ,  0.00385143 ,  6.25903    ])
212     , -253250     , array([ 0.104827   ,  0.099658   ,  0.00388495 ,  6.22951    ])
216     , -253246     , array([ 0.104827   ,  0.099658   ,  0.00388495 ,  6.23574    ])
224     , -253250     , array([ 0.104827   ,  0.099658   ,  0.00388495 ,  6.22951    ])
228     , -253246     , array([ 0.104827   ,  0.099658   ,  0.00388495 ,  6.23574    ])
232     , -253200     , array([ 0.104827   ,  0.0997577  ,  0.00388495 ,  6.22951    ])
244     , -253200     , array([ 0.104827   ,  0.0997577  ,  0.00388495 ,  6.22951    ])
248     , -253250     , array([ 0.104827   ,  0.099658   ,  0.00388495 ,  6.22951    ])
252     , -253246     , array([ 0.104827   ,  0.099658   ,  0.00388495 ,  6.23574    ])
256     , -253060     , array([ 0.104934   ,  0.0999611  ,  0.00388781 ,  6.227      ])
260     , -253110     , array([ 0.104934   ,  0.0998612  ,  0.00388781 ,  6.227      ])
264     , -253107     , array([ 0.104934   ,  0.0998612  ,  0.00388781 ,  6.23323    ])
272     , -253110     , array([ 0.104934   ,  0.0998612  ,  0.00388781 ,  6.227      ])
276     , -253107     , array([ 0.104934   ,  0.0998612  ,  0.00388781 ,  6.23323    ])
284     , -253025     , array([ 0.105      ,  0.099986   ,  0.00388957 ,  6.22547    ])
288     , -253021     , array([ 0.105      ,  0.099986   ,  0.00388957 ,  6.2317     ])
296     , -253019     , array([ 0.105005   ,  0.0999951  ,  0.00388969 ,  6.22536    ])
300     , -253015     , array([ 0.105005   ,  0.0999951  ,  0.00388969 ,  6.23158    ])
308     , -253018     , array([ 0.105005   ,  0.0999955  ,  0.0038897  ,  6.22535    ])
312     , -253015     , array([ 0.105005   ,  0.0999955  ,  0.0038897  ,  6.23158    ])
320     , -253018     , array([ 0.105005   ,  0.0999955  ,  0.0038897  ,  6.22535    ])
324     , -253015     , array([ 0.105005   ,  0.0999955  ,  0.0038897  ,  6.23158    ])
332     , -253018     , array([ 0.105005   ,  0.0999955  ,  0.0038897  ,  6.22535    ])
336     , -253015     , array([ 0.105005   ,  0.0999955  ,  0.0038897  ,  6.23158    ])
344     , -253018     , array([ 0.105005   ,  0.0999955  ,  0.0038897  ,  6.22535    ])
348     , -253015     , array([ 0.105005   ,  0.0999955  ,  0.0038897  ,  6.23158    ])
356     , -253018     , array([ 0.105005   ,  0.0999955  ,  0.0038897  ,  6.22535    ])
360     , -253015     , array([ 0.105005   ,  0.0999955  ,  0.0038897  ,  6.23158    ])
368     , -253018     , array([ 0.105005   ,  0.0999955  ,  0.0038897  ,  6.22535    ])
372     , -253015     , array([ 0.105005   ,  0.0999955  ,  0.0038897  ,  6.23158    ])
380     , -253018     , array([ 0.105005   ,  0.0999955  ,  0.0038897  ,  6.22535    ])
384     , -253015     , array([ 0.105005   ,  0.0999955  ,  0.0038897  ,  6.23158    ])
392     , -253018     , array([ 0.105005   ,  0.0999955  ,  0.0038897  ,  6.22535    ])
396     , -253015     , array([ 0.105005   ,  0.0999955  ,  0.0038897  ,  6.23158    ])
404     , -253018     , array([ 0.105005   ,  0.0999955  ,  0.0038897  ,  6.22535    ])
408     , -253015     , array([ 0.105005   ,  0.0999955  ,  0.0038897  ,  6.23158    ])
416     , -253018     , array([ 0.105005   ,  0.0999955  ,  0.0038897  ,  6.22535    ])
420     , -253015     , array([ 0.105005   ,  0.0999955  ,  0.0038897  ,  6.23158    ])
424     , -264579     , array([ 0.0968837  ,  0.0852527  ,  0.0036703  ,  6.42573    ])
428     , -264544     , array([ 0.0969391  ,  0.0852646  ,  0.00367182 ,  6.42428    ])
432     , -264541     , array([ 0.0969391  ,  0.0852646  ,  0.00367182 ,  6.43071    ])
436     , -264327     , array([ 0.0970501  ,  0.0855448  ,  0.00367485 ,  6.42139    ])
440     , -264041     , array([ 0.0972723  ,  0.0858499  ,  0.00368091 ,  6.41562    ])
444     , -264037     , array([ 0.0972723  ,  0.0858499  ,  0.00368091 ,  6.42204    ])
448     , -263319     , array([ 0.0977182  ,  0.0867231  ,  0.00369308 ,  6.40408    ])
452     , -261976     , array([ 0.0986163  ,  0.0882313  ,  0.00371753 ,  6.38106    ])
456     , -261972     , array([ 0.0986163  ,  0.0882313  ,  0.00371753 ,  6.38745    ])
460     , -259293     , array([ 0.100437   ,  0.0916013  ,  0.00376691 ,  6.33528    ])
464     , -254097     , array([ 0.104181   ,  0.0984365  ,  0.00386765 ,  6.24469    ])
468     , -254093     , array([ 0.104181   ,  0.0984365  ,  0.00386765 ,  6.25094    ])
476     , -253421     , array([ 0.104658   ,  0.0994378  ,  0.00388043 ,  6.23346    ])
480     , -253158     , array([ 0.104898   ,  0.0997924  ,  0.00388684 ,  6.22785    ])
484     , -253154     , array([ 0.104898   ,  0.0997924  ,  0.00388684 ,  6.23408    ])
488     , -253125     , array([ 0.105063   ,  0.0999063  ,  0.00388844 ,  6.22645    ])
492     , -253123     , array([ 0.104925   ,  0.0998433  ,  0.00388756 ,  6.22722    ])
Finshed optimization **************************************************
Writing out parameters **************************************************
Writing out SFS **************************************************
Making plots **************************************************
carrying out inference 31 for model 2D.5epoch.fixedN1N3.nomig for pop MN-IR
Beginning optimization ************************************************
4       , -693866     , array([ 0.00839246 ,  0.0688982  ,  0.00816951 ,  14.4394    ])
8       , -219031     , array([ 0.0201989  ,  0.0550249  ,  0.00522934 ,  14.3936    ])
12      , -219030     , array([ 0.0201989  ,  0.0550249  ,  0.00522934 ,  14.408     ])
16      , -218277     , array([ 0.258423   ,  0.00161574 ,  0.0106785  ,  14.8387    ])
20      , -216826     , array([ 0.25246    ,  0.00156098 ,  0.0102716  ,  14.8505    ])
24      , -216826     , array([ 0.25246    ,  0.00156098 ,  0.0102716  ,  14.8654    ])
28      , -212045     , array([ 0.229949   ,  0.00136671 ,  0.00879316 ,  14.898     ])
40      , -212045     , array([ 0.22995    ,  0.00136672 ,  0.00879311 ,  14.9121    ])
52      , -212045     , array([ 0.22995    ,  0.00136672 ,  0.00879311 ,  14.9121    ])
64      , -212045     , array([ 0.22995    ,  0.00136672 ,  0.00879311 ,  14.9122    ])
76      , -212045     , array([ 0.22995    ,  0.00136672 ,  0.00879311 ,  14.9122    ])
88      , -212045     , array([ 0.22995    ,  0.00136672 ,  0.00879311 ,  14.9122    ])
92      , -211887     , array([ 0.230531   ,  0.00137267 ,  0.00876314 ,  27.7503    ])
96      , -211887     , array([ 0.230531   ,  0.00137267 ,  0.00876314 ,  27.778     ])
104     , -211887     , array([ 0.230531   ,  0.00137267 ,  0.00876314 ,  27.7503    ])
108     , -211887     , array([ 0.230531   ,  0.00137267 ,  0.00876314 ,  27.778     ])
112     , -211680     , array([ 0.229552   ,  0.00136478 ,  0.00869204 ,  29.2878    ])
116     , -211617     , array([ 0.22922    ,  0.00136029 ,  0.008668   ,  29.8297    ])
120     , -211617     , array([ 0.22922    ,  0.00136029 ,  0.008668   ,  29.8596    ])
128     , -211617     , array([ 0.22922    ,  0.00136029 ,  0.008668   ,  29.8297    ])
132     , -211617     , array([ 0.22922    ,  0.00136029 ,  0.008668   ,  29.8596    ])
136     , -211617     , array([ 0.22922    ,  0.00136165 ,  0.008668   ,  29.8297    ])
148     , -211617     , array([ 0.22922    ,  0.00136165 ,  0.008668   ,  29.8297    ])
152     , -211617     , array([ 0.22922    ,  0.00136029 ,  0.008668   ,  29.8297    ])
156     , -211617     , array([ 0.22922    ,  0.00136029 ,  0.008668   ,  29.8596    ])
164     , -211617     , array([ 0.22922    ,  0.00136029 ,  0.008668   ,  29.8297    ])
168     , -211617     , array([ 0.22922    ,  0.00136029 ,  0.008668   ,  29.8596    ])
172     , -211617     , array([ 0.22922    ,  0.00136165 ,  0.008668   ,  29.8297    ])
184     , -211617     , array([ 0.22922    ,  0.00136165 ,  0.008668   ,  29.8297    ])
188     , -211617     , array([ 0.22922    ,  0.00136029 ,  0.008668   ,  29.8297    ])
192     , -211617     , array([ 0.22922    ,  0.00136029 ,  0.008668   ,  29.8596    ])
200     , -211617     , array([ 0.22922    ,  0.00136029 ,  0.008668   ,  29.8297    ])
204     , -211617     , array([ 0.22922    ,  0.00136029 ,  0.008668   ,  29.8596    ])
208     , -211617     , array([ 0.22922    ,  0.00136165 ,  0.008668   ,  29.8297    ])
220     , -211617     , array([ 0.22922    ,  0.00136165 ,  0.008668   ,  29.8297    ])
224     , -211617     , array([ 0.22922    ,  0.00136029 ,  0.008668   ,  29.8297    ])
228     , -211617     , array([ 0.22922    ,  0.00136029 ,  0.008668   ,  29.8596    ])
236     , -211617     , array([ 0.22922    ,  0.00136029 ,  0.008668   ,  29.8297    ])
240     , -211617     , array([ 0.22922    ,  0.00136029 ,  0.008668   ,  29.8596    ])
244     , -211617     , array([ 0.22922    ,  0.00136165 ,  0.008668   ,  29.8297    ])
248     , -211613     , array([ 0.229204   ,  0.0013601  ,  0.00866645 ,  29.925     ])
252     , -211613     , array([ 0.229204   ,  0.0013601  ,  0.00866645 ,  29.9549    ])
256     , -211613     , array([ 0.229204   ,  0.00136146 ,  0.00866645 ,  29.925     ])
260     , -211613     , array([ 0.229204   ,  0.0013601  ,  0.00866645 ,  29.925     ])
264     , -211613     , array([ 0.229204   ,  0.0013601  ,  0.00866645 ,  29.9549    ])
268     , -211611     , array([ 0.229196   ,  0.00136137 ,  0.00866568 ,  29.9727    ])
272     , -211613     , array([ 0.229204   ,  0.0013601  ,  0.00866645 ,  29.925     ])
276     , -211613     , array([ 0.229204   ,  0.0013601  ,  0.00866645 ,  29.9549    ])
280     , -211612     , array([ 0.229199   ,  0.0013614  ,  0.00866594 ,  29.9568    ])
284     , -211611     , array([ 0.229197   ,  0.00136002 ,  0.00866576 ,  29.9674    ])
288     , -211611     , array([ 0.229197   ,  0.00136002 ,  0.00866576 ,  29.9974    ])
292     , -211611     , array([ 0.229196   ,  0.00136137 ,  0.00866571 ,  29.9709    ])
296     , -211611     , array([ 0.229196   ,  0.00136001 ,  0.00866568 ,  29.9723    ])
304     , -211611     , array([ 0.229196   ,  0.00136137 ,  0.00866568 ,  29.9726    ])
308     , -211611     , array([ 0.229196   ,  0.00136001 ,  0.00866568 ,  29.9727    ])
316     , -211611     , array([ 0.229196   ,  0.00136137 ,  0.00866568 ,  29.9727    ])
320     , -211611     , array([ 0.229196   ,  0.00136001 ,  0.00866568 ,  29.9727    ])
328     , -211611     , array([ 0.229196   ,  0.00136137 ,  0.00866568 ,  29.9727    ])
332     , -211611     , array([ 0.229196   ,  0.00136001 ,  0.00866568 ,  29.9727    ])
340     , -211611     , array([ 0.229196   ,  0.00136137 ,  0.00866568 ,  29.9727    ])
344     , -211611     , array([ 0.229196   ,  0.00136001 ,  0.00866568 ,  29.9727    ])
352     , -211611     , array([ 0.229196   ,  0.00136137 ,  0.00866568 ,  29.9727    ])
356     , -211611     , array([ 0.229196   ,  0.00136001 ,  0.00866568 ,  29.9727    ])
364     , -211611     , array([ 0.229196   ,  0.00136137 ,  0.00866568 ,  29.9727    ])
368     , -211611     , array([ 0.229196   ,  0.00136001 ,  0.00866568 ,  29.9727    ])
376     , -211611     , array([ 0.229196   ,  0.00136137 ,  0.00866568 ,  29.9727    ])
380     , -211611     , array([ 0.229196   ,  0.00136001 ,  0.00866568 ,  29.9727    ])
388     , -211611     , array([ 0.229196   ,  0.00136137 ,  0.00866568 ,  29.9727    ])
392     , -211611     , array([ 0.229196   ,  0.00136001 ,  0.00866568 ,  29.9727    ])
400     , -211611     , array([ 0.229196   ,  0.00136137 ,  0.00866568 ,  29.9727    ])
404     , -211611     , array([ 0.229196   ,  0.00136001 ,  0.00866568 ,  29.9727    ])
412     , -211611     , array([ 0.229196   ,  0.00136137 ,  0.00866568 ,  29.9727    ])
416     , -211611     , array([ 0.229196   ,  0.00136001 ,  0.00866568 ,  29.9727    ])
424     , -211611     , array([ 0.229196   ,  0.00136137 ,  0.00866568 ,  29.9727    ])
428     , -211611     , array([ 0.229196   ,  0.00136001 ,  0.00866568 ,  29.9727    ])
436     , -211611     , array([ 0.229196   ,  0.00136137 ,  0.00866568 ,  29.9727    ])
440     , -211611     , array([ 0.229196   ,  0.00136001 ,  0.00866568 ,  29.9727    ])
448     , -211611     , array([ 0.229196   ,  0.00136137 ,  0.00866568 ,  29.9727    ])
460     , -211613     , array([ 0.229433   ,  0.0013601  ,  0.00866645 ,  29.9249    ])
464     , -211611     , array([ 0.229196   ,  0.00136001 ,  0.00866568 ,  29.9727    ])
468     , -211633     , array([ 0.229196   ,  0.00136001 ,  0.00867435 ,  29.9727    ])
472     , -211611     , array([ 0.229197   ,  0.00136001 ,  0.00866576 ,  29.9678    ])
Finshed optimization **************************************************
Writing out parameters **************************************************
Writing out SFS **************************************************
Making plots **************************************************
carrying out inference 32 for model 2D.5epoch.fixedN1N3.nomig for pop MN-IR
Beginning optimization ************************************************
4       , -937096     , array([ 0.00610005 ,  0.0530355  ,  0.0188561  ,  12.3401    ])
8       , -303401     , array([ 0.0143268  ,  0.0433869  ,  0.0114171  ,  12.2803    ])
12      , -303402     , array([ 0.0143268  ,  0.0433869  ,  0.0114171  ,  12.2926    ])
16      , -477547     , array([ 0.435921   ,  0.0194518  ,  0.00154067 ,  12.0438    ])
28      , -476111     , array([ 0.438505   ,  0.0194233  ,  0.00154603 ,  12.0441    ])
32      , -474642     , array([ 0.441105   ,  0.0193754  ,  0.0015514  ,  12.0444    ])
36      , -474639     , array([ 0.441105   ,  0.0193754  ,  0.0015514  ,  12.0564    ])
44      , -474291     , array([ 0.441749   ,  0.0193683  ,  0.00155273 ,  12.0444    ])
48      , -474288     , array([ 0.441749   ,  0.0193683  ,  0.00155273 ,  12.0565    ])
52      , -473947     , array([ 0.442393   ,  0.0193807  ,  0.00155406 ,  12.0445    ])
64      , -473859     , array([ 0.442554   ,  0.0193789  ,  0.00155439 ,  12.0445    ])
68      , -473765     , array([ 0.442715   ,  0.0193578  ,  0.00155472 ,  12.0446    ])
72      , -473762     , array([ 0.442715   ,  0.0193578  ,  0.00155472 ,  12.0566    ])
76      , -371950     , array([ 0.711983   ,  0.0172182  ,  0.0020548  ,  12.0673    ])
88      , -371874     , array([ 0.714246   ,  0.0174219  ,  0.00205554 ,  12.0099    ])
92      , -371794     , array([ 0.716519   ,  0.0176106  ,  0.00205628 ,  11.9527    ])
96      , -371792     , array([ 0.716519   ,  0.0176106  ,  0.00205628 ,  11.9647    ])
104     , -371775     , array([ 0.71709    ,  0.0176627  ,  0.00205646 ,  11.9385    ])
108     , -371773     , array([ 0.71709    ,  0.0176627  ,  0.00205646 ,  11.9504    ])
112     , -371759     , array([ 0.717662   ,  0.0177326  ,  0.00205665 ,  11.9242    ])
124     , -371755     , array([ 0.717805   ,  0.0177457  ,  0.00205669 ,  11.9206    ])
128     , -371746     , array([ 0.717948   ,  0.0177411  ,  0.00205674 ,  11.9171    ])
132     , -371744     , array([ 0.717948   ,  0.0177411  ,  0.00205674 ,  11.929     ])
140     , -371745     , array([ 0.717984   ,  0.0177444  ,  0.00205675 ,  11.9162    ])
144     , -371743     , array([ 0.717984   ,  0.0177444  ,  0.00205675 ,  11.9281    ])
148     , -371747     , array([ 0.718019   ,  0.0177654  ,  0.00205676 ,  11.9153    ])
160     , -371747     , array([ 0.718028   ,  0.0177662  ,  0.00205677 ,  11.915     ])
164     , -371743     , array([ 0.718037   ,  0.0177493  ,  0.00205677 ,  11.9148    ])
168     , -371741     , array([ 0.718037   ,  0.0177493  ,  0.00205677 ,  11.9267    ])
172     , -365012     , array([ 0.947976   ,  0.0497467  ,  0.00212249 ,  7.85044    ])
176     , -365007     , array([ 0.947979   ,  0.0496976  ,  0.00212249 ,  7.8504     ])
180     , -365005     , array([ 0.947979   ,  0.0496976  ,  0.00212249 ,  7.85826    ])
184     , -365011     , array([ 0.947982   ,  0.0497479  ,  0.00212249 ,  7.85036    ])
196     , -365011     , array([ 0.947983   ,  0.0497481  ,  0.00212249 ,  7.85035    ])
200     , -365007     , array([ 0.947984   ,  0.0496985  ,  0.00212249 ,  7.85034    ])
204     , -365005     , array([ 0.947984   ,  0.0496985  ,  0.00212249 ,  7.8582     ])
212     , -365007     , array([ 0.947984   ,  0.0496985  ,  0.00212249 ,  7.85034    ])
216     , -365005     , array([ 0.947984   ,  0.0496985  ,  0.00212249 ,  7.8582     ])
220     , -365011     , array([ 0.947984   ,  0.0497483  ,  0.00212249 ,  7.85034    ])
224     , -364098     , array([ 0.981481   ,  0.0565243  ,  0.00213085 ,  7.45144    ])
228     , -364095     , array([ 0.981481   ,  0.0565243  ,  0.00213085 ,  7.45889    ])
232     , -364102     , array([ 0.981481   ,  0.0565809  ,  0.00213085 ,  7.45144    ])
236     , -364098     , array([ 0.981481   ,  0.0565243  ,  0.00213085 ,  7.45144    ])
240     , -364095     , array([ 0.981481   ,  0.0565243  ,  0.00213085 ,  7.45889    ])
244     , -363652     , array([ 0.998671   ,  0.0603414  ,  0.00213505 ,  7.25966    ])
248     , -363648     , array([ 0.998671   ,  0.0602811  ,  0.00213505 ,  7.25965    ])
252     , -363646     , array([ 0.998671   ,  0.0602811  ,  0.00213505 ,  7.26692    ])
256     , -363652     , array([ 0.998671   ,  0.0603414  ,  0.00213505 ,  7.25965    ])
268     , -363652     , array([ 0.998671   ,  0.0603414  ,  0.00213505 ,  7.25965    ])
272     , -363648     , array([ 0.998671   ,  0.0602811  ,  0.00213505 ,  7.25965    ])
276     , -363646     , array([ 0.998671   ,  0.0602811  ,  0.00213505 ,  7.26692    ])
284     , -363648     , array([ 0.998671   ,  0.0602811  ,  0.00213505 ,  7.25965    ])
288     , -363646     , array([ 0.998671   ,  0.0602811  ,  0.00213505 ,  7.26692    ])
292     , -363652     , array([ 0.998671   ,  0.0603414  ,  0.00213505 ,  7.25965    ])
304     , -363652     , array([ 0.998671   ,  0.0603414  ,  0.00213505 ,  7.25965    ])
308     , -363648     , array([ 0.998671   ,  0.0602811  ,  0.00213505 ,  7.25965    ])
312     , -363646     , array([ 0.998671   ,  0.0602811  ,  0.00213505 ,  7.26692    ])
316     , -363624     , array([ 0.999755   ,  0.0605846  ,  0.00213531 ,  7.24783    ])
320     , -363648     , array([ 0.998671   ,  0.0602811  ,  0.00213505 ,  7.25965    ])
324     , -363646     , array([ 0.998671   ,  0.0602811  ,  0.00213505 ,  7.26692    ])
328     , -363634     , array([ 0.999393   ,  0.0605034  ,  0.00213522 ,  7.25177    ])
332     , -363622     , array([ 0.999679   ,  0.0605069  ,  0.00213529 ,  7.24867    ])
336     , -363620     , array([ 0.999679   ,  0.0605069  ,  0.00213529 ,  7.25592    ])
340     , -363625     , array([ 0.999739   ,  0.0605809  ,  0.00213531 ,  7.24801    ])
344     , -363621     , array([ 0.999752   ,  0.0605232  ,  0.00213531 ,  7.24787    ])
348     , -363618     , array([ 0.999752   ,  0.0605232  ,  0.00213531 ,  7.25512    ])
352     , -363624     , array([ 0.999754   ,  0.0605844  ,  0.00213531 ,  7.24784    ])
356     , -363620     , array([ 0.999755   ,  0.060524   ,  0.00213531 ,  7.24784    ])
360     , -363618     , array([ 0.999755   ,  0.060524   ,  0.00213531 ,  7.25509    ])
364     , -363624     , array([ 0.999755   ,  0.0605845  ,  0.00213531 ,  7.24783    ])
368     , -363620     , array([ 0.999755   ,  0.060524   ,  0.00213531 ,  7.24783    ])
372     , -363618     , array([ 0.999755   ,  0.060524   ,  0.00213531 ,  7.25509    ])
376     , -363624     , array([ 0.999755   ,  0.0605846  ,  0.00213531 ,  7.24783    ])
380     , -363620     , array([ 0.999755   ,  0.060524   ,  0.00213531 ,  7.24783    ])
384     , -363618     , array([ 0.999755   ,  0.060524   ,  0.00213531 ,  7.25508    ])
388     , -363624     , array([ 0.999755   ,  0.0605846  ,  0.00213531 ,  7.24783    ])
392     , -363620     , array([ 0.999755   ,  0.060524   ,  0.00213531 ,  7.24783    ])
396     , -363618     , array([ 0.999755   ,  0.060524   ,  0.00213531 ,  7.25508    ])
400     , -363624     , array([ 0.999755   ,  0.0605846  ,  0.00213531 ,  7.24783    ])
404     , -363620     , array([ 0.999755   ,  0.060524   ,  0.00213531 ,  7.24783    ])
408     , -363618     , array([ 0.999755   ,  0.060524   ,  0.00213531 ,  7.25508    ])
412     , -363624     , array([ 0.999755   ,  0.0605846  ,  0.00213531 ,  7.24783    ])
416     , -363620     , array([ 0.999755   ,  0.060524   ,  0.00213531 ,  7.24783    ])
420     , -363618     , array([ 0.999755   ,  0.060524   ,  0.00213531 ,  7.25508    ])
424     , -363624     , array([ 0.999755   ,  0.0605846  ,  0.00213531 ,  7.24783    ])
428     , -363620     , array([ 0.999755   ,  0.060524   ,  0.00213531 ,  7.24783    ])
432     , -363618     , array([ 0.999755   ,  0.060524   ,  0.00213531 ,  7.25508    ])
436     , -363624     , array([ 0.999755   ,  0.0605846  ,  0.00213531 ,  7.24783    ])
444     , -365211     , array([ 0.940346   ,  0.0482306  ,  0.00212055 ,  7.9463     ])
448     , -364918     , array([ 0.940346   ,  0.0482306  ,  0.00212267 ,  7.9463     ])
452     , -364301     , array([ 0.973621   ,  0.0548648  ,  0.00212892 ,  7.54196    ])
456     , -364013     , array([ 0.973621   ,  0.0548648  ,  0.00213105 ,  7.54196    ])
460     , -363845     , array([ 0.991689   ,  0.0585166  ,  0.00213311 ,  7.34758    ])
464     , -363631     , array([ 0.999348   ,  0.0604327  ,  0.00213521 ,  7.25227    ])
468     , -363342     , array([ 0.999348   ,  0.0604327  ,  0.00213735 ,  7.25227    ])
Finshed optimization **************************************************
Writing out parameters **************************************************
Writing out SFS **************************************************
Making plots **************************************************
carrying out inference 33 for model 2D.5epoch.fixedN1N3.nomig for pop MN-IR
Beginning optimization ************************************************
4       , -915055     , array([ 0.00624582 ,  0.085883   ,  0.0166292  ,  18.951     ])
8       , -564340     , array([ 0.0135461  ,  0.0856802  ,  0.00868445 ,  18.873     ])
12      , -564341     , array([ 0.0135461  ,  0.0856802  ,  0.00868445 ,  18.8919    ])
16      , -941228     , array([ 0.299713   ,  0.084959   ,  0.000648573,  18.5643    ])
20      , -221262     , array([ 0.0402241  ,  0.085396   ,  0.00348919 ,  18.764     ])
24      , -221260     , array([ 0.0402241  ,  0.085396   ,  0.00348919 ,  18.7827    ])
32      , -218211     , array([ 0.0418956  ,  0.0859255  ,  0.00360964 ,  18.7852    ])
36      , -218209     , array([ 0.0418956  ,  0.0859255  ,  0.00360964 ,  18.804     ])
40      , -212732     , array([ 0.0448899  ,  0.0969071  ,  0.00381087 ,  18.8519    ])
52      , -212732     , array([ 0.0448899  ,  0.0969071  ,  0.00381086 ,  18.8572    ])
64      , -212732     , array([ 0.0448899  ,  0.0969071  ,  0.00381086 ,  18.8572    ])
68      , -212568     , array([ 0.0448624  ,  0.0967538  ,  0.003796   ,  26.2286    ])
72      , -212566     , array([ 0.0448624  ,  0.0967538  ,  0.003796   ,  26.2548    ])
76      , -212230     , array([ 0.0450759  ,  0.0972569  ,  0.00381122 ,  26.2517    ])
80      , -210902     , array([ 0.0459399  ,  0.0988005  ,  0.00387272 ,  26.3444    ])
84      , -210901     , array([ 0.0459399  ,  0.0988005  ,  0.00387272 ,  26.3707    ])
92      , -210902     , array([ 0.0459399  ,  0.0988006  ,  0.00387272 ,  26.3444    ])
96      , -210901     , array([ 0.0459399  ,  0.0988006  ,  0.00387272 ,  26.3707    ])
100     , -210901     , array([ 0.04594    ,  0.0988997  ,  0.00387273 ,  26.3444    ])
112     , -210901     , array([ 0.0459401  ,  0.0988997  ,  0.00387273 ,  26.3444    ])
116     , -210902     , array([ 0.0459401  ,  0.098801   ,  0.00387274 ,  26.3444    ])
120     , -210901     , array([ 0.0459401  ,  0.098801   ,  0.00387274 ,  26.3707    ])
128     , -210902     , array([ 0.0459401  ,  0.098801   ,  0.00387274 ,  26.3444    ])
132     , -210901     , array([ 0.0459401  ,  0.098801   ,  0.00387274 ,  26.3707    ])
136     , -210900     , array([ 0.0459401  ,  0.0988998  ,  0.00387274 ,  26.3444    ])
140     , -210265     , array([ 0.0463782  ,  0.0996317  ,  0.00390385 ,  26.3908    ])
144     , -210263     , array([ 0.0463782  ,  0.0996317  ,  0.00390385 ,  26.4172    ])
152     , -210265     , array([ 0.0463782  ,  0.0996317  ,  0.00390385 ,  26.3908    ])
156     , -210263     , array([ 0.0463782  ,  0.0996317  ,  0.00390385 ,  26.4172    ])
160     , -210263     , array([ 0.0463782  ,  0.0997314  ,  0.00390385 ,  26.3908    ])
164     , -210054     , array([ 0.0465237  ,  0.0999073  ,  0.00391418 ,  26.4062    ])
168     , -210053     , array([ 0.0465237  ,  0.0999073  ,  0.00391418 ,  26.4326    ])
172     , -210263     , array([ 0.0463782  ,  0.0997314  ,  0.00390385 ,  26.3908    ])
176     , -210125     , array([ 0.0464752  ,  0.0998154  ,  0.00391073 ,  26.4011    ])
180     , -210123     , array([ 0.0464752  ,  0.0998154  ,  0.00391073 ,  26.4275    ])
184     , -210076     , array([ 0.0465076  ,  0.0999766  ,  0.00391303 ,  26.4045    ])
188     , -210062     , array([ 0.0465183  ,  0.0998971  ,  0.00391379 ,  26.4056    ])
192     , -210061     , array([ 0.0465183  ,  0.0998971  ,  0.00391379 ,  26.432     ])
200     , -210055     , array([ 0.0465234  ,  0.0999066  ,  0.00391415 ,  26.4061    ])
204     , -210054     , array([ 0.0465234  ,  0.0999066  ,  0.00391415 ,  26.4326    ])
212     , -210054     , array([ 0.0465237  ,  0.0999073  ,  0.00391417 ,  26.4062    ])
216     , -210053     , array([ 0.0465237  ,  0.0999073  ,  0.00391417 ,  26.4326    ])
224     , -210054     , array([ 0.0465237  ,  0.0999073  ,  0.00391418 ,  26.4062    ])
228     , -210053     , array([ 0.0465237  ,  0.0999073  ,  0.00391418 ,  26.4326    ])
236     , -210054     , array([ 0.0465237  ,  0.0999073  ,  0.00391418 ,  26.4062    ])
240     , -210053     , array([ 0.0465237  ,  0.0999073  ,  0.00391418 ,  26.4326    ])
248     , -210054     , array([ 0.0465237  ,  0.0999073  ,  0.00391418 ,  26.4062    ])
252     , -210053     , array([ 0.0465237  ,  0.0999073  ,  0.00391418 ,  26.4326    ])
260     , -210054     , array([ 0.0465237  ,  0.0999073  ,  0.00391418 ,  26.4062    ])
264     , -210053     , array([ 0.0465237  ,  0.0999073  ,  0.00391418 ,  26.4326    ])
272     , -210054     , array([ 0.0465237  ,  0.0999073  ,  0.00391418 ,  26.4062    ])
276     , -210053     , array([ 0.0465237  ,  0.0999073  ,  0.00391418 ,  26.4326    ])
284     , -210054     , array([ 0.0465237  ,  0.0999073  ,  0.00391418 ,  26.4062    ])
288     , -210053     , array([ 0.0465237  ,  0.0999073  ,  0.00391418 ,  26.4326    ])
296     , -210054     , array([ 0.0465237  ,  0.0999073  ,  0.00391418 ,  26.4062    ])
300     , -210053     , array([ 0.0465237  ,  0.0999073  ,  0.00391418 ,  26.4326    ])
308     , -210054     , array([ 0.0465237  ,  0.0999073  ,  0.00391418 ,  26.4062    ])
312     , -210053     , array([ 0.0465237  ,  0.0999073  ,  0.00391418 ,  26.4326    ])
320     , -210054     , array([ 0.0465237  ,  0.0999073  ,  0.00391418 ,  26.4062    ])
324     , -210053     , array([ 0.0465237  ,  0.0999073  ,  0.00391418 ,  26.4326    ])
332     , -212232     , array([ 0.0450759  ,  0.0971597  ,  0.00381122 ,  26.2517    ])
336     , -212230     , array([ 0.0450759  ,  0.0971597  ,  0.00381122 ,  26.2779    ])
340     , -211895     , array([ 0.0452903  ,  0.097665   ,  0.0038265  ,  26.2748    ])
344     , -211223     , array([ 0.0457223  ,  0.0983877  ,  0.00385725 ,  26.3212    ])
348     , -211221     , array([ 0.0457223  ,  0.0983877  ,  0.00385725 ,  26.3475    ])
352     , -210586     , array([ 0.0462046  ,  0.099215   ,  0.00388825 ,  26.3676    ])
356     , -210265     , array([ 0.046378   ,  0.0996313  ,  0.00390384 ,  26.3908    ])
360     , -210184     , array([ 0.046378   ,  0.0996313  ,  0.00390774 ,  26.3908    ])
364     , -210109     , array([ 0.0465347  ,  0.09984    ,  0.00391166 ,  26.4024    ])
368     , -210025     , array([ 0.0465434  ,  0.0999446  ,  0.00391557 ,  26.4082    ])
372     , -209940     , array([ 0.0465434  ,  0.0999446  ,  0.00391949 ,  26.4082    ])
376     , -210034     , array([ 0.0465379  ,  0.0999342  ,  0.00391518 ,  26.4077    ])
380     , -210026     , array([ 0.0465432  ,  0.0999442  ,  0.00391556 ,  26.4082    ])
Finshed optimization **************************************************
Writing out parameters **************************************************
Writing out SFS **************************************************
Making plots **************************************************
carrying out inference 34 for model 2D.5epoch.fixedN1N3.nomig for pop MN-IR
Beginning optimization ************************************************
4       , -600515     , array([ 0.0166004  ,  0.099      ,  0.0149892  ,  10.4487    ])
8       , -210911     , array([ 0.038546   ,  0.0627113  ,  0.0108813  ,  10.4141    ])
12      , -210911     , array([ 0.038546   ,  0.0627113  ,  0.0108813  ,  10.4245    ])
20      , -209884     , array([ 0.0383644  ,  0.0628366  ,  0.0106483  ,  10.4172    ])
24      , -209884     , array([ 0.0383644  ,  0.0628366  ,  0.0106483  ,  10.4277    ])
28      , -4.14639e+06, array([ 0.0128996  ,  0.0996922  ,  7.21138e-05,  11.1594    ])
32      , -194599     , array([ 0.034084   ,  0.0660575  ,  0.00619197 ,  10.4953    ])
36      , -194598     , array([ 0.034084   ,  0.0660575  ,  0.00619197 ,  10.5058    ])
44      , -194598     , array([ 0.0340747  ,  0.0660243  ,  0.00619184 ,  10.4989    ])
48      , -194596     , array([ 0.0340747  ,  0.0660243  ,  0.00619184 ,  10.5094    ])
52      , -194479     , array([ 0.0325472  ,  0.0607796  ,  0.00616921 ,  11.1034    ])
56      , -194259     , array([ 0.0325935  ,  0.0608633  ,  0.00615119 ,  13.2417    ])
60      , -194258     , array([ 0.0325935  ,  0.0608633  ,  0.00615119 ,  13.2549    ])
64      , -193864     , array([ 0.0326811  ,  0.0613971  ,  0.00607614 ,  19.1757    ])
76      , -193864     , array([ 0.0326811  ,  0.0613971  ,  0.00607614 ,  19.1757    ])
80      , -193866     , array([ 0.0326811  ,  0.0613357  ,  0.00607614 ,  19.1759    ])
84      , -193865     , array([ 0.0326811  ,  0.0613357  ,  0.00607614 ,  19.1951    ])
88      , -193561     , array([ 0.0327772  ,  0.0619194  ,  0.00599899 ,  29.7106    ])
100     , -193561     , array([ 0.0327772  ,  0.0619194  ,  0.00599899 ,  29.7107    ])
104     , -193562     , array([ 0.0327772  ,  0.0618575  ,  0.00599899 ,  29.7107    ])
108     , -193562     , array([ 0.0327772  ,  0.0618575  ,  0.00599899 ,  29.7405    ])
116     , -193562     , array([ 0.0327772  ,  0.0618575  ,  0.00599899 ,  29.7108    ])
120     , -193562     , array([ 0.0327772  ,  0.0618575  ,  0.00599899 ,  29.7405    ])
124     , -193561     , array([ 0.0327772  ,  0.0619194  ,  0.00599899 ,  29.7108    ])
136     , -193561     , array([ 0.0327772  ,  0.0619194  ,  0.00599899 ,  29.7108    ])
140     , -193562     , array([ 0.0327772  ,  0.0618575  ,  0.00599899 ,  29.7108    ])
144     , -193562     , array([ 0.0327772  ,  0.0618575  ,  0.00599899 ,  29.7405    ])
152     , -193562     , array([ 0.0327772  ,  0.0618575  ,  0.00599899 ,  29.7108    ])
156     , -193562     , array([ 0.0327772  ,  0.0618575  ,  0.00599899 ,  29.7405    ])
160     , -193561     , array([ 0.0327772  ,  0.0619194  ,  0.00599899 ,  29.7108    ])
172     , -193561     , array([ 0.0327772  ,  0.0619194  ,  0.00599899 ,  29.7108    ])
176     , -193562     , array([ 0.0327772  ,  0.0618575  ,  0.00599899 ,  29.7108    ])
180     , -193562     , array([ 0.0327772  ,  0.0618575  ,  0.00599899 ,  29.7405    ])
188     , -193562     , array([ 0.0327772  ,  0.0618575  ,  0.00599899 ,  29.7108    ])
192     , -193562     , array([ 0.0327772  ,  0.0618575  ,  0.00599899 ,  29.7405    ])
196     , -193561     , array([ 0.0327772  ,  0.0619194  ,  0.00599899 ,  29.7108    ])
208     , -193561     , array([ 0.0327772  ,  0.0619194  ,  0.00599899 ,  29.7108    ])
212     , -193562     , array([ 0.0327772  ,  0.0618575  ,  0.00599899 ,  29.7108    ])
216     , -193562     , array([ 0.0327772  ,  0.0618575  ,  0.00599899 ,  29.7405    ])
220     , -193556     , array([ 0.032783   ,  0.0619301  ,  0.00600021 ,  29.9246    ])
232     , -193556     , array([ 0.032783   ,  0.0619301  ,  0.00600021 ,  29.9246    ])
236     , -193557     , array([ 0.032783   ,  0.0618682  ,  0.00600021 ,  29.9246    ])
240     , -193557     , array([ 0.032783   ,  0.0618682  ,  0.00600021 ,  29.9545    ])
244     , -193556     , array([ 0.032783   ,  0.0619301  ,  0.00600021 ,  29.9246    ])
248     , -193557     , array([ 0.032783   ,  0.0618682  ,  0.00600021 ,  29.9246    ])
252     , -193557     , array([ 0.032783   ,  0.0618682  ,  0.00600021 ,  29.9545    ])
256     , -193556     , array([ 0.032783   ,  0.0619301  ,  0.00600021 ,  29.9246    ])
260     , -193557     , array([ 0.032783   ,  0.0618682  ,  0.00600021 ,  29.9246    ])
264     , -193557     , array([ 0.032783   ,  0.0618682  ,  0.00600021 ,  29.9545    ])
268     , -193556     , array([ 0.032783   ,  0.0619301  ,  0.00600021 ,  29.9246    ])
272     , -193557     , array([ 0.032783   ,  0.0618682  ,  0.00600021 ,  29.9246    ])
276     , -193557     , array([ 0.032783   ,  0.0618682  ,  0.00600021 ,  29.9545    ])
280     , -193556     , array([ 0.032783   ,  0.0619301  ,  0.00600021 ,  29.9246    ])
284     , -193557     , array([ 0.032783   ,  0.0618682  ,  0.00600021 ,  29.9246    ])
288     , -193557     , array([ 0.032783   ,  0.0618682  ,  0.00600021 ,  29.9545    ])
292     , -193556     , array([ 0.032783   ,  0.0619301  ,  0.00600021 ,  29.9246    ])
296     , -193557     , array([ 0.032783   ,  0.0618682  ,  0.00600021 ,  29.9246    ])
300     , -193557     , array([ 0.032783   ,  0.0618682  ,  0.00600021 ,  29.9545    ])
304     , -193556     , array([ 0.032783   ,  0.0619301  ,  0.00600021 ,  29.9246    ])
308     , -193557     , array([ 0.032783   ,  0.0618682  ,  0.00600021 ,  29.9246    ])
312     , -193557     , array([ 0.032783   ,  0.0618682  ,  0.00600021 ,  29.9545    ])
320     , -193557     , array([ 0.032783   ,  0.0618681  ,  0.00600021 ,  29.9244    ])
324     , -193555     , array([ 0.032783   ,  0.0618681  ,  0.00600621 ,  29.9244    ])
328     , -193556     , array([ 0.0327844  ,  0.0618708  ,  0.00600051 ,  29.9781    ])
Finshed optimization **************************************************
Writing out parameters **************************************************
Writing out SFS **************************************************
Making plots **************************************************
carrying out inference 35 for model 2D.5epoch.fixedN1N3.nomig for pop MN-IR
Beginning optimization ************************************************
4       , -770313     , array([ 0.0064721  ,  0.0799502  ,  0.00836002 ,  11.4657    ])
8       , -441657     , array([ 0.0148948  ,  0.0792437  ,  0.0047216  ,  11.4119    ])
12      , -441657     , array([ 0.0148948  ,  0.0792437  ,  0.0047216  ,  11.4233    ])
16      , -1.16596e+06, array([ 0.417825   ,  0.076556   ,  0.000482341,  11.1991    ])
20      , -264822     , array([ 0.0355648  ,  0.0785126  ,  0.00260292 ,  11.3559    ])
24      , -264817     , array([ 0.0355648  ,  0.0785126  ,  0.00260292 ,  11.3673    ])
32      , -263075     , array([ 0.0360817  ,  0.0786264  ,  0.00263124 ,  11.3611    ])
36      , -263070     , array([ 0.0360817  ,  0.0786264  ,  0.00263124 ,  11.3725    ])
40      , -261332     , array([ 0.0366282  ,  0.0788239  ,  0.00266107 ,  11.3665    ])
52      , -260903     , array([ 0.0367546  ,  0.0788512  ,  0.00266795 ,  11.3677    ])
56      , -260628     , array([ 0.0368545  ,  0.0787938  ,  0.00267338 ,  11.3687    ])
60      , -260624     , array([ 0.0368545  ,  0.0787938  ,  0.00267338 ,  11.38      ])
64      , -229640     , array([ 0.305548   ,  0.0975281  ,  0.0130582  ,  12.1519    ])
76      , -229632     , array([ 0.305501   ,  0.097959   ,  0.0130534  ,  12.1897    ])
80      , -229614     , array([ 0.305405   ,  0.0987504  ,  0.0130435  ,  12.2676    ])
84      , -229614     , array([ 0.305405   ,  0.0987504  ,  0.0130435  ,  12.2799    ])
92      , -229611     , array([ 0.305392   ,  0.0988698  ,  0.0130422  ,  12.2781    ])
96      , -229611     , array([ 0.305392   ,  0.0988698  ,  0.0130422  ,  12.2904    ])
100     , -229598     , array([ 0.305318   ,  0.0996531  ,  0.0130346  ,  12.3379    ])
112     , -229597     , array([ 0.305315   ,  0.0996837  ,  0.0130343  ,  12.3405    ])
116     , -229596     , array([ 0.305312   ,  0.0996148  ,  0.013034   ,  12.3432    ])
120     , -229596     , array([ 0.305312   ,  0.0996148  ,  0.013034   ,  12.3556    ])
128     , -229596     , array([ 0.305311   ,  0.0996225  ,  0.0130339  ,  12.3439    ])
132     , -229595     , array([ 0.305311   ,  0.0996225  ,  0.0130339  ,  12.3562    ])
136     , -229596     , array([ 0.30531    ,  0.0997299  ,  0.0130338  ,  12.3446    ])
148     , -229596     , array([ 0.30531    ,  0.0997318  ,  0.0130338  ,  12.3447    ])
152     , -229596     , array([ 0.30531    ,  0.0996341  ,  0.0130337  ,  12.3449    ])
156     , -229595     , array([ 0.30531    ,  0.0996341  ,  0.0130337  ,  12.3573    ])
164     , -229596     , array([ 0.30531    ,  0.0996345  ,  0.0130337  ,  12.3449    ])
168     , -229595     , array([ 0.30531    ,  0.0996345  ,  0.0130337  ,  12.3573    ])
172     , -229596     , array([ 0.30531    ,  0.0997347  ,  0.0130337  ,  12.345     ])
184     , -229596     , array([ 0.30531    ,  0.0997348  ,  0.0130337  ,  12.345     ])
188     , -229596     , array([ 0.30531    ,  0.0996353  ,  0.0130337  ,  12.345     ])
192     , -229595     , array([ 0.30531    ,  0.0996353  ,  0.0130337  ,  12.3574    ])
200     , -229596     , array([ 0.30531    ,  0.0996353  ,  0.0130337  ,  12.345     ])
204     , -229595     , array([ 0.30531    ,  0.0996353  ,  0.0130337  ,  12.3574    ])
208     , -229596     , array([ 0.30531    ,  0.099735   ,  0.0130337  ,  12.345     ])
220     , -229596     , array([ 0.30531    ,  0.099735   ,  0.0130337  ,  12.345     ])
224     , -229596     , array([ 0.30531    ,  0.0996353  ,  0.0130337  ,  12.345     ])
228     , -229595     , array([ 0.30531    ,  0.0996353  ,  0.0130337  ,  12.3574    ])
236     , -229596     , array([ 0.30531    ,  0.0996353  ,  0.0130337  ,  12.345     ])
240     , -229595     , array([ 0.30531    ,  0.0996353  ,  0.0130337  ,  12.3574    ])
244     , -229596     , array([ 0.30531    ,  0.099735   ,  0.0130337  ,  12.345     ])
256     , -229596     , array([ 0.30531    ,  0.099735   ,  0.0130337  ,  12.345     ])
260     , -229596     , array([ 0.30531    ,  0.0996353  ,  0.0130337  ,  12.345     ])
264     , -229595     , array([ 0.30531    ,  0.0996353  ,  0.0130337  ,  12.3574    ])
272     , -229596     , array([ 0.30531    ,  0.0996353  ,  0.0130337  ,  12.345     ])
276     , -229595     , array([ 0.30531    ,  0.0996353  ,  0.0130337  ,  12.3574    ])
280     , -229596     , array([ 0.30531    ,  0.099735   ,  0.0130337  ,  12.345     ])
292     , -229596     , array([ 0.30531    ,  0.099735   ,  0.0130337  ,  12.345     ])
296     , -229596     , array([ 0.30531    ,  0.0996353  ,  0.0130337  ,  12.345     ])
300     , -229595     , array([ 0.30531    ,  0.0996353  ,  0.0130337  ,  12.3574    ])
308     , -229596     , array([ 0.30531    ,  0.0996353  ,  0.0130337  ,  12.345     ])
312     , -229595     , array([ 0.30531    ,  0.0996353  ,  0.0130337  ,  12.3574    ])
316     , -229596     , array([ 0.30531    ,  0.099735   ,  0.0130337  ,  12.345     ])
320     , -229591     , array([ 0.305286   ,  0.0998613  ,  0.0130313  ,  12.3647    ])
324     , -229590     , array([ 0.305286   ,  0.0998613  ,  0.0130313  ,  12.3771    ])
328     , -229591     , array([ 0.305286   ,  0.0999612  ,  0.0130313  ,  12.3647    ])
332     , -229591     , array([ 0.305286   ,  0.0998613  ,  0.0130313  ,  12.3647    ])
336     , -229590     , array([ 0.305286   ,  0.0998613  ,  0.0130313  ,  12.3771    ])
344     , -229591     , array([ 0.305286   ,  0.0998613  ,  0.0130313  ,  12.3647    ])
348     , -229590     , array([ 0.305286   ,  0.0998613  ,  0.0130313  ,  12.3771    ])
356     , -229588     , array([ 0.305274   ,  0.0999665  ,  0.0130301  ,  12.3739    ])
360     , -229588     , array([ 0.305274   ,  0.0999665  ,  0.0130301  ,  12.3863    ])
368     , -229588     , array([ 0.305274   ,  0.0999741  ,  0.01303    ,  12.3746    ])
372     , -229588     , array([ 0.305274   ,  0.0999741  ,  0.01303    ,  12.387     ])
380     , -229588     , array([ 0.305273   ,  0.0999745  ,  0.01303    ,  12.3746    ])
384     , -229588     , array([ 0.305273   ,  0.0999745  ,  0.01303    ,  12.387     ])
392     , -229588     , array([ 0.305273   ,  0.0999745  ,  0.01303    ,  12.3746    ])
396     , -229588     , array([ 0.305273   ,  0.0999745  ,  0.01303    ,  12.387     ])
404     , -229588     , array([ 0.305273   ,  0.0999745  ,  0.01303    ,  12.3746    ])
408     , -229588     , array([ 0.305273   ,  0.0999745  ,  0.01303    ,  12.387     ])
416     , -229588     , array([ 0.305273   ,  0.0999745  ,  0.01303    ,  12.3746    ])
420     , -229588     , array([ 0.305273   ,  0.0999745  ,  0.01303    ,  12.387     ])
428     , -229588     , array([ 0.305273   ,  0.0999745  ,  0.01303    ,  12.3746    ])
432     , -229588     , array([ 0.305273   ,  0.0999745  ,  0.01303    ,  12.387     ])
440     , -229588     , array([ 0.305273   ,  0.0999745  ,  0.01303    ,  12.3746    ])
444     , -229588     , array([ 0.305273   ,  0.0999745  ,  0.01303    ,  12.387     ])
452     , -229588     , array([ 0.305273   ,  0.0999745  ,  0.01303    ,  12.3746    ])
456     , -229588     , array([ 0.305273   ,  0.0999745  ,  0.01303    ,  12.387     ])
464     , -229588     , array([ 0.305273   ,  0.0999745  ,  0.01303    ,  12.3746    ])
468     , -229588     , array([ 0.305273   ,  0.0999745  ,  0.01303    ,  12.387     ])
488     , -229595     , array([ 0.30566    ,  0.0992141  ,  0.0130384  ,  12.3082    ])
Finshed optimization **************************************************
Writing out parameters **************************************************
Writing out SFS **************************************************
Making plots **************************************************
carrying out inference 36 for model 2D.5epoch.fixedN1N3.nomig for pop MN-IR
Beginning optimization ************************************************
4       , -790022     , array([ 0.00665648 ,  0.0596805  ,  0.0100066  ,  13.062     ])
8       , -289202     , array([ 0.0147502  ,  0.0516227  ,  0.00545914 ,  13.0106    ])
12      , -289202     , array([ 0.0147502  ,  0.0516227  ,  0.00545914 ,  13.0236    ])
16      , -1.16258e+06, array([ 0.355636   ,  0.0289273  ,  0.00048553 ,  12.8069    ])
20      , -255617     , array([ 0.0310286  ,  0.0450782  ,  0.00310149 ,  12.9627    ])
24      , -255614     , array([ 0.0310286  ,  0.0450782  ,  0.00310149 ,  12.9757    ])
32      , -253662     , array([ 0.0316878  ,  0.0457695  ,  0.00314975 ,  12.974     ])
36      , -253659     , array([ 0.0316878  ,  0.0457695  ,  0.00314975 ,  12.9869    ])
40      , -249609     , array([ 0.0331369  ,  0.0473227  ,  0.00325488 ,  12.9979    ])
52      , -249203     , array([ 0.0332959  ,  0.047487   ,  0.00326635 ,  13.0005    ])
56      , -248841     , array([ 0.0334568  ,  0.0476053  ,  0.00327793 ,  13.003     ])
60      , -248837     , array([ 0.0334568  ,  0.0476053  ,  0.00327793 ,  13.0161    ])
68      , -248711     , array([ 0.033502   ,  0.0476519  ,  0.00328118 ,  13.0038    ])
72      , -248708     , array([ 0.033502   ,  0.0476519  ,  0.00328118 ,  13.0168    ])
76      , -237808     , array([ 0.0363928  ,  0.0681245  ,  0.00315773 ,  13.1162    ])
88      , -237807     , array([ 0.0363925  ,  0.0681242  ,  0.00315767 ,  13.129     ])
92      , -237841     , array([ 0.0363897  ,  0.0680536  ,  0.00315701 ,  13.2811    ])
96      , -237838     , array([ 0.0363897  ,  0.0680536  ,  0.00315701 ,  13.2944    ])
104     , -237841     , array([ 0.0363896  ,  0.0680535  ,  0.003157   ,  13.2842    ])
108     , -237838     , array([ 0.0363896  ,  0.0680535  ,  0.003157   ,  13.2975    ])
112     , -237795     , array([ 0.0363889  ,  0.0681209  ,  0.00315681 ,  13.3269    ])
124     , -237795     , array([ 0.0363888  ,  0.0681209  ,  0.00315681 ,  13.3276    ])
128     , -237837     , array([ 0.0363886  ,  0.0680526  ,  0.00315676 ,  13.3386    ])
132     , -237834     , array([ 0.0363886  ,  0.0680526  ,  0.00315676 ,  13.352     ])
140     , -237837     , array([ 0.0363886  ,  0.0680526  ,  0.00315676 ,  13.3388    ])
144     , -237834     , array([ 0.0363886  ,  0.0680526  ,  0.00315676 ,  13.3522    ])
148     , -237794     , array([ 0.0363886  ,  0.0681207  ,  0.00315675 ,  13.3416    ])
160     , -237794     , array([ 0.0363886  ,  0.0681207  ,  0.00315675 ,  13.3416    ])
164     , -237837     , array([ 0.0363886  ,  0.0680526  ,  0.00315675 ,  13.3423    ])
168     , -237834     , array([ 0.0363886  ,  0.0680526  ,  0.00315675 ,  13.3557    ])
176     , -237837     , array([ 0.0363886  ,  0.0680526  ,  0.00315675 ,  13.3423    ])
180     , -237834     , array([ 0.0363886  ,  0.0680526  ,  0.00315675 ,  13.3557    ])
184     , -237794     , array([ 0.0363886  ,  0.0681207  ,  0.00315675 ,  13.3425    ])
188     , -237704     , array([ 0.0362875  ,  0.0679606  ,  0.00313304 ,  20.1916    ])
192     , -237702     , array([ 0.0362875  ,  0.0679606  ,  0.00313304 ,  20.2118    ])
196     , -237365     , array([ 0.0364019  ,  0.0682915  ,  0.00313933 ,  20.1609    ])
200     , -236225     , array([ 0.036863   ,  0.0692842  ,  0.0031646  ,  20.0387    ])
204     , -236223     , array([ 0.036863   ,  0.0692842  ,  0.0031646  ,  20.0588    ])
208     , -231601     , array([ 0.0387667  ,  0.0737691  ,  0.00326777 ,  19.5574    ])
212     , -216338     , array([ 0.0474168  ,  0.0943334  ,  0.00371519 ,  17.745     ])
216     , -216336     , array([ 0.0474168  ,  0.0943334  ,  0.00371519 ,  17.7627    ])
224     , -216336     , array([ 0.0474184  ,  0.0943361  ,  0.00371528 ,  17.7452    ])
228     , -216334     , array([ 0.0474184  ,  0.0943361  ,  0.00371528 ,  17.7629    ])
232     , -216299     , array([ 0.0474281  ,  0.0944477  ,  0.00371587 ,  17.7464    ])
244     , -216298     , array([ 0.0474285  ,  0.0944484  ,  0.00371589 ,  17.7465    ])
248     , -216317     , array([ 0.0474309  ,  0.0943583  ,  0.00371604 ,  17.7468    ])
252     , -216315     , array([ 0.0474309  ,  0.0943583  ,  0.00371604 ,  17.7645    ])
260     , -216317     , array([ 0.047431   ,  0.0943584  ,  0.00371605 ,  17.7468    ])
264     , -216315     , array([ 0.047431   ,  0.0943584  ,  0.00371605 ,  17.7646    ])
268     , -216293     , array([ 0.0474316  ,  0.0944539  ,  0.00371608 ,  17.7469    ])
280     , -216293     , array([ 0.0474316  ,  0.094454   ,  0.00371608 ,  17.7469    ])
284     , -216316     , array([ 0.0474318  ,  0.0943598  ,  0.00371609 ,  17.7469    ])
288     , -216314     , array([ 0.0474318  ,  0.0943598  ,  0.00371609 ,  17.7647    ])
292     , -213997     , array([ 0.0490442  ,  0.0973016  ,  0.0038134  ,  17.9541    ])
296     , -212573     , array([ 0.0501382  ,  0.0991286  ,  0.00387901 ,  18.0922    ])
300     , -212572     , array([ 0.0501382  ,  0.0991286  ,  0.00387901 ,  18.1103    ])
304     , -212081     , array([ 0.0505158  ,  0.0998913  ,  0.00390157 ,  18.1394    ])
316     , -212081     , array([ 0.0505158  ,  0.0998913  ,  0.00390157 ,  18.1394    ])
320     , -212103     , array([ 0.0505158  ,  0.0997915  ,  0.00390157 ,  18.1394    ])
324     , -212101     , array([ 0.0505158  ,  0.0997915  ,  0.00390157 ,  18.1575    ])
332     , -212103     , array([ 0.0505158  ,  0.0997915  ,  0.00390157 ,  18.1394    ])
336     , -212101     , array([ 0.0505158  ,  0.0997915  ,  0.00390157 ,  18.1575    ])
340     , -212027     , array([ 0.0505587  ,  0.0999668  ,  0.00390414 ,  18.1447    ])
344     , -212031     , array([ 0.0505731  ,  0.099892   ,  0.003905   ,  18.1465    ])
348     , -212030     , array([ 0.0505731  ,  0.099892   ,  0.003905   ,  18.1647    ])
356     , -212023     , array([ 0.0505797  ,  0.0999037  ,  0.00390539 ,  18.1474    ])
360     , -212021     , array([ 0.0505797  ,  0.0999037  ,  0.00390539 ,  18.1655    ])
368     , -212023     , array([ 0.0505802  ,  0.0999046  ,  0.00390542 ,  18.1474    ])
372     , -212021     , array([ 0.0505802  ,  0.0999046  ,  0.00390542 ,  18.1656    ])
380     , -212023     , array([ 0.0505802  ,  0.0999046  ,  0.00390542 ,  18.1474    ])
384     , -212021     , array([ 0.0505802  ,  0.0999046  ,  0.00390542 ,  18.1656    ])
392     , -212023     , array([ 0.0505802  ,  0.0999046  ,  0.00390542 ,  18.1474    ])
396     , -212021     , array([ 0.0505802  ,  0.0999046  ,  0.00390542 ,  18.1656    ])
404     , -212023     , array([ 0.0505802  ,  0.0999046  ,  0.00390542 ,  18.1474    ])
408     , -212021     , array([ 0.0505802  ,  0.0999046  ,  0.00390542 ,  18.1656    ])
416     , -212023     , array([ 0.0505802  ,  0.0999046  ,  0.00390542 ,  18.1474    ])
420     , -212021     , array([ 0.0505802  ,  0.0999046  ,  0.00390542 ,  18.1656    ])
428     , -212023     , array([ 0.0505802  ,  0.0999046  ,  0.00390542 ,  18.1474    ])
432     , -212021     , array([ 0.0505802  ,  0.0999046  ,  0.00390542 ,  18.1656    ])
440     , -212023     , array([ 0.0505802  ,  0.0999046  ,  0.00390542 ,  18.1474    ])
444     , -212021     , array([ 0.0505802  ,  0.0999046  ,  0.00390542 ,  18.1656    ])
452     , -212023     , array([ 0.0505802  ,  0.0999046  ,  0.00390542 ,  18.1474    ])
456     , -212021     , array([ 0.0505802  ,  0.0999046  ,  0.00390542 ,  18.1656    ])
468     , -214039     , array([ 0.04903    ,  0.0971795  ,  0.00381255 ,  17.9523    ])
472     , -214037     , array([ 0.04903    ,  0.0971795  ,  0.00381255 ,  17.9703    ])
476     , -212905     , array([ 0.0498571  ,  0.0987333  ,  0.00386218 ,  18.0569    ])
480     , -212401     , array([ 0.0502759  ,  0.0993703  ,  0.00388724 ,  18.1094    ])
484     , -212399     , array([ 0.0502759  ,  0.0993703  ,  0.00388724 ,  18.1276    ])
488     , -212117     , array([ 0.0504866  ,  0.09984    ,  0.00389983 ,  18.1358    ])
492     , -212008     , array([ 0.0505923  ,  0.0999257  ,  0.00390614 ,  18.1489    ])
496     , -212006     , array([ 0.0505923  ,  0.0999257  ,  0.00390614 ,  18.1671    ])
Finshed optimization **************************************************
Writing out parameters **************************************************
Writing out SFS **************************************************
Making plots **************************************************
carrying out inference 37 for model 2D.5epoch.fixedN1N3.nomig for pop MN-IR
Beginning optimization ************************************************
4       , -449384     , array([ 0.0180525  ,  0.099      ,  0.00681784 ,  11.3825    ])
8       , -205092     , array([ 0.0417441  ,  0.0587715  ,  0.00550302 ,  11.3688    ])
12      , -205091     , array([ 0.0417441  ,  0.0587715  ,  0.00550302 ,  11.3801    ])
20      , -204671     , array([ 0.0421377  ,  0.0592253  ,  0.00558148 ,  11.3829    ])
24      , -204670     , array([ 0.0421377  ,  0.0592253  ,  0.00558148 ,  11.3943    ])
28      , -203811     , array([ 0.0437413  ,  0.0628858  ,  0.00555002 ,  11.4634    ])
32      , -204705     , array([ 0.0536519  ,  0.0869727  ,  0.00558775 ,  0.94488    ])
36      , -204704     , array([ 0.0536519  ,  0.0869727  ,  0.00558775 ,  0.945825   ])
40      , -203674     , array([ 0.0448973  ,  0.0655536  ,  0.00555482 ,  8.3342     ])
44      , -203432     , array([ 0.0453326  ,  0.0664472  ,  0.00555571 ,  8.57939    ])
48      , -203430     , array([ 0.0453326  ,  0.0664472  ,  0.00555571 ,  8.58797    ])
52      , -202314     , array([ 0.0471164  ,  0.0704967  ,  0.00555925 ,  9.63441    ])
56      , -198702     , array([ 0.0549819  ,  0.0888723  ,  0.00557345 ,  15.3214    ])
60      , -198700     , array([ 0.0549819  ,  0.0888723  ,  0.00557345 ,  15.3368    ])
68      , -198701     , array([ 0.0549823  ,  0.0888734  ,  0.00557345 ,  15.3216    ])
72      , -198700     , array([ 0.0549823  ,  0.0888734  ,  0.00557345 ,  15.3369    ])
76      , -198667     , array([ 0.0549845  ,  0.0889681  ,  0.00557345 ,  15.3225    ])
88      , -198667     , array([ 0.0549846  ,  0.0889684  ,  0.00557345 ,  15.3226    ])
92      , -198700     , array([ 0.0549852  ,  0.0888809  ,  0.00557345 ,  15.3228    ])
96      , -198699     , array([ 0.0549852  ,  0.0888809  ,  0.00557345 ,  15.3381    ])
104     , -198700     , array([ 0.0549852  ,  0.088881   ,  0.00557345 ,  15.3228    ])
108     , -198699     , array([ 0.0549852  ,  0.088881   ,  0.00557345 ,  15.3381    ])
112     , -198666     , array([ 0.0549853  ,  0.0889702  ,  0.00557345 ,  15.3229    ])
116     , -197529     , array([ 0.0583071  ,  0.0976946  ,  0.00557481 ,  16.7086    ])
120     , -197528     , array([ 0.0583071  ,  0.0976946  ,  0.00557481 ,  16.7253    ])
128     , -197529     , array([ 0.0583071  ,  0.0976946  ,  0.00557481 ,  16.7086    ])
132     , -197528     , array([ 0.0583071  ,  0.0976946  ,  0.00557481 ,  16.7253    ])
136     , -197500     , array([ 0.0583071  ,  0.0977924  ,  0.00557481 ,  16.7087    ])
148     , -197500     , array([ 0.0583071  ,  0.0977925  ,  0.00557481 ,  16.7087    ])
152     , -197529     , array([ 0.0583071  ,  0.0976947  ,  0.00557481 ,  16.7087    ])
156     , -197528     , array([ 0.0583071  ,  0.0976947  ,  0.00557481 ,  16.7254    ])
164     , -197529     , array([ 0.0583071  ,  0.0976947  ,  0.00557481 ,  16.7087    ])
168     , -197528     , array([ 0.0583071  ,  0.0976947  ,  0.00557481 ,  16.7254    ])
172     , -197500     , array([ 0.0583071  ,  0.0977925  ,  0.00557481 ,  16.7087    ])
176     , -197238     , array([ 0.0589488  ,  0.0996018  ,  0.00557667 ,  17.5619    ])
180     , -197237     , array([ 0.0589488  ,  0.0996018  ,  0.00557667 ,  17.5795    ])
188     , -197238     , array([ 0.0589488  ,  0.0996018  ,  0.00557667 ,  17.5619    ])
192     , -197237     , array([ 0.0589488  ,  0.0996018  ,  0.00557667 ,  17.5795    ])
196     , -197210     , array([ 0.0589488  ,  0.0997014  ,  0.00557667 ,  17.5619    ])
208     , -197210     , array([ 0.0589488  ,  0.0997014  ,  0.00557667 ,  17.5619    ])
212     , -197238     , array([ 0.0589488  ,  0.0996018  ,  0.00557667 ,  17.5619    ])
216     , -197237     , array([ 0.0589488  ,  0.0996018  ,  0.00557667 ,  17.5795    ])
224     , -197238     , array([ 0.0589488  ,  0.0996018  ,  0.00557667 ,  17.5619    ])
228     , -197237     , array([ 0.0589488  ,  0.0996018  ,  0.00557667 ,  17.5795    ])
232     , -197179     , array([ 0.0590198  ,  0.0999137  ,  0.00557687 ,  17.6584    ])
236     , -197196     , array([ 0.0590435  ,  0.0998846  ,  0.00557694 ,  17.6907    ])
240     , -197195     , array([ 0.0590435  ,  0.0998846  ,  0.00557694 ,  17.7084    ])
248     , -197192     , array([ 0.0590545  ,  0.0999175  ,  0.00557697 ,  17.7057    ])
252     , -197191     , array([ 0.0590545  ,  0.0999175  ,  0.00557697 ,  17.7234    ])
260     , -197191     , array([ 0.0590553  ,  0.0999199  ,  0.00557697 ,  17.7068    ])
264     , -197190     , array([ 0.0590553  ,  0.0999199  ,  0.00557697 ,  17.7245    ])
272     , -197191     , array([ 0.0590554  ,  0.09992    ,  0.00557697 ,  17.7068    ])
276     , -197190     , array([ 0.0590554  ,  0.09992    ,  0.00557697 ,  17.7245    ])
284     , -197191     , array([ 0.0590554  ,  0.09992    ,  0.00557697 ,  17.7068    ])
288     , -197190     , array([ 0.0590554  ,  0.09992    ,  0.00557697 ,  17.7245    ])
296     , -197191     , array([ 0.0590554  ,  0.09992    ,  0.00557697 ,  17.7068    ])
300     , -197190     , array([ 0.0590554  ,  0.09992    ,  0.00557697 ,  17.7245    ])
308     , -197191     , array([ 0.0590554  ,  0.09992    ,  0.00557697 ,  17.7068    ])
312     , -197190     , array([ 0.0590554  ,  0.09992    ,  0.00557697 ,  17.7245    ])
320     , -197191     , array([ 0.0590554  ,  0.09992    ,  0.00557697 ,  17.7068    ])
324     , -197190     , array([ 0.0590554  ,  0.09992    ,  0.00557697 ,  17.7245    ])
332     , -197191     , array([ 0.0590554  ,  0.09992    ,  0.00557697 ,  17.7068    ])
336     , -197190     , array([ 0.0590554  ,  0.09992    ,  0.00557697 ,  17.7245    ])
344     , -197191     , array([ 0.0590554  ,  0.09992    ,  0.00557697 ,  17.7068    ])
348     , -197190     , array([ 0.0590554  ,  0.09992    ,  0.00557697 ,  17.7245    ])
356     , -197191     , array([ 0.0590554  ,  0.09992    ,  0.00557697 ,  17.7068    ])
360     , -197190     , array([ 0.0590554  ,  0.09992    ,  0.00557697 ,  17.7245    ])
368     , -197191     , array([ 0.0590554  ,  0.09992    ,  0.00557697 ,  17.7068    ])
372     , -197190     , array([ 0.0590554  ,  0.09992    ,  0.00557697 ,  17.7245    ])
376     , -197238     , array([ 0.0589488  ,  0.0996017  ,  0.00557666 ,  17.5618    ])
380     , -197215     , array([ 0.0589488  ,  0.0996017  ,  0.00558224 ,  17.5618    ])
384     , -197203     , array([ 0.0590295  ,  0.0998426  ,  0.0055769  ,  17.6715    ])
388     , -197180     , array([ 0.0590295  ,  0.0998426  ,  0.00558248 ,  17.6715    ])
392     , -197215     , array([ 0.059129   ,  0.0999633  ,  0.00557701 ,  17.7266    ])
396     , -197195     , array([ 0.0590475  ,  0.0998964  ,  0.00557695 ,  17.696     ])
Finshed optimization **************************************************
Writing out parameters **************************************************
Writing out SFS **************************************************
Making plots **************************************************
carrying out inference 38 for model 2D.5epoch.fixedN1N3.nomig for pop MN-IR
Beginning optimization ************************************************
4       , -927502     , array([ 0.00682781 ,  0.099      ,  0.019909   ,  18.8374    ])
8       , -579538     , array([ 0.015298   ,  0.0988889  ,  0.0108317  ,  18.7551    ])
12      , -579539     , array([ 0.015298   ,  0.0988889  ,  0.0108317  ,  18.7739    ])
16      , -711959     , array([ 0.385518   ,  0.0985444  ,  0.000952864,  18.4298    ])
20      , -213728     , array([ 0.0568097  ,  0.0987086  ,  0.00403165 ,  18.6222    ])
24      , -213726     , array([ 0.0568097  ,  0.0987086  ,  0.00403165 ,  18.6408    ])
40      , -213687     , array([ 0.0568097  ,  0.0988074  ,  0.00403165 ,  18.6222    ])
44      , -213728     , array([ 0.0568098  ,  0.0987088  ,  0.00403165 ,  18.6222    ])
48      , -213726     , array([ 0.0568098  ,  0.0987088  ,  0.00403165 ,  18.6408    ])
56      , -213728     , array([ 0.0568098  ,  0.0987088  ,  0.00403165 ,  18.6222    ])
60      , -213726     , array([ 0.0568098  ,  0.0987088  ,  0.00403165 ,  18.6408    ])
64      , -213686     , array([ 0.0568098  ,  0.0988076  ,  0.00403165 ,  18.6222    ])
76      , -213686     , array([ 0.0568098  ,  0.0988076  ,  0.00403165 ,  18.6222    ])
80      , -213728     , array([ 0.0568098  ,  0.0987089  ,  0.00403165 ,  18.6222    ])
84      , -213726     , array([ 0.0568098  ,  0.0987089  ,  0.00403165 ,  18.6408    ])
88      , -213256     , array([ 0.0570933  ,  0.0994522  ,  0.00404976 ,  18.626     ])
92      , -213014     , array([ 0.0572811  ,  0.0997801  ,  0.00406175 ,  18.6285    ])
96      , -213012     , array([ 0.0572811  ,  0.0997801  ,  0.00406175 ,  18.6471    ])
104     , -213014     , array([ 0.0572811  ,  0.0997801  ,  0.00406175 ,  18.6285    ])
108     , -213012     , array([ 0.0572811  ,  0.0997801  ,  0.00406175 ,  18.6471    ])
112     , -212909     , array([ 0.0573238  ,  0.0999771  ,  0.00406448 ,  18.629     ])
116     , -212928     , array([ 0.057338   ,  0.0999096  ,  0.00406539 ,  18.6292    ])
120     , -212927     , array([ 0.057338   ,  0.0999096  ,  0.00406539 ,  18.6479    ])
128     , -212918     , array([ 0.0573448  ,  0.099925   ,  0.00406582 ,  18.6293    ])
132     , -212916     , array([ 0.0573448  ,  0.099925   ,  0.00406582 ,  18.6479    ])
140     , -212918     , array([ 0.0573451  ,  0.0999257  ,  0.00406584 ,  18.6293    ])
144     , -212916     , array([ 0.0573451  ,  0.0999257  ,  0.00406584 ,  18.6479    ])
152     , -212918     , array([ 0.0573451  ,  0.0999257  ,  0.00406584 ,  18.6293    ])
156     , -212916     , array([ 0.0573451  ,  0.0999257  ,  0.00406584 ,  18.6479    ])
164     , -212918     , array([ 0.0573451  ,  0.0999258  ,  0.00406584 ,  18.6293    ])
168     , -212916     , array([ 0.0573451  ,  0.0999258  ,  0.00406584 ,  18.6479    ])
176     , -212918     , array([ 0.0573451  ,  0.0999258  ,  0.00406584 ,  18.6293    ])
180     , -212916     , array([ 0.0573451  ,  0.0999258  ,  0.00406584 ,  18.6479    ])
188     , -212918     , array([ 0.0573451  ,  0.0999258  ,  0.00406584 ,  18.6293    ])
192     , -212916     , array([ 0.0573451  ,  0.0999258  ,  0.00406584 ,  18.6479    ])
200     , -212918     , array([ 0.0573451  ,  0.0999258  ,  0.00406584 ,  18.6293    ])
204     , -212916     , array([ 0.0573451  ,  0.0999258  ,  0.00406584 ,  18.6479    ])
212     , -212918     , array([ 0.0573451  ,  0.0999258  ,  0.00406584 ,  18.6293    ])
216     , -212916     , array([ 0.0573451  ,  0.0999258  ,  0.00406584 ,  18.6479    ])
224     , -212918     , array([ 0.0573451  ,  0.0999258  ,  0.00406584 ,  18.6293    ])
228     , -212916     , array([ 0.0573451  ,  0.0999258  ,  0.00406584 ,  18.6479    ])
236     , -212918     , array([ 0.0573451  ,  0.0999258  ,  0.00406584 ,  18.6293    ])
240     , -212916     , array([ 0.0573451  ,  0.0999258  ,  0.00406584 ,  18.6479    ])
248     , -212918     , array([ 0.0573451  ,  0.0999258  ,  0.00406584 ,  18.6293    ])
252     , -212916     , array([ 0.0573451  ,  0.0999258  ,  0.00406584 ,  18.6479    ])
260     , -212918     , array([ 0.0573451  ,  0.0999258  ,  0.00406584 ,  18.6293    ])
264     , -212916     , array([ 0.0573451  ,  0.0999258  ,  0.00406584 ,  18.6479    ])
276     , -213025     , array([ 0.0572737  ,  0.0997631  ,  0.00406128 ,  18.6284    ])
280     , -212940     , array([ 0.0572737  ,  0.0997631  ,  0.00406534 ,  18.6284    ])
Finshed optimization **************************************************
Writing out parameters **************************************************
Writing out SFS **************************************************
Making plots **************************************************
carrying out inference 39 for model 2D.5epoch.fixedN1N3.nomig for pop MN-IR
Beginning optimization ************************************************
4       , -826874     , array([ 0.00634083 ,  0.099      ,  0.0110052  ,  15.8118    ])
8       , -524253     , array([ 0.0141532  ,  0.0989575  ,  0.00595773 ,  15.74      ])
12      , -524253     , array([ 0.0141532  ,  0.0989575  ,  0.00595773 ,  15.7558    ])
16      , -1.1081e+06 , array([ 0.351313   ,  0.0988865  ,  0.000513744,  15.4563    ])
20      , -252150     , array([ 0.0370544  ,  0.0989066  ,  0.0028585  ,  15.6545    ])
24      , -252148     , array([ 0.0370544  ,  0.0989066  ,  0.0028585  ,  15.6701    ])
32      , -249996     , array([ 0.0375864  ,  0.0983621  ,  0.00287877 ,  15.6579    ])
36      , -249993     , array([ 0.0375864  ,  0.0983621  ,  0.00287877 ,  15.6736    ])
40      , -238994     , array([ 0.0417334  ,  0.0945506  ,  0.00303205 ,  15.6834    ])
52      , -238993     , array([ 0.0417338  ,  0.0945519  ,  0.00303208 ,  15.6835    ])
56      , -238986     , array([ 0.0417368  ,  0.0944653  ,  0.00303224 ,  15.6835    ])
60      , -238983     , array([ 0.0417368  ,  0.0944653  ,  0.00303224 ,  15.6992    ])
68      , -238985     , array([ 0.0417369  ,  0.0944656  ,  0.00303225 ,  15.6835    ])
72      , -238983     , array([ 0.0417369  ,  0.0944656  ,  0.00303225 ,  15.6992    ])
76      , -238983     , array([ 0.0417377  ,  0.0945621  ,  0.00303229 ,  15.6835    ])
88      , -238983     , array([ 0.0417377  ,  0.0945622  ,  0.00303229 ,  15.6835    ])
92      , -238983     , array([ 0.0417379  ,  0.0944682  ,  0.0030323  ,  15.6835    ])
96      , -238980     , array([ 0.0417379  ,  0.0944682  ,  0.0030323  ,  15.6992    ])
100     , -235676     , array([ 0.0430896  ,  0.0981724  ,  0.0031075  ,  15.7026    ])
112     , -235676     , array([ 0.0430896  ,  0.0981724  ,  0.0031075  ,  15.7026    ])
116     , -235673     , array([ 0.0430896  ,  0.0980743  ,  0.0031075  ,  15.7026    ])
120     , -235671     , array([ 0.0430896  ,  0.0980743  ,  0.0031075  ,  15.7183    ])
124     , -234597     , array([ 0.0435453  ,  0.0993936  ,  0.00313272 ,  15.7089    ])
136     , -234597     , array([ 0.0435453  ,  0.0993936  ,  0.00313272 ,  15.7089    ])
140     , -234593     , array([ 0.0435453  ,  0.0992943  ,  0.00313272 ,  15.7089    ])
144     , -234591     , array([ 0.0435453  ,  0.0992943  ,  0.00313272 ,  15.7246    ])
148     , -234257     , array([ 0.0436967  ,  0.0997999  ,  0.00314108 ,  15.711     ])
152     , -234030     , array([ 0.0437969  ,  0.099969   ,  0.00314662 ,  15.7123    ])
156     , -234027     , array([ 0.0437969  ,  0.099969   ,  0.00314662 ,  15.7281    ])
160     , -234257     , array([ 0.0436967  ,  0.0997999  ,  0.00314108 ,  15.711     ])
164     , -234104     , array([ 0.0437635  ,  0.0998793  ,  0.00314477 ,  15.7119    ])
168     , -234102     , array([ 0.0437635  ,  0.0998793  ,  0.00314477 ,  15.7276    ])
176     , -234035     , array([ 0.0437945  ,  0.0999627  ,  0.00314649 ,  15.7123    ])
180     , -234032     , array([ 0.0437945  ,  0.0999627  ,  0.00314649 ,  15.728     ])
188     , -234030     , array([ 0.0437968  ,  0.0999687  ,  0.00314661 ,  15.7123    ])
192     , -234027     , array([ 0.0437968  ,  0.0999687  ,  0.00314661 ,  15.7281    ])
200     , -234030     , array([ 0.0437969  ,  0.099969   ,  0.00314662 ,  15.7123    ])
204     , -234027     , array([ 0.0437969  ,  0.099969   ,  0.00314662 ,  15.7281    ])
212     , -234030     , array([ 0.0437969  ,  0.099969   ,  0.00314662 ,  15.7123    ])
216     , -234027     , array([ 0.0437969  ,  0.099969   ,  0.00314662 ,  15.7281    ])
224     , -234030     , array([ 0.0437969  ,  0.099969   ,  0.00314662 ,  15.7123    ])
228     , -234027     , array([ 0.0437969  ,  0.099969   ,  0.00314662 ,  15.7281    ])
236     , -234030     , array([ 0.0437969  ,  0.099969   ,  0.00314662 ,  15.7123    ])
240     , -234027     , array([ 0.0437969  ,  0.099969   ,  0.00314662 ,  15.7281    ])
248     , -234030     , array([ 0.0437969  ,  0.099969   ,  0.00314662 ,  15.7123    ])
252     , -234027     , array([ 0.0437969  ,  0.099969   ,  0.00314662 ,  15.7281    ])
260     , -234030     , array([ 0.0437969  ,  0.099969   ,  0.00314662 ,  15.7123    ])
264     , -234027     , array([ 0.0437969  ,  0.099969   ,  0.00314662 ,  15.7281    ])
272     , -234030     , array([ 0.0437969  ,  0.099969   ,  0.00314662 ,  15.7123    ])
276     , -234027     , array([ 0.0437969  ,  0.099969   ,  0.00314662 ,  15.7281    ])
284     , -234030     , array([ 0.0437969  ,  0.099969   ,  0.00314662 ,  15.7123    ])
288     , -234027     , array([ 0.0437969  ,  0.099969   ,  0.00314662 ,  15.7281    ])
296     , -234030     , array([ 0.0437969  ,  0.099969   ,  0.00314662 ,  15.7123    ])
300     , -234027     , array([ 0.0437969  ,  0.099969   ,  0.00314662 ,  15.7281    ])
304     , -235683     , array([ 0.0430857  ,  0.0980638  ,  0.00310728 ,  15.7025    ])
308     , -235549     , array([ 0.0430857  ,  0.0980638  ,  0.00311039 ,  15.7025    ])
312     , -234070     , array([ 0.0438221  ,  0.099919   ,  0.00314559 ,  15.7121    ])
316     , -234991     , array([ 0.0433779  ,  0.0988459  ,  0.00312346 ,  15.7066    ])
320     , -234102     , array([ 0.0437647  ,  0.0998826  ,  0.00314484 ,  15.7119    ])
Finshed optimization **************************************************
Writing out parameters **************************************************
Writing out SFS **************************************************
Making plots **************************************************
carrying out inference 40 for model 2D.5epoch.fixedN1N3.nomig for pop MN-IR
Beginning optimization ************************************************
4       , -637953     , array([ 0.0153757  ,  0.099      ,  0.0154975  ,  10.379     ])
8       , -212420     , array([ 0.0361464  ,  0.0667368  ,  0.0107376  ,  10.3416    ])
12      , -212419     , array([ 0.0361464  ,  0.0667368  ,  0.0107376  ,  10.3519    ])
20      , -211192     , array([ 0.035783   ,  0.0663433  ,  0.0104782  ,  10.346     ])
24      , -211192     , array([ 0.035783   ,  0.0663433  ,  0.0104782  ,  10.3564    ])
28      , -207742     , array([ 0.0347109  ,  0.0652381  ,  0.00973448 ,  10.3595    ])
40      , -207493     , array([ 0.0346323  ,  0.0651515  ,  0.00968117 ,  10.3605    ])
44      , -729582     , array([ 0.0118321  ,  0.0347174  ,  0.000719525,  10.8483    ])
48      , -729569     , array([ 0.0118321  ,  0.0347174  ,  0.000719525,  10.8591    ])
52      , -197241     , array([ 0.0306336  ,  0.0606379  ,  0.00719395 ,  10.4151    ])
56      , -239043     , array([ 0.0107878  ,  0.00382219 ,  0.0102581  ,  16.1201    ])
60      , -239042     , array([ 0.0107878  ,  0.00382219 ,  0.0102581  ,  16.1362    ])
64      , -197039     , array([ 0.0279756  ,  0.0476852  ,  0.00741941 ,  10.8184    ])
68      , -196742     , array([ 0.0279802  ,  0.0476565  ,  0.00738699 ,  13.6897    ])
72      , -196741     , array([ 0.0279802  ,  0.0476565  ,  0.00738699 ,  13.7034    ])
76      , -196138     , array([ 0.0281903  ,  0.0487555  ,  0.00729369 ,  18.1918    ])
88      , -196138     , array([ 0.0281903  ,  0.0487555  ,  0.00729369 ,  18.1919    ])
92      , -196145     , array([ 0.0281903  ,  0.0487069  ,  0.00729368 ,  18.1923    ])
96      , -196144     , array([ 0.0281903  ,  0.0487069  ,  0.00729368 ,  18.2105    ])
104     , -196145     , array([ 0.0281903  ,  0.0487069  ,  0.00729368 ,  18.1923    ])
108     , -196144     , array([ 0.0281903  ,  0.0487069  ,  0.00729368 ,  18.2105    ])
112     , -196138     , array([ 0.0281903  ,  0.0487556  ,  0.00729368 ,  18.1924    ])
116     , -195622     , array([ 0.0284019  ,  0.0497802  ,  0.00720156 ,  24.1751    ])
120     , -195621     , array([ 0.0284019  ,  0.0497802  ,  0.00720156 ,  24.1993    ])
124     , -194021     , array([ 0.0283556  ,  0.0528543  ,  0.00655805 ,  29.2292    ])
136     , -194021     , array([ 0.0283556  ,  0.0528543  ,  0.00655805 ,  29.2293    ])
148     , -194021     , array([ 0.0283556  ,  0.0528543  ,  0.00655805 ,  29.2293    ])
160     , -194021     , array([ 0.0283556  ,  0.0528543  ,  0.00655805 ,  29.2293    ])
172     , -194021     , array([ 0.0283556  ,  0.0528543  ,  0.00655805 ,  29.2294    ])
184     , -194021     , array([ 0.0283556  ,  0.0528543  ,  0.00655805 ,  29.2294    ])
196     , -194021     , array([ 0.0283556  ,  0.0528543  ,  0.00655805 ,  29.2294    ])
200     , -194019     , array([ 0.0283556  ,  0.0528015  ,  0.00655805 ,  29.2294    ])
204     , -194018     , array([ 0.0283556  ,  0.0528015  ,  0.00655805 ,  29.2586    ])
212     , -194019     , array([ 0.0283556  ,  0.0528015  ,  0.00655805 ,  29.2294    ])
216     , -194018     , array([ 0.0283556  ,  0.0528015  ,  0.00655805 ,  29.2586    ])
224     , -194019     , array([ 0.0283556  ,  0.0528015  ,  0.00655805 ,  29.2294    ])
228     , -194018     , array([ 0.0283556  ,  0.0528015  ,  0.00655805 ,  29.2586    ])
232     , -194021     , array([ 0.0283556  ,  0.0528543  ,  0.00655805 ,  29.2294    ])
244     , -194021     , array([ 0.0283556  ,  0.0528543  ,  0.00655805 ,  29.2294    ])
248     , -194019     , array([ 0.0283556  ,  0.0528015  ,  0.00655805 ,  29.2294    ])
252     , -194018     , array([ 0.0283556  ,  0.0528015  ,  0.00655805 ,  29.2586    ])
256     , -194004     , array([ 0.02835    ,  0.0528542  ,  0.00655179 ,  29.6365    ])
260     , -193990     , array([ 0.0283463  ,  0.0528013  ,  0.00654767 ,  29.9083    ])
264     , -193989     , array([ 0.0283463  ,  0.0528013  ,  0.00654767 ,  29.9383    ])
272     , -193990     , array([ 0.0283463  ,  0.0528013  ,  0.00654767 ,  29.9083    ])
276     , -193989     , array([ 0.0283463  ,  0.0528013  ,  0.00654767 ,  29.9383    ])
280     , -193992     , array([ 0.028346   ,  0.0528541  ,  0.00654741 ,  29.9253    ])
284     , -193988     , array([ 0.0283455  ,  0.0528013  ,  0.00654684 ,  29.9633    ])
288     , -193987     , array([ 0.0283455  ,  0.0528013  ,  0.00654684 ,  29.9933    ])
292     , -193989     , array([ 0.0283452  ,  0.0528541  ,  0.00654646 ,  29.9884    ])
296     , -193988     , array([ 0.0283455  ,  0.0528013  ,  0.00654684 ,  29.9633    ])
300     , -193987     , array([ 0.0283455  ,  0.0528013  ,  0.00654684 ,  29.9933    ])
304     , -193990     , array([ 0.0283453  ,  0.0528541  ,  0.00654658 ,  29.98      ])
308     , -193987     , array([ 0.0283452  ,  0.0528013  ,  0.00654648 ,  29.9866    ])
316     , -193989     , array([ 0.0283452  ,  0.0528541  ,  0.00654646 ,  29.988     ])
320     , -193987     , array([ 0.0283452  ,  0.0528013  ,  0.00654646 ,  29.9883    ])
328     , -193989     , array([ 0.0283452  ,  0.0528541  ,  0.00654646 ,  29.9884    ])
332     , -193987     , array([ 0.0283452  ,  0.0528013  ,  0.00654646 ,  29.9884    ])
340     , -193989     , array([ 0.0283452  ,  0.0528541  ,  0.00654646 ,  29.9884    ])
344     , -193987     , array([ 0.0283452  ,  0.0528013  ,  0.00654646 ,  29.9884    ])
352     , -193989     , array([ 0.0283452  ,  0.0528541  ,  0.00654646 ,  29.9884    ])
356     , -193987     , array([ 0.0283452  ,  0.0528013  ,  0.00654646 ,  29.9884    ])
364     , -193989     , array([ 0.0283452  ,  0.0528541  ,  0.00654646 ,  29.9884    ])
368     , -193987     , array([ 0.0283452  ,  0.0528013  ,  0.00654646 ,  29.9884    ])
376     , -193989     , array([ 0.0283452  ,  0.0528541  ,  0.00654646 ,  29.9884    ])
380     , -193987     , array([ 0.0283452  ,  0.0528013  ,  0.00654646 ,  29.9884    ])
388     , -193989     , array([ 0.0283452  ,  0.0528541  ,  0.00654646 ,  29.9884    ])
392     , -193987     , array([ 0.0283452  ,  0.0528013  ,  0.00654646 ,  29.9884    ])
400     , -193989     , array([ 0.0283452  ,  0.0528541  ,  0.00654646 ,  29.9884    ])
404     , -193987     , array([ 0.0283452  ,  0.0528013  ,  0.00654646 ,  29.9884    ])
412     , -193989     , array([ 0.0283452  ,  0.0528541  ,  0.00654646 ,  29.9884    ])
416     , -193987     , array([ 0.0283452  ,  0.0528013  ,  0.00654646 ,  29.9884    ])
424     , -193989     , array([ 0.0283452  ,  0.0528541  ,  0.00654646 ,  29.9884    ])
428     , -193987     , array([ 0.0283452  ,  0.0528013  ,  0.00654646 ,  29.9884    ])
436     , -193989     , array([ 0.0283452  ,  0.0528541  ,  0.00654646 ,  29.9884    ])
440     , -193987     , array([ 0.0283452  ,  0.0528013  ,  0.00654646 ,  29.9884    ])
448     , -193989     , array([ 0.0283452  ,  0.0528541  ,  0.00654646 ,  29.9884    ])
460     , -193995     , array([ 0.0283471  ,  0.0528541  ,  0.00654859 ,  29.8471    ])
468     , -193992     , array([ 0.0283461  ,  0.0528541  ,  0.00654741 ,  29.9253    ])
472     , -193988     , array([ 0.0283455  ,  0.0528013  ,  0.00654682 ,  29.9644    ])
476     , -193987     , array([ 0.0283455  ,  0.0528013  ,  0.00654682 ,  29.9944    ])
480     , -193989     , array([ 0.0283453  ,  0.0528541  ,  0.00654652 ,  29.984     ])
Finshed optimization **************************************************
Writing out parameters **************************************************
Writing out SFS **************************************************
Making plots **************************************************
carrying out inference 41 for model 2D.5epoch.fixedN1N3.nomig for pop MN-IR
Beginning optimization ************************************************
4       , -404366     , array([ 0.0191548  ,  0.099      ,  0.00526751 ,  11.3359    ])
8       , -219490     , array([ 0.0440124  ,  0.0567467  ,  0.00459653 ,  11.3387    ])
12      , -219488     , array([ 0.0440124  ,  0.0567467  ,  0.00459653 ,  11.3501    ])
20      , -219258     , array([ 0.0440796  ,  0.0567689  ,  0.00461596 ,  11.3406    ])
24      , -219255     , array([ 0.0440796  ,  0.0567689  ,  0.00461596 ,  11.3519    ])
32      , -219157     , array([ 0.0441089  ,  0.0567786  ,  0.00462444 ,  11.3414    ])
36      , -219154     , array([ 0.0441089  ,  0.0567786  ,  0.00462444 ,  11.3528    ])
40      , -218997     , array([ 0.0441383  ,  0.0568451  ,  0.00463294 ,  11.3422    ])
44      , -276215     , array([ 0.0990832  ,  0.0698755  ,  0.0432441  ,  12.3777    ])
48      , -276215     , array([ 0.0990832  ,  0.0698755  ,  0.0432441  ,  12.3901    ])
52      , -209739     , array([ 0.0522938  ,  0.0593715  ,  0.00740044 ,  11.5519    ])
64      , -209738     , array([ 0.0522957  ,  0.0593745  ,  0.00740041 ,  11.552     ])
68      , -209780     , array([ 0.052298   ,  0.059319   ,  0.00740037 ,  11.552     ])
72      , -209779     , array([ 0.052298   ,  0.059319   ,  0.00740037 ,  11.5636    ])
80      , -209780     , array([ 0.0522985  ,  0.0593198  ,  0.00740036 ,  11.5521    ])
84      , -209778     , array([ 0.0522985  ,  0.0593198  ,  0.00740036 ,  11.5636    ])
88      , -209737     , array([ 0.0522991  ,  0.0593801  ,  0.00740035 ,  11.5521    ])
92      , -204565     , array([ 0.0681442  ,  0.0871789  ,  0.00717125 ,  11.9947    ])
96      , -204564     , array([ 0.0681442  ,  0.0871789  ,  0.00717125 ,  12.0067    ])
104     , -204565     , array([ 0.0681443  ,  0.087179   ,  0.00717125 ,  11.9947    ])
108     , -204564     , array([ 0.0681443  ,  0.087179   ,  0.00717125 ,  12.0067    ])
112     , -204527     , array([ 0.0681444  ,  0.0872663  ,  0.00717124 ,  11.9947    ])
116     , -203052     , array([ 0.0743632  ,  0.0989896  ,  0.00709721 ,  12.1445    ])
120     , -203051     , array([ 0.0743632  ,  0.0989896  ,  0.00709721 ,  12.1567    ])
128     , -203052     , array([ 0.0743632  ,  0.0989896  ,  0.00709721 ,  12.1445    ])
132     , -203051     , array([ 0.0743632  ,  0.0989896  ,  0.00709721 ,  12.1567    ])
136     , -203016     , array([ 0.0743632  ,  0.0990887  ,  0.00709721 ,  12.1445    ])
148     , -203016     , array([ 0.0743632  ,  0.0990887  ,  0.00709721 ,  12.1445    ])
152     , -203052     , array([ 0.0743632  ,  0.0989896  ,  0.00709721 ,  12.1445    ])
156     , -203051     , array([ 0.0743632  ,  0.0989896  ,  0.00709721 ,  12.1567    ])
164     , -203052     , array([ 0.0743632  ,  0.0989896  ,  0.00709721 ,  12.1445    ])
168     , -203051     , array([ 0.0743632  ,  0.0989896  ,  0.00709721 ,  12.1567    ])
172     , -203016     , array([ 0.0743632  ,  0.0990887  ,  0.00709721 ,  12.1445    ])
184     , -203016     , array([ 0.0743632  ,  0.0990887  ,  0.00709721 ,  12.1445    ])
188     , -203052     , array([ 0.0743632  ,  0.0989896  ,  0.00709721 ,  12.1445    ])
192     , -203051     , array([ 0.0743632  ,  0.0989896  ,  0.00709721 ,  12.1567    ])
196     , -202955     , array([ 0.0746316  ,  0.0996093  ,  0.00709417 ,  12.1507    ])
200     , -202951     , array([ 0.0748093  ,  0.0998546  ,  0.00709217 ,  12.1548    ])
204     , -202950     , array([ 0.0748093  ,  0.0998546  ,  0.00709217 ,  12.167     ])
212     , -202951     , array([ 0.0748093  ,  0.0998546  ,  0.00709217 ,  12.1548    ])
216     , -202950     , array([ 0.0748093  ,  0.0998546  ,  0.00709217 ,  12.167     ])
224     , -202939     , array([ 0.0748655  ,  0.0999638  ,  0.00709153 ,  12.1561    ])
228     , -202938     , array([ 0.0748655  ,  0.0999638  ,  0.00709153 ,  12.1683    ])
236     , -202938     , array([ 0.0748696  ,  0.0999717  ,  0.00709149 ,  12.1562    ])
240     , -202937     , array([ 0.0748696  ,  0.0999717  ,  0.00709149 ,  12.1684    ])
248     , -202938     , array([ 0.0748698  ,  0.099972   ,  0.00709148 ,  12.1562    ])
252     , -202937     , array([ 0.0748698  ,  0.099972   ,  0.00709148 ,  12.1684    ])
260     , -202938     , array([ 0.0748698  ,  0.0999721  ,  0.00709148 ,  12.1562    ])
264     , -202937     , array([ 0.0748698  ,  0.0999721  ,  0.00709148 ,  12.1684    ])
272     , -202938     , array([ 0.0748698  ,  0.0999721  ,  0.00709148 ,  12.1562    ])
276     , -202937     , array([ 0.0748698  ,  0.0999721  ,  0.00709148 ,  12.1684    ])
284     , -202938     , array([ 0.0748698  ,  0.0999721  ,  0.00709148 ,  12.1562    ])
288     , -202937     , array([ 0.0748698  ,  0.0999721  ,  0.00709148 ,  12.1684    ])
296     , -202938     , array([ 0.0748698  ,  0.0999721  ,  0.00709148 ,  12.1562    ])
300     , -202937     , array([ 0.0748698  ,  0.0999721  ,  0.00709148 ,  12.1684    ])
308     , -202938     , array([ 0.0748698  ,  0.0999721  ,  0.00709148 ,  12.1562    ])
312     , -202937     , array([ 0.0748698  ,  0.0999721  ,  0.00709148 ,  12.1684    ])
320     , -202938     , array([ 0.0748698  ,  0.0999721  ,  0.00709148 ,  12.1562    ])
324     , -202937     , array([ 0.0748698  ,  0.0999721  ,  0.00709148 ,  12.1684    ])
336     , -204528     , array([ 0.0681395  ,  0.0872572  ,  0.00717131 ,  11.9946    ])
340     , -203413     , array([ 0.0728007  ,  0.0959783  ,  0.00711514 ,  12.1079    ])
344     , -203411     , array([ 0.0728007  ,  0.0959783  ,  0.00712226 ,  12.1079    ])
348     , -203131     , array([ 0.0740151  ,  0.0983161  ,  0.00710117 ,  12.1364    ])
352     , -203130     , array([ 0.0740151  ,  0.0983161  ,  0.00710117 ,  12.1486    ])
356     , -202955     , array([ 0.0746298  ,  0.0996058  ,  0.00709419 ,  12.1507    ])
360     , -202957     , array([ 0.0747843  ,  0.099806   ,  0.00709245 ,  12.1543    ])
364     , -202956     , array([ 0.0747843  ,  0.099806   ,  0.00709954 ,  12.1543    ])
372     , -202957     , array([ 0.0747853  ,  0.099808   ,  0.00709242 ,  12.1552    ])
376     , -202956     , array([ 0.0747853  ,  0.099808   ,  0.00709952 ,  12.1552    ])
380     , -202991     , array([ 0.0748655  ,  0.0998186  ,  0.0070923  ,  12.1602    ])
392     , -202991     , array([ 0.0748658  ,  0.0998191  ,  0.0070923  ,  12.1605    ])
396     , -202954     , array([ 0.0747923  ,  0.0998217  ,  0.00709226 ,  12.1617    ])
400     , -202954     , array([ 0.0747923  ,  0.0998217  ,  0.00709936 ,  12.1617    ])
408     , -202954     , array([ 0.0747923  ,  0.0998219  ,  0.00709226 ,  12.1618    ])
412     , -202953     , array([ 0.0747923  ,  0.0998219  ,  0.00709936 ,  12.1618    ])
416     , -202990     , array([ 0.0748675  ,  0.0998225  ,  0.00709226 ,  12.1621    ])
428     , -202990     , array([ 0.0748675  ,  0.0998226  ,  0.00709225 ,  12.1621    ])
432     , -202954     , array([ 0.0747928  ,  0.0998227  ,  0.00709225 ,  12.1622    ])
436     , -202953     , array([ 0.0747928  ,  0.0998227  ,  0.00709935 ,  12.1622    ])
444     , -202954     , array([ 0.0747928  ,  0.0998227  ,  0.00709225 ,  12.1622    ])
448     , -202953     , array([ 0.0747928  ,  0.0998227  ,  0.00709935 ,  12.1622    ])
452     , -202990     , array([ 0.0748676  ,  0.0998228  ,  0.00709225 ,  12.1622    ])
464     , -202990     , array([ 0.0748676  ,  0.0998228  ,  0.00709225 ,  12.1622    ])
468     , -202954     , array([ 0.0747928  ,  0.0998228  ,  0.00709225 ,  12.1622    ])
472     , -202953     , array([ 0.0747928  ,  0.0998228  ,  0.00709935 ,  12.1622    ])
480     , -202954     , array([ 0.0747928  ,  0.0998228  ,  0.00709225 ,  12.1622    ])
484     , -202953     , array([ 0.0747928  ,  0.0998228  ,  0.00709935 ,  12.1622    ])
488     , -202990     , array([ 0.0748676  ,  0.0998228  ,  0.00709225 ,  12.1622    ])
500     , -202990     , array([ 0.0748676  ,  0.0998228  ,  0.00709225 ,  12.1622    ])
504     , -202954     , array([ 0.0747928  ,  0.0998228  ,  0.00709225 ,  12.1622    ])
508     , -202953     , array([ 0.0747928  ,  0.0998228  ,  0.00709935 ,  12.1622    ])
516     , -202954     , array([ 0.0747928  ,  0.0998228  ,  0.00709225 ,  12.1622    ])
520     , -202953     , array([ 0.0747928  ,  0.0998228  ,  0.00709935 ,  12.1622    ])
524     , -202990     , array([ 0.0748676  ,  0.0998228  ,  0.00709225 ,  12.1622    ])
528     , -202927     , array([ 0.0748789  ,  0.0999916  ,  0.00709029 ,  12.243     ])
532     , -202926     , array([ 0.0748789  ,  0.0999916  ,  0.00709738 ,  12.243     ])
536     , -202990     , array([ 0.0748676  ,  0.0998228  ,  0.00709225 ,  12.1622    ])
540     , -202936     , array([ 0.0748502  ,  0.0999353  ,  0.00709094 ,  12.216     ])
544     , -202935     , array([ 0.0748502  ,  0.0999353  ,  0.00709804 ,  12.216     ])
548     , -202965     , array([ 0.0749477  ,  0.0999797  ,  0.00709043 ,  12.2373    ])
552     , -202928     , array([ 0.0748776  ,  0.0999891  ,  0.00709032 ,  12.2418    ])
556     , -202927     , array([ 0.0748776  ,  0.0999891  ,  0.00709741 ,  12.2418    ])
560     , -202963     , array([ 0.0749535  ,  0.0999911  ,  0.00709029 ,  12.2427    ])
564     , -202927     , array([ 0.0748788  ,  0.0999915  ,  0.00709029 ,  12.2429    ])
568     , -202926     , array([ 0.0748788  ,  0.0999915  ,  0.00709738 ,  12.2429    ])
572     , -202963     , array([ 0.0749538  ,  0.0999916  ,  0.00709029 ,  12.243     ])
576     , -202927     , array([ 0.0748789  ,  0.0999916  ,  0.00709029 ,  12.243     ])
580     , -202926     , array([ 0.0748789  ,  0.0999916  ,  0.00709738 ,  12.243     ])
584     , -202963     , array([ 0.0749538  ,  0.0999916  ,  0.00709029 ,  12.243     ])
588     , -202927     , array([ 0.0748789  ,  0.0999916  ,  0.00709029 ,  12.243     ])
592     , -202926     , array([ 0.0748789  ,  0.0999916  ,  0.00709738 ,  12.243     ])
596     , -202963     , array([ 0.0749538  ,  0.0999916  ,  0.00709029 ,  12.243     ])
600     , -202927     , array([ 0.0748789  ,  0.0999916  ,  0.00709029 ,  12.243     ])
604     , -202926     , array([ 0.0748789  ,  0.0999916  ,  0.00709738 ,  12.243     ])
608     , -202963     , array([ 0.0749538  ,  0.0999916  ,  0.00709029 ,  12.243     ])
612     , -202927     , array([ 0.0748789  ,  0.0999916  ,  0.00709029 ,  12.243     ])
616     , -202926     , array([ 0.0748789  ,  0.0999916  ,  0.00709738 ,  12.243     ])
620     , -202963     , array([ 0.0749538  ,  0.0999916  ,  0.00709029 ,  12.243     ])
624     , -202927     , array([ 0.0748789  ,  0.0999916  ,  0.00709029 ,  12.243     ])
628     , -202926     , array([ 0.0748789  ,  0.0999916  ,  0.00709738 ,  12.243     ])
632     , -202963     , array([ 0.0749538  ,  0.0999916  ,  0.00709029 ,  12.243     ])
636     , -202927     , array([ 0.0748789  ,  0.0999916  ,  0.00709029 ,  12.243     ])
640     , -202926     , array([ 0.0748789  ,  0.0999916  ,  0.00709738 ,  12.243     ])
644     , -202963     , array([ 0.0749538  ,  0.0999916  ,  0.00709029 ,  12.243     ])
648     , -202927     , array([ 0.0748789  ,  0.0999916  ,  0.00709029 ,  12.243     ])
652     , -202926     , array([ 0.0748789  ,  0.0999916  ,  0.00709738 ,  12.243     ])
656     , -202963     , array([ 0.0749538  ,  0.0999916  ,  0.00709029 ,  12.243     ])
660     , -202927     , array([ 0.0748789  ,  0.0999916  ,  0.00709029 ,  12.243     ])
664     , -202926     , array([ 0.0748789  ,  0.0999916  ,  0.00709738 ,  12.243     ])
668     , -202963     , array([ 0.0749538  ,  0.0999916  ,  0.00709029 ,  12.243     ])
672     , -202927     , array([ 0.0748789  ,  0.0999916  ,  0.00709029 ,  12.243     ])
676     , -202926     , array([ 0.0748789  ,  0.0999916  ,  0.00709738 ,  12.243     ])
680     , -202963     , array([ 0.0749538  ,  0.0999916  ,  0.00709029 ,  12.243     ])
684     , -202927     , array([ 0.0748789  ,  0.0999916  ,  0.00709029 ,  12.243     ])
688     , -202926     , array([ 0.0748789  ,  0.0999916  ,  0.00709738 ,  12.243     ])
692     , -202963     , array([ 0.0749538  ,  0.0999916  ,  0.00709029 ,  12.243     ])
696     , -202927     , array([ 0.0748789  ,  0.0999916  ,  0.00709029 ,  12.243     ])
700     , -202926     , array([ 0.0748789  ,  0.0999916  ,  0.00709738 ,  12.243     ])
704     , -202963     , array([ 0.0749538  ,  0.0999916  ,  0.00709029 ,  12.243     ])
708     , -202927     , array([ 0.0748789  ,  0.0999916  ,  0.00709029 ,  12.243     ])
712     , -202926     , array([ 0.0748789  ,  0.0999916  ,  0.00709738 ,  12.243     ])
716     , -202963     , array([ 0.0749538  ,  0.0999916  ,  0.00709029 ,  12.243     ])
736     , -202936     , array([ 0.0748504  ,  0.0999358  ,  0.00709094 ,  12.2162    ])
Finshed optimization **************************************************
Writing out parameters **************************************************
Writing out SFS **************************************************
Making plots **************************************************
carrying out inference 42 for model 2D.5epoch.fixedN1N3.nomig for pop MN-IR
Beginning optimization ************************************************
4       , -583954     , array([ 0.0112191  ,  0.0537491  ,  0.0154877  ,  9.93959    ])
8       , -222840     , array([ 0.0241784  ,  0.0286768  ,  0.012804   ,  9.92039    ])
12      , -222839     , array([ 0.0241784  ,  0.0286768  ,  0.012804   ,  9.93032    ])
20      , -221955     , array([ 0.0241548  ,  0.0287558  ,  0.0125691  ,  9.92257    ])
24      , -221955     , array([ 0.0241548  ,  0.0287558  ,  0.0125691  ,  9.9325     ])
28      , -662299     , array([ 0.0209213  ,  0.043161   ,  0.000824861,  10.2482    ])
32      , -206525     , array([ 0.0236415  ,  0.0305505  ,  0.00836597 ,  9.97057    ])
36      , -206524     , array([ 0.0236415  ,  0.0305505  ,  0.00836597 ,  9.98054    ])
44      , -206523     , array([ 0.0236451  ,  0.0305563  ,  0.00836581 ,  9.97108    ])
48      , -206522     , array([ 0.0236451  ,  0.0305563  ,  0.00836581 ,  9.98105    ])
52      , -206443     , array([ 0.0237335  ,  0.0307281  ,  0.00836208 ,  9.98358    ])
64      , -206442     , array([ 0.0237344  ,  0.0307295  ,  0.00836204 ,  9.98371    ])
68      , -206477     , array([ 0.0237377  ,  0.0307041  ,  0.0083619  ,  9.98418    ])
72      , -206476     , array([ 0.0237377  ,  0.0307041  ,  0.0083619  ,  9.99417    ])
76      , -199410     , array([ 0.0474786  ,  0.0723691  ,  0.00769639 ,  12.6041    ])
88      , -199409     , array([ 0.0474776  ,  0.0723672  ,  0.00769635 ,  12.609     ])
100     , -199409     , array([ 0.0474776  ,  0.0723672  ,  0.00769635 ,  12.609     ])
112     , -199409     , array([ 0.0474776  ,  0.0723672  ,  0.00769635 ,  12.6091    ])
116     , -199032     , array([ 0.0458353  ,  0.0692378  ,  0.00762511 ,  23.7484    ])
120     , -199031     , array([ 0.0458353  ,  0.0692378  ,  0.00762511 ,  23.7722    ])
124     , -198205     , array([ 0.04923    ,  0.0759837  ,  0.0074782  ,  23.2936    ])
136     , -198205     , array([ 0.0492301  ,  0.0759838  ,  0.0074782  ,  23.2936    ])
140     , -198229     , array([ 0.0492303  ,  0.0759083  ,  0.00747819 ,  23.2935    ])
144     , -198229     , array([ 0.0492303  ,  0.0759083  ,  0.00747819 ,  23.3168    ])
148     , -196820     , array([ 0.0567924  ,  0.0913288  ,  0.00719282 ,  22.4098    ])
160     , -196820     , array([ 0.0567925  ,  0.0913292  ,  0.00719281 ,  22.4099    ])
164     , -196841     , array([ 0.0567927  ,  0.0912382  ,  0.0071928  ,  22.41      ])
168     , -196840     , array([ 0.0567927  ,  0.0912382  ,  0.0071928  ,  22.4325    ])
176     , -196841     , array([ 0.0567927  ,  0.0912383  ,  0.0071928  ,  22.4101    ])
180     , -196840     , array([ 0.0567927  ,  0.0912383  ,  0.0071928  ,  22.4325    ])
184     , -196820     , array([ 0.0567927  ,  0.0913296  ,  0.0071928  ,  22.4101    ])
196     , -196820     , array([ 0.0567928  ,  0.0913297  ,  0.0071928  ,  22.4101    ])
200     , -196841     , array([ 0.0567928  ,  0.0912384  ,  0.0071928  ,  22.4101    ])
204     , -196840     , array([ 0.0567928  ,  0.0912384  ,  0.0071928  ,  22.4325    ])
208     , -196305     , array([ 0.0593502  ,  0.0969119  ,  0.00707944 ,  24.512     ])
220     , -196305     , array([ 0.0593502  ,  0.096912   ,  0.00707944 ,  24.512     ])
224     , -196325     , array([ 0.0593502  ,  0.0968151  ,  0.00707944 ,  24.512     ])
228     , -196325     , array([ 0.0593502  ,  0.0968151  ,  0.00707944 ,  24.5366    ])
236     , -196325     , array([ 0.0593502  ,  0.0968151  ,  0.00707944 ,  24.512     ])
240     , -196325     , array([ 0.0593502  ,  0.0968151  ,  0.00707944 ,  24.5366    ])
244     , -196305     , array([ 0.0593502  ,  0.096912   ,  0.00707944 ,  24.512     ])
256     , -196305     , array([ 0.0593502  ,  0.096912   ,  0.00707944 ,  24.512     ])
260     , -196325     , array([ 0.0593502  ,  0.0968152  ,  0.00707944 ,  24.512     ])
264     , -196325     , array([ 0.0593502  ,  0.0968152  ,  0.00707944 ,  24.5366    ])
268     , -196175     , array([ 0.0603414  ,  0.0990057  ,  0.00706854 ,  25.6705    ])
280     , -196175     , array([ 0.0603414  ,  0.0990057  ,  0.00706854 ,  25.6705    ])
284     , -196195     , array([ 0.0603414  ,  0.0989067  ,  0.00706854 ,  25.6705    ])
288     , -196194     , array([ 0.0603414  ,  0.0989067  ,  0.00706854 ,  25.6962    ])
292     , -196133     , array([ 0.0606722  ,  0.0997065  ,  0.00706495 ,  26.0647    ])
304     , -196133     , array([ 0.0606722  ,  0.0997065  ,  0.00706495 ,  26.0647    ])
308     , -196153     , array([ 0.0606722  ,  0.0996068  ,  0.00706495 ,  26.0647    ])
312     , -196152     , array([ 0.0606722  ,  0.0996068  ,  0.00706495 ,  26.0907    ])
316     , -196119     , array([ 0.0607817  ,  0.0999388  ,  0.00706377 ,  26.1961    ])
320     , -196130     , array([ 0.0608541  ,  0.0999925  ,  0.00706299 ,  26.2831    ])
324     , -196129     , array([ 0.0608541  ,  0.0999925  ,  0.00706299 ,  26.3094    ])
328     , -196119     , array([ 0.0607817  ,  0.0999388  ,  0.00706377 ,  26.1961    ])
332     , -196133     , array([ 0.06083    ,  0.0999413  ,  0.00706325 ,  26.2541    ])
336     , -196132     , array([ 0.06083    ,  0.0999413  ,  0.00706325 ,  26.2804    ])
344     , -196130     , array([ 0.060853   ,  0.0999902  ,  0.007063   ,  26.2819    ])
348     , -196129     , array([ 0.060853   ,  0.0999902  ,  0.007063   ,  26.3081    ])
356     , -196130     , array([ 0.0608541  ,  0.0999923  ,  0.00706299 ,  26.2831    ])
360     , -196129     , array([ 0.0608541  ,  0.0999923  ,  0.00706299 ,  26.3094    ])
368     , -196130     , array([ 0.0608541  ,  0.0999924  ,  0.00706299 ,  26.2831    ])
372     , -196129     , array([ 0.0608541  ,  0.0999924  ,  0.00706299 ,  26.3094    ])
380     , -196130     , array([ 0.0608541  ,  0.0999925  ,  0.00706299 ,  26.2831    ])
384     , -196129     , array([ 0.0608541  ,  0.0999925  ,  0.00706299 ,  26.3094    ])
392     , -196130     , array([ 0.0608541  ,  0.0999925  ,  0.00706299 ,  26.2831    ])
396     , -196129     , array([ 0.0608541  ,  0.0999925  ,  0.00706299 ,  26.3094    ])
404     , -196130     , array([ 0.0608541  ,  0.0999925  ,  0.00706299 ,  26.2831    ])
408     , -196129     , array([ 0.0608541  ,  0.0999925  ,  0.00706299 ,  26.3094    ])
416     , -196130     , array([ 0.0608541  ,  0.0999925  ,  0.00706299 ,  26.2831    ])
420     , -196129     , array([ 0.0608541  ,  0.0999925  ,  0.00706299 ,  26.3094    ])
428     , -196130     , array([ 0.0608541  ,  0.0999925  ,  0.00706299 ,  26.2831    ])
432     , -196129     , array([ 0.0608541  ,  0.0999925  ,  0.00706299 ,  26.3094    ])
440     , -196130     , array([ 0.0608541  ,  0.0999925  ,  0.00706299 ,  26.2831    ])
444     , -196129     , array([ 0.0608541  ,  0.0999925  ,  0.00706299 ,  26.3094    ])
452     , -196130     , array([ 0.0608541  ,  0.0999925  ,  0.00706299 ,  26.2831    ])
456     , -196129     , array([ 0.0608541  ,  0.0999925  ,  0.00706299 ,  26.3094    ])
464     , -196130     , array([ 0.0608541  ,  0.0999925  ,  0.00706299 ,  26.2831    ])
468     , -196129     , array([ 0.0608541  ,  0.0999925  ,  0.00706299 ,  26.3094    ])
476     , -196130     , array([ 0.0608541  ,  0.0999925  ,  0.00706299 ,  26.2831    ])
480     , -196129     , array([ 0.0608541  ,  0.0999925  ,  0.00706299 ,  26.3094    ])
488     , -196130     , array([ 0.0608541  ,  0.0999925  ,  0.00706299 ,  26.2831    ])
492     , -196129     , array([ 0.0608541  ,  0.0999925  ,  0.00706299 ,  26.3094    ])
504     , -196215     , array([ 0.0604018  ,  0.0989067  ,  0.00706854 ,  25.6704    ])
508     , -196131     , array([ 0.0608432  ,  0.0999694  ,  0.0070631  ,  26.27      ])
512     , -196141     , array([ 0.0608432  ,  0.0999694  ,  0.00707017 ,  26.27      ])
516     , -196138     , array([ 0.0607912  ,  0.0998592  ,  0.00706367 ,  26.2075    ])
520     , -196131     , array([ 0.0608414  ,  0.0999655  ,  0.00706312 ,  26.2678    ])
Finshed optimization **************************************************
Writing out parameters **************************************************
Writing out SFS **************************************************
Making plots **************************************************
carrying out inference 43 for model 2D.5epoch.fixedN1N3.nomig for pop MN-IR
Beginning optimization ************************************************
4       , -498113     , array([ 0.0181064  ,  0.099      ,  0.00999727 ,  10.9283    ])
8       , -198919     , array([ 0.0401119  ,  0.0603233  ,  0.00685157 ,  10.9043    ])
12      , -198918     , array([ 0.0401119  ,  0.0603233  ,  0.00685157 ,  10.9152    ])
20      , -198322     , array([ 0.0401337  ,  0.0614304  ,  0.00667753 ,  10.9242    ])
24      , -198321     , array([ 0.0401337  ,  0.0614304  ,  0.00667753 ,  10.9351    ])
28      , -196842     , array([ 0.0402218  ,  0.0661681  ,  0.00601977 ,  11.0047    ])
40      , -196842     , array([ 0.0402218  ,  0.0661683  ,  0.00601977 ,  11.0047    ])
44      , -196870     , array([ 0.0402219  ,  0.0661023  ,  0.00601977 ,  11.0047    ])
48      , -196869     , array([ 0.0402219  ,  0.0661023  ,  0.00601977 ,  11.0157    ])
52      , -195182     , array([ 0.0465799  ,  0.0816552  ,  0.00615955 ,  11.5079    ])
64      , -195182     , array([ 0.0465799  ,  0.0816552  ,  0.00615954 ,  11.5081    ])
76      , -195182     , array([ 0.0465799  ,  0.0816552  ,  0.00615954 ,  11.5081    ])
80      , -194483     , array([ 0.0461326  ,  0.0805643  ,  0.00607418 ,  26.9921    ])
84      , -194482     , array([ 0.0461326  ,  0.0805643  ,  0.00607418 ,  27.0191    ])
92      , -194483     , array([ 0.0461326  ,  0.0805643  ,  0.00607418 ,  26.9921    ])
96      , -194482     , array([ 0.0461326  ,  0.0805643  ,  0.00607418 ,  27.0191    ])
100     , -194465     , array([ 0.0461326  ,  0.080645   ,  0.00607418 ,  26.9922    ])
112     , -194465     , array([ 0.0461326  ,  0.080645   ,  0.00607418 ,  26.9922    ])
116     , -194483     , array([ 0.0461326  ,  0.0805644  ,  0.00607418 ,  26.9922    ])
120     , -194482     , array([ 0.0461326  ,  0.0805644  ,  0.00607418 ,  27.0192    ])
128     , -194483     , array([ 0.0461326  ,  0.0805644  ,  0.00607418 ,  26.9922    ])
132     , -194482     , array([ 0.0461326  ,  0.0805644  ,  0.00607418 ,  27.0192    ])
136     , -194465     , array([ 0.0461326  ,  0.080645   ,  0.00607418 ,  26.9922    ])
140     , -194311     , array([ 0.0466924  ,  0.0822888  ,  0.0060573  ,  28.5981    ])
144     , -194311     , array([ 0.0466924  ,  0.0822888  ,  0.0060573  ,  28.6267    ])
152     , -194311     , array([ 0.0466924  ,  0.0822888  ,  0.0060573  ,  28.5981    ])
156     , -194311     , array([ 0.0466924  ,  0.0822888  ,  0.0060573  ,  28.6267    ])
160     , -194294     , array([ 0.0466924  ,  0.0823711  ,  0.0060573  ,  28.5981    ])
172     , -194294     , array([ 0.0466924  ,  0.0823711  ,  0.0060573  ,  28.5981    ])
176     , -194311     , array([ 0.0466924  ,  0.0822888  ,  0.0060573  ,  28.5981    ])
180     , -194311     , array([ 0.0466924  ,  0.0822888  ,  0.0060573  ,  28.6267    ])
184     , -194208     , array([ 0.0470533  ,  0.0833323  ,  0.00606272 ,  29.363     ])
188     , -194172     , array([ 0.047293   ,  0.083889   ,  0.0060663  ,  29.879     ])
192     , -194171     , array([ 0.047293   ,  0.083889   ,  0.0060663  ,  29.9089    ])
200     , -194172     , array([ 0.047293   ,  0.083889   ,  0.0060663  ,  29.879     ])
204     , -194171     , array([ 0.047293   ,  0.083889   ,  0.0060663  ,  29.9089    ])
208     , -194156     , array([ 0.047293   ,  0.0839729  ,  0.0060663  ,  29.879     ])
220     , -194156     , array([ 0.047293   ,  0.0839729  ,  0.0060663  ,  29.879     ])
224     , -194172     , array([ 0.047293   ,  0.083889   ,  0.0060663  ,  29.879     ])
228     , -194171     , array([ 0.047293   ,  0.083889   ,  0.0060663  ,  29.9089    ])
236     , -194172     , array([ 0.047293   ,  0.083889   ,  0.0060663  ,  29.879     ])
240     , -194171     , array([ 0.047293   ,  0.083889   ,  0.0060663  ,  29.9089    ])
244     , -194156     , array([ 0.047293   ,  0.0839729  ,  0.0060663  ,  29.879     ])
256     , -194156     , array([ 0.047293   ,  0.0839729  ,  0.0060663  ,  29.879     ])
260     , -194172     , array([ 0.047293   ,  0.083889   ,  0.0060663  ,  29.879     ])
264     , -194171     , array([ 0.047293   ,  0.083889   ,  0.0060663  ,  29.9089    ])
272     , -194172     , array([ 0.047293   ,  0.083889   ,  0.0060663  ,  29.879     ])
276     , -194171     , array([ 0.047293   ,  0.083889   ,  0.0060663  ,  29.9089    ])
280     , -194156     , array([ 0.047293   ,  0.0839729  ,  0.0060663  ,  29.879     ])
292     , -194156     , array([ 0.047293   ,  0.0839729  ,  0.0060663  ,  29.879     ])
296     , -194172     , array([ 0.047293   ,  0.083889   ,  0.0060663  ,  29.879     ])
300     , -194171     , array([ 0.047293   ,  0.083889   ,  0.0060663  ,  29.9089    ])
304     , -194152     , array([ 0.0473079  ,  0.0840175  ,  0.00606623 ,  29.9422    ])
308     , -194165     , array([ 0.0473178  ,  0.083963   ,  0.00606618 ,  29.984     ])
316     , -194152     , array([ 0.0473079  ,  0.0840175  ,  0.00606623 ,  29.9422    ])
320     , -194166     , array([ 0.0473145  ,  0.0839532  ,  0.00606619 ,  29.97      ])
328     , -194149     , array([ 0.0473171  ,  0.084045   ,  0.00606618 ,  29.981     ])
332     , -194165     , array([ 0.0473176  ,  0.0839626  ,  0.00606618 ,  29.9833    ])
340     , -194149     , array([ 0.0473178  ,  0.0840469  ,  0.00606618 ,  29.9838    ])
344     , -194165     , array([ 0.0473178  ,  0.083963   ,  0.00606618 ,  29.9839    ])
352     , -194149     , array([ 0.0473178  ,  0.084047   ,  0.00606618 ,  29.9839    ])
356     , -194165     , array([ 0.0473178  ,  0.083963   ,  0.00606618 ,  29.984     ])
364     , -194149     , array([ 0.0473178  ,  0.084047   ,  0.00606618 ,  29.984     ])
368     , -194165     , array([ 0.0473178  ,  0.083963   ,  0.00606618 ,  29.984     ])
376     , -194149     , array([ 0.0473178  ,  0.084047   ,  0.00606618 ,  29.984     ])
380     , -194165     , array([ 0.0473178  ,  0.083963   ,  0.00606618 ,  29.984     ])
388     , -194149     , array([ 0.0473178  ,  0.084047   ,  0.00606618 ,  29.984     ])
392     , -194165     , array([ 0.0473178  ,  0.083963   ,  0.00606618 ,  29.984     ])
400     , -194149     , array([ 0.0473178  ,  0.084047   ,  0.00606618 ,  29.984     ])
404     , -194165     , array([ 0.0473178  ,  0.083963   ,  0.00606618 ,  29.984     ])
412     , -194149     , array([ 0.0473178  ,  0.084047   ,  0.00606618 ,  29.984     ])
416     , -194165     , array([ 0.0473178  ,  0.083963   ,  0.00606618 ,  29.984     ])
424     , -194149     , array([ 0.0473178  ,  0.084047   ,  0.00606618 ,  29.984     ])
428     , -194165     , array([ 0.0473178  ,  0.083963   ,  0.00606618 ,  29.984     ])
436     , -194149     , array([ 0.0473178  ,  0.084047   ,  0.00606618 ,  29.984     ])
440     , -194165     , array([ 0.0473178  ,  0.083963   ,  0.00606618 ,  29.984     ])
448     , -194149     , array([ 0.0473178  ,  0.084047   ,  0.00606618 ,  29.984     ])
452     , -194165     , array([ 0.0473178  ,  0.083963   ,  0.00606618 ,  29.984     ])
460     , -194149     , array([ 0.0473178  ,  0.084047   ,  0.00606618 ,  29.984     ])
464     , -194165     , array([ 0.0473178  ,  0.083963   ,  0.00606618 ,  29.984     ])
472     , -194149     , array([ 0.0473178  ,  0.084047   ,  0.00606618 ,  29.984     ])
484     , -194152     , array([ 0.0473079  ,  0.0840175  ,  0.00606623 ,  29.9422    ])
488     , -194165     , array([ 0.0473154  ,  0.0839559  ,  0.00606619 ,  29.9738    ])
496     , -194165     , array([ 0.0473151  ,  0.0839549  ,  0.00606619 ,  29.9724    ])
Finshed optimization **************************************************
Writing out parameters **************************************************
Writing out SFS **************************************************
Making plots **************************************************
carrying out inference 44 for model 2D.5epoch.fixedN1N3.nomig for pop MN-IR
Beginning optimization ************************************************
4       , -706676     , array([ 0.0121613  ,  0.099      ,  0.0144486  ,  10.2682    ])
8       , -249710     , array([ 0.0285778  ,  0.0833992  ,  0.00866237 ,  10.2163    ])
12      , -249710     , array([ 0.0285778  ,  0.0833992  ,  0.00866237 ,  10.2265    ])
16      , -257855     , array([ 0.253819   ,  0.015392   ,  0.00364789 ,  10.1928    ])
20      , -227116     , array([ 0.0600341  ,  0.0469452  ,  0.00645626 ,  10.2083    ])
24      , -227114     , array([ 0.0600341  ,  0.0469452  ,  0.00645626 ,  10.2185    ])
32      , -227112     , array([ 0.0600441  ,  0.0469488  ,  0.00645777 ,  10.2086    ])
36      , -227111     , array([ 0.0600441  ,  0.0469488  ,  0.00645777 ,  10.2188    ])
40      , -227025     , array([ 0.0601909  ,  0.047049   ,  0.0064799  ,  10.2135    ])
44      , -262203     , array([ 0.179409   ,  0.0779261  ,  0.0299216  ,  12.6616    ])
48      , -262203     , array([ 0.179409   ,  0.0779261  ,  0.0299216  ,  12.6742    ])
52      , -225720     , array([ 0.0684318  ,  0.0499283  ,  0.00775587 ,  10.4746    ])
64      , -225720     , array([ 0.0684318  ,  0.0499283  ,  0.00775587 ,  10.4747    ])
76      , -225720     , array([ 0.0684318  ,  0.0499283  ,  0.00775587 ,  10.4748    ])
80      , -225009     , array([ 0.0684342  ,  0.0499331  ,  0.00763337 ,  27.7592    ])
84      , -225008     , array([ 0.0684342  ,  0.0499331  ,  0.00763337 ,  27.787     ])
92      , -225009     , array([ 0.0684342  ,  0.0499331  ,  0.00763337 ,  27.7592    ])
96      , -225008     , array([ 0.0684342  ,  0.0499331  ,  0.00763337 ,  27.787     ])
100     , -224978     , array([ 0.0684342  ,  0.0499831  ,  0.00763337 ,  27.7592    ])
112     , -224978     , array([ 0.0684342  ,  0.0499831  ,  0.00763337 ,  27.7592    ])
116     , -225009     , array([ 0.0684342  ,  0.0499331  ,  0.00763337 ,  27.7592    ])
120     , -225008     , array([ 0.0684342  ,  0.0499331  ,  0.00763337 ,  27.787     ])
124     , -224597     , array([ 0.0677472  ,  0.0501771  ,  0.00759688 ,  29.1445    ])
128     , -224629     , array([ 0.0677472  ,  0.050127   ,  0.00759688 ,  29.1445    ])
132     , -224628     , array([ 0.0677472  ,  0.050127   ,  0.00759688 ,  29.1737    ])
136     , -224597     , array([ 0.0677472  ,  0.0501771  ,  0.00759688 ,  29.1445    ])
140     , -224435     , array([ 0.0674063  ,  0.0502242  ,  0.0075787  ,  29.8629    ])
144     , -224434     , array([ 0.0674063  ,  0.0502242  ,  0.0075787  ,  29.8928    ])
148     , -224403     , array([ 0.0674063  ,  0.0502744  ,  0.0075787  ,  29.8629    ])
152     , -224435     , array([ 0.0674063  ,  0.0502242  ,  0.0075787  ,  29.8629    ])
156     , -224434     , array([ 0.0674063  ,  0.0502242  ,  0.0075787  ,  29.8928    ])
164     , -224435     , array([ 0.0674063  ,  0.0502242  ,  0.0075787  ,  29.8629    ])
168     , -224434     , array([ 0.0674063  ,  0.0502242  ,  0.0075787  ,  29.8928    ])
172     , -224403     , array([ 0.0674063  ,  0.0502744  ,  0.0075787  ,  29.8629    ])
184     , -224403     , array([ 0.0674063  ,  0.0502744  ,  0.0075787  ,  29.8629    ])
188     , -224435     , array([ 0.0674063  ,  0.0502242  ,  0.0075787  ,  29.8629    ])
192     , -224434     , array([ 0.0674063  ,  0.0502242  ,  0.0075787  ,  29.8928    ])
196     , -224378     , array([ 0.0673638  ,  0.0502866  ,  0.00757643 ,  29.9539    ])
200     , -224410     , array([ 0.0673638  ,  0.0502364  ,  0.00757643 ,  29.9539    ])
204     , -224410     , array([ 0.0673638  ,  0.0502364  ,  0.00757643 ,  29.9839    ])
208     , -224378     , array([ 0.0673638  ,  0.0502866  ,  0.00757643 ,  29.9539    ])
212     , -224398     , array([ 0.0673425  ,  0.0502424  ,  0.0075753  ,  29.9995    ])
220     , -224378     , array([ 0.0673638  ,  0.0502866  ,  0.00757643 ,  29.9539    ])
224     , -224402     , array([ 0.0673496  ,  0.0502404  ,  0.00757567 ,  29.9843    ])
232     , -224367     , array([ 0.067344   ,  0.0502923  ,  0.00757538 ,  29.9963    ])
236     , -224398     , array([ 0.0673428  ,  0.0502424  ,  0.00757531 ,  29.9989    ])
244     , -224366     , array([ 0.0673426  ,  0.0502927  ,  0.0075753  ,  29.9994    ])
248     , -224398     , array([ 0.0673425  ,  0.0502424  ,  0.0075753  ,  29.9995    ])
256     , -224366     , array([ 0.0673425  ,  0.0502927  ,  0.0075753  ,  29.9995    ])
260     , -224398     , array([ 0.0673425  ,  0.0502424  ,  0.0075753  ,  29.9995    ])
268     , -224366     , array([ 0.0673425  ,  0.0502927  ,  0.0075753  ,  29.9995    ])
272     , -224398     , array([ 0.0673425  ,  0.0502424  ,  0.0075753  ,  29.9995    ])
280     , -224366     , array([ 0.0673425  ,  0.0502927  ,  0.0075753  ,  29.9995    ])
284     , -224398     , array([ 0.0673425  ,  0.0502424  ,  0.0075753  ,  29.9995    ])
292     , -224366     , array([ 0.0673425  ,  0.0502927  ,  0.0075753  ,  29.9995    ])
296     , -224398     , array([ 0.0673425  ,  0.0502424  ,  0.0075753  ,  29.9995    ])
304     , -224366     , array([ 0.0673425  ,  0.0502927  ,  0.0075753  ,  29.9995    ])
308     , -224398     , array([ 0.0673425  ,  0.0502424  ,  0.0075753  ,  29.9995    ])
316     , -224366     , array([ 0.0673425  ,  0.0502927  ,  0.0075753  ,  29.9995    ])
320     , -224398     , array([ 0.0673425  ,  0.0502424  ,  0.0075753  ,  29.9995    ])
328     , -224366     , array([ 0.0673425  ,  0.0502927  ,  0.0075753  ,  29.9995    ])
332     , -224398     , array([ 0.0673425  ,  0.0502424  ,  0.0075753  ,  29.9995    ])
340     , -224366     , array([ 0.0673425  ,  0.0502927  ,  0.0075753  ,  29.9995    ])
344     , -224398     , array([ 0.0673425  ,  0.0502424  ,  0.0075753  ,  29.9995    ])
352     , -224366     , array([ 0.0673425  ,  0.0502927  ,  0.0075753  ,  29.9995    ])
356     , -224398     , array([ 0.0673425  ,  0.0502424  ,  0.0075753  ,  29.9995    ])
364     , -224629     , array([ 0.0677472  ,  0.050127   ,  0.00759688 ,  29.1445    ])
368     , -224628     , array([ 0.0677472  ,  0.050127   ,  0.00759688 ,  29.1737    ])
372     , -224403     , array([ 0.0674063  ,  0.0502744  ,  0.0075787  ,  29.8629    ])
380     , -224378     , array([ 0.0673638  ,  0.0502866  ,  0.00757643 ,  29.9539    ])
384     , -224398     , array([ 0.0673425  ,  0.0502424  ,  0.0075753  ,  29.9995    ])
392     , -224399     , array([ 0.0673435  ,  0.0502422  ,  0.00757535 ,  29.9975    ])
Finshed optimization **************************************************
Writing out parameters **************************************************
Writing out SFS **************************************************
Making plots **************************************************
carrying out inference 45 for model 2D.5epoch.fixedN1N3.nomig for pop MN-IR
Beginning optimization ************************************************
4       , -761637     , array([ 0.0063522  ,  0.0730175  ,  0.00775024 ,  8.70147    ])
8       , -405029     , array([ 0.0149103  ,  0.0715692  ,  0.00451177 ,  8.65534    ])
12      , -405028     , array([ 0.0149103  ,  0.0715692  ,  0.00451177 ,  8.664      ])
16      , -1.11127e+06, array([ 0.452617   ,  0.0661234  ,  0.00052025 ,  8.47325    ])
20      , -271909     , array([ 0.0360598  ,  0.0701003  ,  0.00257989 ,  8.60785    ])
24      , -271903     , array([ 0.0360598  ,  0.0701003  ,  0.00257989 ,  8.61646    ])
32      , -270236     , array([ 0.0365503  ,  0.0704633  ,  0.00260793 ,  8.61271    ])
36      , -270231     , array([ 0.0365503  ,  0.0704633  ,  0.00260793 ,  8.62133    ])
40      , -267780     , array([ 0.0372978  ,  0.0710816  ,  0.00265051 ,  8.62001    ])
52      , -267416     , array([ 0.0374168  ,  0.0711682  ,  0.00265727 ,  8.62115    ])
56      , -267092     , array([ 0.0375367  ,  0.071184   ,  0.00266408 ,  8.62231    ])
60      , -267086     , array([ 0.0375367  ,  0.071184   ,  0.00266408 ,  8.63093    ])
68      , -266933     , array([ 0.0375773  ,  0.0712134  ,  0.00266638 ,  8.6227     ])
72      , -266927     , array([ 0.0375773  ,  0.0712134  ,  0.00266638 ,  8.63132    ])
76      , -266747     , array([ 0.0376177  ,  0.071314   ,  0.00266868 ,  8.62308    ])
88      , -266726     , array([ 0.037625   ,  0.0713192  ,  0.00266909 ,  8.62315    ])
92      , -266754     , array([ 0.0376323  ,  0.0712532  ,  0.0026695  ,  8.62322    ])
96      , -266749     , array([ 0.0376323  ,  0.0712532  ,  0.0026695  ,  8.63185    ])
100     , -227915     , array([ 0.0626627  ,  0.0866702  ,  0.0040141  ,  8.809      ])
112     , -227902     , array([ 0.0626675  ,  0.0866926  ,  0.00401421 ,  8.80905    ])
116     , -227826     , array([ 0.0627156  ,  0.0868351  ,  0.00401526 ,  8.80961    ])
120     , -227823     , array([ 0.0627156  ,  0.0868351  ,  0.00401526 ,  8.81842    ])
128     , -227823     , array([ 0.0627168  ,  0.0868407  ,  0.00401529 ,  8.80962    ])
132     , -227820     , array([ 0.0627168  ,  0.0868407  ,  0.00401529 ,  8.81843    ])
136     , -227717     , array([ 0.0627339  ,  0.0870092  ,  0.00401566 ,  8.80982    ])
148     , -227716     , array([ 0.0627342  ,  0.0870106  ,  0.00401567 ,  8.80982    ])
152     , -227766     , array([ 0.0627372  ,  0.0869379  ,  0.00401573 ,  8.80985    ])
156     , -227763     , array([ 0.0627372  ,  0.0869379  ,  0.00401573 ,  8.81867    ])
164     , -227766     , array([ 0.0627373  ,  0.0869382  ,  0.00401574 ,  8.80986    ])
168     , -227763     , array([ 0.0627373  ,  0.0869382  ,  0.00401574 ,  8.81867    ])
172     , -227706     , array([ 0.062738   ,  0.0870287  ,  0.00401575 ,  8.80986    ])
176     , -222432     , array([ 0.064758   ,  0.0969485  ,  0.00405955 ,  8.83281    ])
180     , -222429     , array([ 0.064758   ,  0.0969485  ,  0.00405955 ,  8.84164    ])
188     , -222432     , array([ 0.064758   ,  0.0969486  ,  0.00405956 ,  8.83281    ])
192     , -222429     , array([ 0.064758   ,  0.0969486  ,  0.00405956 ,  8.84164    ])
196     , -222378     , array([ 0.0647581  ,  0.097046   ,  0.00405956 ,  8.83281    ])
208     , -222378     , array([ 0.0647581  ,  0.097046   ,  0.00405956 ,  8.83281    ])
212     , -222432     , array([ 0.0647581  ,  0.0969491  ,  0.00405956 ,  8.83281    ])
216     , -222429     , array([ 0.0647581  ,  0.0969491  ,  0.00405956 ,  8.84165    ])
220     , -221541     , array([ 0.0650976  ,  0.0988062  ,  0.00406683 ,  8.8366     ])
224     , -221047     , array([ 0.0653226  ,  0.0998853  ,  0.00407164 ,  8.8391     ])
228     , -221044     , array([ 0.0653226  ,  0.0998853  ,  0.00407164 ,  8.84795    ])
236     , -221047     , array([ 0.0653226  ,  0.0998853  ,  0.00407164 ,  8.8391     ])
240     , -221044     , array([ 0.0653226  ,  0.0998853  ,  0.00407164 ,  8.84795    ])
248     , -221047     , array([ 0.0653226  ,  0.0998853  ,  0.00407164 ,  8.8391     ])
252     , -221044     , array([ 0.0653226  ,  0.0998853  ,  0.00407164 ,  8.84795    ])
256     , -220995     , array([ 0.0653226  ,  0.0999852  ,  0.00407164 ,  8.8391     ])
268     , -220995     , array([ 0.0653226  ,  0.0999852  ,  0.00407164 ,  8.8391     ])
272     , -221047     , array([ 0.0653226  ,  0.0998853  ,  0.00407164 ,  8.8391     ])
276     , -221044     , array([ 0.0653226  ,  0.0998853  ,  0.00407164 ,  8.84795    ])
284     , -221047     , array([ 0.0653226  ,  0.0998853  ,  0.00407164 ,  8.8391     ])
288     , -221044     , array([ 0.0653226  ,  0.0998853  ,  0.00407164 ,  8.84795    ])
296     , -221019     , array([ 0.0653344  ,  0.0999471  ,  0.00407189 ,  8.83923    ])
300     , -221016     , array([ 0.0653344  ,  0.0999471  ,  0.00407189 ,  8.84808    ])
308     , -221017     , array([ 0.0653352  ,  0.0999516  ,  0.00407191 ,  8.83924    ])
312     , -221014     , array([ 0.0653352  ,  0.0999516  ,  0.00407191 ,  8.84809    ])
320     , -221017     , array([ 0.0653352  ,  0.0999518  ,  0.00407191 ,  8.83924    ])
324     , -221014     , array([ 0.0653352  ,  0.0999518  ,  0.00407191 ,  8.84809    ])
332     , -221017     , array([ 0.0653352  ,  0.0999518  ,  0.00407191 ,  8.83924    ])
336     , -221014     , array([ 0.0653352  ,  0.0999518  ,  0.00407191 ,  8.84809    ])
344     , -221017     , array([ 0.0653352  ,  0.0999518  ,  0.00407191 ,  8.83924    ])
348     , -221014     , array([ 0.0653352  ,  0.0999518  ,  0.00407191 ,  8.84809    ])
356     , -221017     , array([ 0.0653352  ,  0.0999518  ,  0.00407191 ,  8.83924    ])
360     , -221014     , array([ 0.0653352  ,  0.0999518  ,  0.00407191 ,  8.84809    ])
368     , -221017     , array([ 0.0653352  ,  0.0999518  ,  0.00407191 ,  8.83924    ])
372     , -221014     , array([ 0.0653352  ,  0.0999518  ,  0.00407191 ,  8.84809    ])
380     , -221017     , array([ 0.0653352  ,  0.0999518  ,  0.00407191 ,  8.83924    ])
384     , -221014     , array([ 0.0653352  ,  0.0999518  ,  0.00407191 ,  8.84809    ])
392     , -221017     , array([ 0.0653352  ,  0.0999518  ,  0.00407191 ,  8.83924    ])
396     , -221014     , array([ 0.0653352  ,  0.0999518  ,  0.00407191 ,  8.84809    ])
404     , -221017     , array([ 0.0653352  ,  0.0999518  ,  0.00407191 ,  8.83924    ])
408     , -221014     , array([ 0.0653352  ,  0.0999518  ,  0.00407191 ,  8.84809    ])
416     , -222555     , array([ 0.0646873  ,  0.0966818  ,  0.00405804 ,  8.83202    ])
420     , -221336     , array([ 0.0652036  ,  0.0992612  ,  0.0040691  ,  8.83778    ])
424     , -221241     , array([ 0.0652036  ,  0.0992612  ,  0.00407317 ,  8.83778    ])
428     , -221021     , array([ 0.0653333  ,  0.0999417  ,  0.00407187 ,  8.83922    ])
432     , -221018     , array([ 0.0653333  ,  0.0999417  ,  0.00407187 ,  8.84806    ])
Finshed optimization **************************************************
Writing out parameters **************************************************
Writing out SFS **************************************************
Making plots **************************************************
carrying out inference 46 for model 2D.5epoch.fixedN1N3.nomig for pop MN-IR
Beginning optimization ************************************************
4       , -402053     , array([ 0.0153176  ,  0.0669947  ,  0.0075966  ,  6.29984    ])
8       , -215409     , array([ 0.0330461  ,  0.0355084  ,  0.00646165 ,  6.29199    ])
12      , -215407     , array([ 0.0330461  ,  0.0355084  ,  0.00646165 ,  6.29829    ])
20      , -215180     , array([ 0.0334703  ,  0.0358904  ,  0.00656914 ,  6.31975    ])
24      , -215178     , array([ 0.0334703  ,  0.0358904  ,  0.00656914 ,  6.32607    ])
28      , -214971     , array([ 0.0404246  ,  0.0420924  ,  0.00838604 ,  6.74521    ])
32      , -214247     , array([ 0.0367354  ,  0.0388059  ,  0.00740966 ,  6.52607    ])
36      , -214245     , array([ 0.0367354  ,  0.0388059  ,  0.00740966 ,  6.5326     ])
40      , -211950     , array([ 0.0454486  ,  0.0501068  ,  0.00733696 ,  7.09349    ])
52      , -211949     , array([ 0.0454492  ,  0.0501076  ,  0.00733696 ,  7.09353    ])
56      , -211992     , array([ 0.0454526  ,  0.050062   ,  0.00733693 ,  7.09374    ])
60      , -211991     , array([ 0.0454526  ,  0.050062   ,  0.00733693 ,  7.10083    ])
64      , -207577     , array([ 0.0695683  ,  0.0833774  ,  0.00719368 ,  8.38077    ])
76      , -207577     , array([ 0.0695765  ,  0.0833892  ,  0.00719374 ,  8.37618    ])
80      , -207617     , array([ 0.0695935  ,  0.0833303  ,  0.00719386 ,  8.36663    ])
84      , -207615     , array([ 0.0695935  ,  0.0833303  ,  0.00719386 ,  8.375      ])
92      , -207616     , array([ 0.0695956  ,  0.0833333  ,  0.00719387 ,  8.36549    ])
96      , -207615     , array([ 0.0695956  ,  0.0833333  ,  0.00719387 ,  8.37386    ])
100     , -207576     , array([ 0.0695998  ,  0.0834227  ,  0.0071939  ,  8.36311    ])
112     , -207576     , array([ 0.0696003  ,  0.0834235  ,  0.00719391 ,  8.36282    ])
116     , -207616     , array([ 0.0696014  ,  0.0833416  ,  0.00719391 ,  8.36223    ])
120     , -207615     , array([ 0.0696014  ,  0.0833416  ,  0.00719391 ,  8.3706     ])
128     , -207616     , array([ 0.0696015  ,  0.0833418  ,  0.00719392 ,  8.36216    ])
132     , -207615     , array([ 0.0696015  ,  0.0833418  ,  0.00719392 ,  8.37052    ])
136     , -207576     , array([ 0.0696018  ,  0.0834256  ,  0.00719392 ,  8.36201    ])
148     , -207576     , array([ 0.0696018  ,  0.0834256  ,  0.00719392 ,  8.36199    ])
152     , -207616     , array([ 0.0696019  ,  0.0833423  ,  0.00719392 ,  8.36196    ])
156     , -207615     , array([ 0.0696019  ,  0.0833423  ,  0.00719392 ,  8.37032    ])
164     , -207616     , array([ 0.0696019  ,  0.0833423  ,  0.00719392 ,  8.36195    ])
168     , -207615     , array([ 0.0696019  ,  0.0833423  ,  0.00719392 ,  8.37032    ])
172     , -207576     , array([ 0.0696019  ,  0.0834257  ,  0.00719392 ,  8.36194    ])
176     , -207470     , array([ 0.0755762  ,  0.091979   ,  0.00723439 ,  5.70138    ])
180     , -207468     , array([ 0.0755762  ,  0.091979   ,  0.00723439 ,  5.70709    ])
184     , -207134     , array([ 0.0777112  ,  0.0952205  ,  0.00722145 ,  5.84226    ])
196     , -207134     , array([ 0.0777112  ,  0.0952205  ,  0.00722145 ,  5.84226    ])
208     , -207134     , array([ 0.0777112  ,  0.0952205  ,  0.00722145 ,  5.84226    ])
220     , -207134     , array([ 0.0777112  ,  0.0952205  ,  0.00722145 ,  5.84226    ])
224     , -206837     , array([ 0.0802411  ,  0.0988768  ,  0.00720661 ,  6.00858    ])
228     , -206835     , array([ 0.0802411  ,  0.0988768  ,  0.00720661 ,  6.01459    ])
236     , -206837     , array([ 0.0802411  ,  0.0988768  ,  0.00720661 ,  6.00858    ])
240     , -206835     , array([ 0.0802411  ,  0.0988768  ,  0.00720661 ,  6.01459    ])
244     , -206724     , array([ 0.08082    ,  0.0998386  ,  0.00720328 ,  6.04654    ])
256     , -206724     , array([ 0.08082    ,  0.0998386  ,  0.00720328 ,  6.04654    ])
260     , -206746     , array([ 0.0809504  ,  0.0999332  ,  0.00720254 ,  6.0551     ])
264     , -206744     , array([ 0.0809504  ,  0.0999332  ,  0.00720254 ,  6.06116    ])
268     , -206724     , array([ 0.08082    ,  0.0998386  ,  0.00720328 ,  6.04654    ])
272     , -206751     , array([ 0.0809069  ,  0.0998684  ,  0.00720278 ,  6.05225    ])
276     , -206749     , array([ 0.0809069  ,  0.0998684  ,  0.00720278 ,  6.0583     ])
284     , -206746     , array([ 0.0809474  ,  0.0999287  ,  0.00720255 ,  6.0549     ])
288     , -206744     , array([ 0.0809474  ,  0.0999287  ,  0.00720255 ,  6.06095    ])
296     , -206746     , array([ 0.0809503  ,  0.099933   ,  0.00720254 ,  6.05509    ])
300     , -206744     , array([ 0.0809503  ,  0.099933   ,  0.00720254 ,  6.06115    ])
308     , -206746     , array([ 0.0809504  ,  0.0999332  ,  0.00720254 ,  6.0551     ])
312     , -206744     , array([ 0.0809504  ,  0.0999332  ,  0.00720254 ,  6.06116    ])
320     , -206746     , array([ 0.0809504  ,  0.0999332  ,  0.00720254 ,  6.0551     ])
324     , -206744     , array([ 0.0809504  ,  0.0999332  ,  0.00720254 ,  6.06116    ])
332     , -206746     , array([ 0.0809504  ,  0.0999332  ,  0.00720254 ,  6.0551     ])
336     , -206744     , array([ 0.0809504  ,  0.0999332  ,  0.00720254 ,  6.06116    ])
344     , -206746     , array([ 0.0809504  ,  0.0999332  ,  0.00720254 ,  6.0551     ])
348     , -206744     , array([ 0.0809504  ,  0.0999332  ,  0.00720254 ,  6.06116    ])
356     , -206746     , array([ 0.0809504  ,  0.0999332  ,  0.00720254 ,  6.0551     ])
360     , -206744     , array([ 0.0809504  ,  0.0999332  ,  0.00720254 ,  6.06116    ])
368     , -206746     , array([ 0.0809504  ,  0.0999332  ,  0.00720254 ,  6.0551     ])
372     , -206744     , array([ 0.0809504  ,  0.0999332  ,  0.00720254 ,  6.06116    ])
380     , -206746     , array([ 0.0809504  ,  0.0999332  ,  0.00720254 ,  6.0551     ])
384     , -206744     , array([ 0.0809504  ,  0.0999332  ,  0.00720254 ,  6.06116    ])
392     , -206746     , array([ 0.0809504  ,  0.0999332  ,  0.00720254 ,  6.0551     ])
396     , -206744     , array([ 0.0809504  ,  0.0999332  ,  0.00720254 ,  6.06116    ])
404     , -207173     , array([ 0.0777112  ,  0.0951253  ,  0.00722145 ,  5.84226    ])
408     , -207171     , array([ 0.0777112  ,  0.0951253  ,  0.00722145 ,  5.84811    ])
412     , -206842     , array([ 0.0799065  ,  0.0984777  ,  0.00720854 ,  5.98662    ])
420     , -206845     , array([ 0.0805454  ,  0.09921    ,  0.00720532 ,  6.02326    ])
424     , -206772     , array([ 0.0807456  ,  0.099628   ,  0.00720371 ,  6.04167    ])
428     , -206770     , array([ 0.0807456  ,  0.099628   ,  0.00721092 ,  6.04167    ])
432     , -206791     , array([ 0.0809672  ,  0.0998376  ,  0.0072029  ,  6.05089    ])
436     , -206745     , array([ 0.0809568  ,  0.0999426  ,  0.0072025  ,  6.05551    ])
440     , -206743     , array([ 0.0809568  ,  0.0999426  ,  0.00720971 ,  6.05551    ])
444     , -206746     , array([ 0.0809497  ,  0.0999322  ,  0.00720254 ,  6.05505    ])
Finshed optimization **************************************************
Writing out parameters **************************************************
Writing out SFS **************************************************
Making plots **************************************************
carrying out inference 47 for model 2D.5epoch.fixedN1N3.nomig for pop MN-IR
Beginning optimization ************************************************
4       , -706896     , array([ 0.00722064 ,  0.099      ,  0.00656341 ,  7.31258    ])
8       , -428372     , array([ 0.0176823  ,  0.0987563  ,  0.00411104 ,  7.2779     ])
12      , -428371     , array([ 0.0176823  ,  0.0987563  ,  0.00411104 ,  7.28518    ])
16      , -966378     , array([ 0.635903   ,  0.0978853  ,  0.000635296,  7.14081    ])
20      , -273224     , array([ 0.0447507  ,  0.0985043  ,  0.0025337  ,  7.24212    ])
24      , -273218     , array([ 0.0447507  ,  0.0985043  ,  0.0025337  ,  7.24936    ])
32      , -271952     , array([ 0.0451726  ,  0.0986361  ,  0.00255334 ,  7.24493    ])
36      , -271946     , array([ 0.0451726  ,  0.0986361  ,  0.00255334 ,  7.25218    ])
44      , -271867     , array([ 0.045201   ,  0.098645   ,  0.00255467 ,  7.24512    ])
48      , -271861     , array([ 0.045201   ,  0.098645   ,  0.00255467 ,  7.25237    ])
52      , -271761     , array([ 0.0452294  ,  0.0987525  ,  0.00255599 ,  7.24531    ])
64      , -271739     , array([ 0.0452366  ,  0.0987548  ,  0.00255632 ,  7.24535    ])
68      , -271739     , array([ 0.0452437  ,  0.0986583  ,  0.00255665 ,  7.2454     ])
72      , -271733     , array([ 0.0452437  ,  0.0986583  ,  0.00255665 ,  7.25265    ])
80      , -271734     , array([ 0.0452455  ,  0.0986588  ,  0.00255674 ,  7.24541    ])
84      , -271728     , array([ 0.0452455  ,  0.0986588  ,  0.00255674 ,  7.25266    ])
88      , -271707     , array([ 0.0452473  ,  0.0987581  ,  0.00255682 ,  7.24542    ])
100     , -271706     , array([ 0.0452477  ,  0.0987582  ,  0.00255684 ,  7.24543    ])
104     , -271726     , array([ 0.0452482  ,  0.0986597  ,  0.00255686 ,  7.24543    ])
108     , -271720     , array([ 0.0452482  ,  0.0986597  ,  0.00255686 ,  7.25268    ])
116     , -271726     , array([ 0.0452483  ,  0.0986597  ,  0.00255687 ,  7.24543    ])
120     , -271719     , array([ 0.0452483  ,  0.0986597  ,  0.00255687 ,  7.25268    ])
124     , -271704     , array([ 0.0452484  ,  0.0987584  ,  0.00255687 ,  7.24543    ])
128     , -264898     , array([ 0.047667   ,  0.0993949  ,  0.00266887 ,  7.26107    ])
132     , -264893     , array([ 0.047667   ,  0.0993949  ,  0.00266887 ,  7.26833    ])
140     , -264898     , array([ 0.0476671  ,  0.0993955  ,  0.00266888 ,  7.26107    ])
144     , -264892     , array([ 0.0476671  ,  0.0993955  ,  0.00266888 ,  7.26833    ])
148     , -264864     , array([ 0.0476683  ,  0.0994992  ,  0.00266892 ,  7.26108    ])
160     , -264864     , array([ 0.0476683  ,  0.0994994  ,  0.00266893 ,  7.26108    ])
164     , -264893     , array([ 0.0476686  ,  0.099401   ,  0.00266894 ,  7.26108    ])
168     , -264887     , array([ 0.0476686  ,  0.099401   ,  0.00266894 ,  7.26834    ])
176     , -264893     , array([ 0.0476686  ,  0.099401   ,  0.00266894 ,  7.26108    ])
180     , -264887     , array([ 0.0476686  ,  0.099401   ,  0.00266894 ,  7.26834    ])
184     , -264863     , array([ 0.0476687  ,  0.0995008  ,  0.00266894 ,  7.26108    ])
196     , -264862     , array([ 0.0476687  ,  0.0995008  ,  0.00266894 ,  7.26108    ])
200     , -264893     , array([ 0.0476687  ,  0.0994014  ,  0.00266894 ,  7.26108    ])
204     , -264887     , array([ 0.0476687  ,  0.0994014  ,  0.00266894 ,  7.26835    ])
212     , -264893     , array([ 0.0476687  ,  0.0994014  ,  0.00266894 ,  7.26108    ])
216     , -264887     , array([ 0.0476687  ,  0.0994014  ,  0.00266894 ,  7.26835    ])
220     , -264862     , array([ 0.0476687  ,  0.0995008  ,  0.00266894 ,  7.26108    ])
232     , -264862     , array([ 0.0476687  ,  0.0995008  ,  0.00266894 ,  7.26108    ])
236     , -264893     , array([ 0.0476687  ,  0.0994014  ,  0.00266894 ,  7.26108    ])
240     , -264887     , array([ 0.0476687  ,  0.0994014  ,  0.00266894 ,  7.26835    ])
244     , -264600     , array([ 0.0477536  ,  0.0998102  ,  0.00267237 ,  7.26176    ])
248     , -264457     , array([ 0.0478097  ,  0.099915   ,  0.00267463 ,  7.26222    ])
252     , -264451     , array([ 0.0478097  ,  0.099915   ,  0.00267463 ,  7.26948    ])
256     , -264600     , array([ 0.0477536  ,  0.0998102  ,  0.00267237 ,  7.26176    ])
260     , -264514     , array([ 0.047791   ,  0.0998468  ,  0.00267388 ,  7.26207    ])
264     , -264509     , array([ 0.047791   ,  0.0998468  ,  0.00267388 ,  7.26933    ])
268     , -264446     , array([ 0.0478035  ,  0.0999922  ,  0.00267438 ,  7.26217    ])
272     , -264463     , array([ 0.0478077  ,  0.0999074  ,  0.00267455 ,  7.2622     ])
276     , -264457     , array([ 0.0478077  ,  0.0999074  ,  0.00267455 ,  7.26947    ])
284     , -264457     , array([ 0.0478096  ,  0.0999147  ,  0.00267463 ,  7.26222    ])
288     , -264451     , array([ 0.0478096  ,  0.0999147  ,  0.00267463 ,  7.26948    ])
296     , -264457     , array([ 0.0478097  ,  0.099915   ,  0.00267463 ,  7.26222    ])
300     , -264451     , array([ 0.0478097  ,  0.099915   ,  0.00267463 ,  7.26948    ])
308     , -264457     , array([ 0.0478097  ,  0.099915   ,  0.00267463 ,  7.26222    ])
312     , -264451     , array([ 0.0478097  ,  0.099915   ,  0.00267463 ,  7.26948    ])
320     , -264457     , array([ 0.0478097  ,  0.099915   ,  0.00267463 ,  7.26222    ])
324     , -264451     , array([ 0.0478097  ,  0.099915   ,  0.00267463 ,  7.26948    ])
332     , -264457     , array([ 0.0478097  ,  0.099915   ,  0.00267463 ,  7.26222    ])
336     , -264451     , array([ 0.0478097  ,  0.099915   ,  0.00267463 ,  7.26948    ])
344     , -264457     , array([ 0.0478097  ,  0.099915   ,  0.00267463 ,  7.26222    ])
348     , -264451     , array([ 0.0478097  ,  0.099915   ,  0.00267463 ,  7.26948    ])
356     , -264457     , array([ 0.0478097  ,  0.099915   ,  0.00267463 ,  7.26222    ])
360     , -264451     , array([ 0.0478097  ,  0.099915   ,  0.00267463 ,  7.26948    ])
368     , -264457     , array([ 0.0478097  ,  0.099915   ,  0.00267463 ,  7.26222    ])
372     , -264451     , array([ 0.0478097  ,  0.099915   ,  0.00267463 ,  7.26948    ])
380     , -264457     , array([ 0.0478097  ,  0.099915   ,  0.00267463 ,  7.26222    ])
384     , -264451     , array([ 0.0478097  ,  0.099915   ,  0.00267463 ,  7.26948    ])
392     , -264457     , array([ 0.0478097  ,  0.099915   ,  0.00267463 ,  7.26222    ])
396     , -264451     , array([ 0.0478097  ,  0.099915   ,  0.00267463 ,  7.26948    ])
404     , -264457     , array([ 0.0478097  ,  0.099915   ,  0.00267463 ,  7.26222    ])
408     , -264451     , array([ 0.0478097  ,  0.099915   ,  0.00267463 ,  7.26948    ])
416     , -264457     , array([ 0.0478097  ,  0.099915   ,  0.00267463 ,  7.26222    ])
420     , -264451     , array([ 0.0478097  ,  0.099915   ,  0.00267463 ,  7.26948    ])
436     , -264605     , array([ 0.0477519  ,  0.0998039  ,  0.0026723  ,  7.26175    ])
440     , -264504     , array([ 0.0477944  ,  0.0998591  ,  0.00267402 ,  7.26209    ])
444     , -264498     , array([ 0.0477944  ,  0.0998591  ,  0.00267402 ,  7.26936    ])
452     , -264453     , array([ 0.0478109  ,  0.0999193  ,  0.00267468 ,  7.26223    ])
Finshed optimization **************************************************
Writing out parameters **************************************************
Writing out SFS **************************************************
Making plots **************************************************
carrying out inference 48 for model 2D.5epoch.fixedN1N3.nomig for pop MN-IR
Beginning optimization ************************************************
4       , -797739     , array([ 0.00580786 ,  0.099      ,  0.00842884 ,  7.33452    ])
8       , -526121     , array([ 0.0133303  ,  0.0989874  ,  0.00474168 ,  7.28733    ])
12      , -526121     , array([ 0.0133303  ,  0.0989874  ,  0.00474168 ,  7.29462    ])
16      , -350043     , array([ 0.074059   ,  0.0778781  ,  0.00224641 ,  7.24029    ])
28      , -349814     , array([ 0.0741552  ,  0.078002   ,  0.00224784 ,  7.2406     ])
32      , -349431     , array([ 0.07433    ,  0.0781369  ,  0.00224773 ,  7.73305    ])
36      , -349424     , array([ 0.07433    ,  0.0781369  ,  0.00224773 ,  7.74079    ])
40      , -347727     , array([ 0.0750332  ,  0.0790729  ,  0.00224728 ,  10.0614    ])
44      , -343578     , array([ 0.0732379  ,  0.0807416  ,  0.00224787 ,  11.9913    ])
48      , -343573     , array([ 0.0732379  ,  0.0807416  ,  0.00224787 ,  12.0033    ])
52      , -326661     , array([ 0.0664759  ,  0.0882158  ,  0.00225021 ,  24.1938    ])
64      , -326653     , array([ 0.066473   ,  0.0882193  ,  0.00225021 ,  24.2014    ])
68      , -326446     , array([ 0.0663634  ,  0.0882627  ,  0.00225025 ,  24.4927    ])
72      , -326443     , array([ 0.0663634  ,  0.0882627  ,  0.00225025 ,  24.5172    ])
80      , -326444     , array([ 0.0663627  ,  0.0882635  ,  0.00225025 ,  24.4946    ])
84      , -326441     , array([ 0.0663627  ,  0.0882635  ,  0.00225025 ,  24.5191    ])
88      , -326296     , array([ 0.0663354  ,  0.0883847  ,  0.00225026 ,  24.5677    ])
100     , -326296     , array([ 0.0663352  ,  0.0883849  ,  0.00225026 ,  24.5682    ])
104     , -326372     , array([ 0.066335   ,  0.0882968  ,  0.00225026 ,  24.5686    ])
108     , -326370     , array([ 0.066335   ,  0.0882968  ,  0.00225026 ,  24.5932    ])
116     , -326372     , array([ 0.066335   ,  0.0882968  ,  0.00225026 ,  24.5688    ])
120     , -326370     , array([ 0.066335   ,  0.0882968  ,  0.00225026 ,  24.5933    ])
124     , -326295     , array([ 0.0663349  ,  0.0883852  ,  0.00225026 ,  24.5689    ])
128     , -322258     , array([ 0.0647581  ,  0.0902373  ,  0.00225085 ,  29.2475    ])
132     , -322256     , array([ 0.0647581  ,  0.0902373  ,  0.00225085 ,  29.2768    ])
140     , -322258     , array([ 0.0647581  ,  0.0902373  ,  0.00225085 ,  29.2475    ])
144     , -322256     , array([ 0.0647581  ,  0.0902373  ,  0.00225085 ,  29.2768    ])
148     , -322181     , array([ 0.0647579  ,  0.0903278  ,  0.00225085 ,  29.2482    ])
160     , -322181     , array([ 0.0647579  ,  0.0903278  ,  0.00225085 ,  29.2482    ])
164     , -322258     , array([ 0.0647578  ,  0.0902376  ,  0.00225085 ,  29.2484    ])
168     , -322255     , array([ 0.0647578  ,  0.0902376  ,  0.00225085 ,  29.2777    ])
176     , -322258     , array([ 0.0647578  ,  0.0902376  ,  0.00225085 ,  29.2484    ])
180     , -322255     , array([ 0.0647578  ,  0.0902376  ,  0.00225085 ,  29.2777    ])
184     , -322181     , array([ 0.0647578  ,  0.0903279  ,  0.00225085 ,  29.2484    ])
188     , -321921     , array([ 0.0646295  ,  0.0903995  ,  0.0022509  ,  29.6719    ])
192     , -321918     , array([ 0.0646295  ,  0.0903995  ,  0.0022509  ,  29.7016    ])
196     , -321622     , array([ 0.0645449  ,  0.0905971  ,  0.00225093 ,  29.9548    ])
208     , -321622     , array([ 0.0645449  ,  0.0905971  ,  0.00225093 ,  29.9548    ])
212     , -321699     , array([ 0.0645449  ,  0.0905066  ,  0.00225093 ,  29.9548    ])
216     , -321696     , array([ 0.0645449  ,  0.0905066  ,  0.00225093 ,  29.9848    ])
224     , -321699     , array([ 0.0645449  ,  0.0905066  ,  0.00225093 ,  29.9548    ])
228     , -321696     , array([ 0.0645449  ,  0.0905066  ,  0.00225093 ,  29.9848    ])
232     , -321622     , array([ 0.0645449  ,  0.0905971  ,  0.00225093 ,  29.9548    ])
236     , -321680     , array([ 0.0645377  ,  0.0905157  ,  0.00225093 ,  29.979     ])
244     , -321622     , array([ 0.0645449  ,  0.0905971  ,  0.00225093 ,  29.9548    ])
248     , -321686     , array([ 0.0645401  ,  0.0905126  ,  0.00225093 ,  29.9709    ])
256     , -321604     , array([ 0.0645382  ,  0.0906056  ,  0.00225093 ,  29.9773    ])
260     , -321680     , array([ 0.0645378  ,  0.0905155  ,  0.00225093 ,  29.9786    ])
268     , -321603     , array([ 0.0645377  ,  0.0906062  ,  0.00225093 ,  29.9789    ])
272     , -321680     , array([ 0.0645377  ,  0.0905157  ,  0.00225093 ,  29.9789    ])
280     , -321603     , array([ 0.0645377  ,  0.0906062  ,  0.00225093 ,  29.979     ])
284     , -321680     , array([ 0.0645377  ,  0.0905157  ,  0.00225093 ,  29.979     ])
292     , -321603     , array([ 0.0645377  ,  0.0906062  ,  0.00225093 ,  29.979     ])
296     , -321680     , array([ 0.0645377  ,  0.0905157  ,  0.00225093 ,  29.979     ])
304     , -321603     , array([ 0.0645377  ,  0.0906062  ,  0.00225093 ,  29.979     ])
308     , -321680     , array([ 0.0645377  ,  0.0905157  ,  0.00225093 ,  29.979     ])
316     , -321603     , array([ 0.0645377  ,  0.0906062  ,  0.00225093 ,  29.979     ])
320     , -321680     , array([ 0.0645377  ,  0.0905157  ,  0.00225093 ,  29.979     ])
328     , -321603     , array([ 0.0645377  ,  0.0906062  ,  0.00225093 ,  29.979     ])
332     , -321680     , array([ 0.0645377  ,  0.0905157  ,  0.00225093 ,  29.979     ])
340     , -321603     , array([ 0.0645377  ,  0.0906062  ,  0.00225093 ,  29.979     ])
344     , -321680     , array([ 0.0645377  ,  0.0905157  ,  0.00225093 ,  29.979     ])
352     , -321603     , array([ 0.0645377  ,  0.0906062  ,  0.00225093 ,  29.979     ])
356     , -321680     , array([ 0.0645377  ,  0.0905157  ,  0.00225093 ,  29.979     ])
364     , -321603     , array([ 0.0645377  ,  0.0906062  ,  0.00225093 ,  29.979     ])
368     , -343578     , array([ 0.0732379  ,  0.0807416  ,  0.00224787 ,  11.9913    ])
372     , -343573     , array([ 0.0732379  ,  0.0807416  ,  0.00224787 ,  12.0033    ])
376     , -339280     , array([ 0.0714855  ,  0.0826105  ,  0.00224845 ,  14.2915    ])
380     , -330923     , array([ 0.0681055  ,  0.0862201  ,  0.00224963 ,  20.3       ])
384     , -330919     , array([ 0.0681055  ,  0.0862201  ,  0.00224963 ,  20.3203    ])
388     , -322673     , array([ 0.0649502  ,  0.0900774  ,  0.0022508  ,  28.8346    ])
396     , -322077     , array([ 0.0646892  ,  0.0903242  ,  0.00225087 ,  29.4741    ])
400     , -322075     , array([ 0.0646892  ,  0.0903242  ,  0.00225087 ,  29.5036    ])
404     , -321744     , array([ 0.0645913  ,  0.0905383  ,  0.00225091 ,  29.7991    ])
408     , -321692     , array([ 0.0645425  ,  0.0905097  ,  0.00225093 ,  29.963     ])
412     , -321690     , array([ 0.0645425  ,  0.0905097  ,  0.00225093 ,  29.993     ])
416     , -321676     , array([ 0.0645364  ,  0.0905174  ,  0.00225093 ,  29.9835    ])
Finshed optimization **************************************************
Writing out parameters **************************************************
Writing out SFS **************************************************
Making plots **************************************************
carrying out inference 49 for model 2D.5epoch.fixedN1N3.nomig for pop MN-IR
Beginning optimization ************************************************
4       , -592602     , array([ 0.0177912  ,  0.099      ,  0.0171699  ,  18.4343    ])
8       , -219324     , array([ 0.0407845  ,  0.0599395  ,  0.0129251  ,  18.3991    ])
12      , -219324     , array([ 0.0407845  ,  0.0599395  ,  0.0129251  ,  18.4175    ])
20      , -218378     , array([ 0.0406737  ,  0.0600776  ,  0.0126946  ,  18.4012    ])
24      , -218378     , array([ 0.0406737  ,  0.0600776  ,  0.0126946  ,  18.4196    ])
28      , -217432     , array([ 0.0405634  ,  0.0602761  ,  0.0124685  ,  18.4033    ])
40      , -217207     , array([ 0.0405364  ,  0.06031    ,  0.0124139  ,  18.4038    ])
44      , -199872     , array([ 0.03494    ,  0.0683208  ,  0.00464609 ,  18.5166    ])
48      , -199871     , array([ 0.03494    ,  0.0683208  ,  0.00464609 ,  18.5351    ])
52      , -197528     , array([ 0.0377596  ,  0.0640424  ,  0.00776322 ,  18.4575    ])
64      , -197525     , array([ 0.0377732  ,  0.0640812  ,  0.00776291 ,  18.4604    ])
68      , -197527     , array([ 0.0378004  ,  0.0640948  ,  0.0077623  ,  18.4662    ])
72      , -197526     , array([ 0.0378004  ,  0.0640948  ,  0.0077623  ,  18.4847    ])
80      , -197526     , array([ 0.0378038  ,  0.0641044  ,  0.00776222 ,  18.4669    ])
84      , -197525     , array([ 0.0378038  ,  0.0641044  ,  0.00776222 ,  18.4854    ])
88      , -197516     , array([ 0.0378112  ,  0.0641897  ,  0.00776205 ,  18.4685    ])
100     , -197516     , array([ 0.037812   ,  0.0641921  ,  0.00776203 ,  18.4687    ])
104     , -197523     , array([ 0.0378139  ,  0.0641334  ,  0.00776199 ,  18.4691    ])
108     , -197523     , array([ 0.0378139  ,  0.0641334  ,  0.00776199 ,  18.4875    ])
116     , -197523     , array([ 0.0378141  ,  0.064134   ,  0.00776198 ,  18.4691    ])
120     , -197523     , array([ 0.0378141  ,  0.064134   ,  0.00776198 ,  18.4876    ])
124     , -197515     , array([ 0.0378146  ,  0.0641994  ,  0.00776197 ,  18.4692    ])
136     , -197515     , array([ 0.0378146  ,  0.0641996  ,  0.00776197 ,  18.4692    ])
140     , -197523     , array([ 0.0378147  ,  0.0641357  ,  0.00776197 ,  18.4692    ])
144     , -197523     , array([ 0.0378147  ,  0.0641357  ,  0.00776197 ,  18.4877    ])
148     , -197025     , array([ 0.044084   ,  0.0831019  ,  0.00763129 ,  19.739     ])
160     , -197025     , array([ 0.044084   ,  0.0831019  ,  0.00763129 ,  19.739     ])
172     , -197025     , array([ 0.044084   ,  0.0831019  ,  0.00763129 ,  19.739     ])
184     , -197025     , array([ 0.044084   ,  0.0831019  ,  0.00763129 ,  19.739     ])
188     , -196733     , array([ 0.044031   ,  0.0828582  ,  0.00759954 ,  27.1559    ])
192     , -196733     , array([ 0.044031   ,  0.0828582  ,  0.00759954 ,  27.1831    ])
196     , -196188     , array([ 0.043652   ,  0.0823727  ,  0.00744946 ,  29.3102    ])
208     , -196188     , array([ 0.043652   ,  0.0823727  ,  0.00744946 ,  29.3102    ])
220     , -196188     , array([ 0.043652   ,  0.0823727  ,  0.00744946 ,  29.3102    ])
232     , -196188     , array([ 0.043652   ,  0.0823727  ,  0.00744946 ,  29.3102    ])
244     , -196188     , array([ 0.043652   ,  0.0823727  ,  0.00744946 ,  29.3102    ])
256     , -196188     , array([ 0.043652   ,  0.0823727  ,  0.00744946 ,  29.3102    ])
268     , -196188     , array([ 0.043652   ,  0.0823727  ,  0.00744946 ,  29.3102    ])
280     , -196188     , array([ 0.043652   ,  0.0823727  ,  0.00744946 ,  29.3102    ])
284     , -196060     , array([ 0.0435697  ,  0.082167   ,  0.0074171  ,  29.8026    ])
288     , -196059     , array([ 0.0435697  ,  0.082167   ,  0.0074171  ,  29.8324    ])
292     , -196030     , array([ 0.0435417  ,  0.0822073  ,  0.00740614 ,  29.9718    ])
296     , -196060     , array([ 0.0435697  ,  0.082167   ,  0.0074171  ,  29.8026    ])
300     , -196059     , array([ 0.0435697  ,  0.082167   ,  0.0074171  ,  29.8324    ])
304     , -196043     , array([ 0.043551   ,  0.0822212  ,  0.00740979 ,  29.9153    ])
308     , -196024     , array([ 0.0435448  ,  0.0821298  ,  0.00740735 ,  29.953     ])
312     , -196024     , array([ 0.0435448  ,  0.0821298  ,  0.00740735 ,  29.9829    ])
316     , -196031     , array([ 0.0435428  ,  0.0822088  ,  0.00740654 ,  29.9655    ])
320     , -196021     , array([ 0.0435421  ,  0.0821256  ,  0.00740627 ,  29.9697    ])
324     , -196021     , array([ 0.0435421  ,  0.0821256  ,  0.00740627 ,  29.9997    ])
328     , -196030     , array([ 0.0435419  ,  0.0822074  ,  0.00740618 ,  29.9711    ])
332     , -196021     , array([ 0.0435418  ,  0.0821251  ,  0.00740615 ,  29.9717    ])
340     , -196030     , array([ 0.0435417  ,  0.0822073  ,  0.00740614 ,  29.9718    ])
344     , -196021     , array([ 0.0435417  ,  0.0821251  ,  0.00740614 ,  29.9718    ])
352     , -196030     , array([ 0.0435417  ,  0.0822073  ,  0.00740614 ,  29.9718    ])
356     , -196021     , array([ 0.0435417  ,  0.0821251  ,  0.00740614 ,  29.9718    ])
364     , -196030     , array([ 0.0435417  ,  0.0822073  ,  0.00740614 ,  29.9718    ])
368     , -196021     , array([ 0.0435417  ,  0.0821251  ,  0.00740614 ,  29.9718    ])
376     , -196030     , array([ 0.0435417  ,  0.0822073  ,  0.00740614 ,  29.9718    ])
380     , -196021     , array([ 0.0435417  ,  0.0821251  ,  0.00740614 ,  29.9718    ])
388     , -196030     , array([ 0.0435417  ,  0.0822073  ,  0.00740614 ,  29.9718    ])
392     , -196021     , array([ 0.0435417  ,  0.0821251  ,  0.00740614 ,  29.9718    ])
400     , -196030     , array([ 0.0435417  ,  0.0822073  ,  0.00740614 ,  29.9718    ])
404     , -196021     , array([ 0.0435417  ,  0.0821251  ,  0.00740614 ,  29.9718    ])
412     , -196030     , array([ 0.0435417  ,  0.0822073  ,  0.00740614 ,  29.9718    ])
416     , -196021     , array([ 0.0435417  ,  0.0821251  ,  0.00740614 ,  29.9718    ])
424     , -196030     , array([ 0.0435417  ,  0.0822073  ,  0.00740614 ,  29.9718    ])
428     , -196021     , array([ 0.0435417  ,  0.0821251  ,  0.00740614 ,  29.9718    ])
436     , -196030     , array([ 0.0435417  ,  0.0822073  ,  0.00740614 ,  29.9718    ])
440     , -196021     , array([ 0.0435417  ,  0.0821251  ,  0.00740614 ,  29.9718    ])
448     , -196188     , array([ 0.043652   ,  0.0823727  ,  0.00744946 ,  29.3102    ])
456     , -196052     , array([ 0.0435577  ,  0.0822313  ,  0.00741241 ,  29.8749    ])
464     , -196035     , array([ 0.0435459  ,  0.0822136  ,  0.00740779 ,  29.9463    ])
468     , -196019     , array([ 0.0435401  ,  0.0821226  ,  0.00740548 ,  29.982     ])
476     , -196019     , array([ 0.0435403  ,  0.082123   ,  0.00740558 ,  29.9805    ])
Finshed optimization **************************************************
Writing out parameters **************************************************
Writing out SFS **************************************************
Making plots **************************************************
carrying out inference 50 for model 2D.5epoch.fixedN1N3.nomig for pop MN-IR
Beginning optimization ************************************************
4       , -571261     , array([ 0.0194916  ,  0.099      ,  0.0199512  ,  15.3384    ])
8       , -228075     , array([ 0.0436367  ,  0.0575123  ,  0.0151394  ,  15.3071    ])
12      , -228075     , array([ 0.0436367  ,  0.0575123  ,  0.0151394  ,  15.3224    ])
20      , -227274     , array([ 0.0435527  ,  0.0576507  ,  0.0149133  ,  15.3084    ])
24      , -227274     , array([ 0.0435527  ,  0.0576507  ,  0.0149133  ,  15.3237    ])
28      , -226461     , array([ 0.0434687  ,  0.0578475  ,  0.0146903  ,  15.3098    ])
40      , -226259     , array([ 0.0434477  ,  0.0578825  ,  0.0146349  ,  15.3101    ])
44      , -226065     , array([ 0.0434267  ,  0.0578595  ,  0.0145798  ,  15.3105    ])
48      , -226065     , array([ 0.0434267  ,  0.0578595  ,  0.0145798  ,  15.3258    ])
52      , -879514     , array([ 0.0286417  ,  0.0973547  ,  0.000565362,  15.6033    ])
56      , -200937     , array([ 0.0404981  ,  0.0631263  ,  0.00845248 ,  15.3592    ])
60      , -200936     , array([ 0.0404981  ,  0.0631263  ,  0.00845248 ,  15.3746    ])
68      , -200932     , array([ 0.0405134  ,  0.0631626  ,  0.00845202 ,  15.361     ])
72      , -200931     , array([ 0.0405134  ,  0.0631626  ,  0.00845202 ,  15.3764    ])
76      , -200910     , array([ 0.0405288  ,  0.0632621  ,  0.00845156 ,  15.3629    ])
88      , -200909     , array([ 0.0405326  ,  0.0632712  ,  0.00845145 ,  15.3633    ])
92      , -200924     , array([ 0.0405365  ,  0.063217   ,  0.00845133 ,  15.3638    ])
96      , -200924     , array([ 0.0405365  ,  0.063217   ,  0.00845133 ,  15.3791    ])
104     , -200924     , array([ 0.0405374  ,  0.0632193  ,  0.0084513  ,  15.3639    ])
108     , -200923     , array([ 0.0405374  ,  0.0632193  ,  0.0084513  ,  15.3793    ])
112     , -200907     , array([ 0.0405384  ,  0.0632848  ,  0.00845127 ,  15.364     ])
124     , -200907     , array([ 0.0405386  ,  0.0632854  ,  0.00845127 ,  15.364     ])
128     , -200924     , array([ 0.0405389  ,  0.0632227  ,  0.00845126 ,  15.3641    ])
132     , -200923     , array([ 0.0405389  ,  0.0632227  ,  0.00845126 ,  15.3794    ])
136     , -198565     , array([ 0.0525003  ,  0.0936689  ,  0.00814271 ,  16.6698    ])
148     , -198565     , array([ 0.0525003  ,  0.0936689  ,  0.00814271 ,  16.6704    ])
160     , -198565     , array([ 0.0525003  ,  0.0936689  ,  0.00814271 ,  16.6706    ])
172     , -198565     , array([ 0.0525003  ,  0.0936689  ,  0.00814271 ,  16.6707    ])
184     , -198565     , array([ 0.0525003  ,  0.0936689  ,  0.00814271 ,  16.6707    ])
196     , -198565     , array([ 0.0525003  ,  0.0936689  ,  0.00814271 ,  16.6707    ])
200     , -198066     , array([ 0.0522982  ,  0.0931216  ,  0.00807451 ,  26.6738    ])
204     , -198066     , array([ 0.0522982  ,  0.0931216  ,  0.00807451 ,  26.7005    ])
208     , -197128     , array([ 0.0517862  ,  0.092921   ,  0.00782279 ,  28.8272    ])
220     , -197127     , array([ 0.0517862  ,  0.092921   ,  0.00782278 ,  28.8272    ])
232     , -197127     , array([ 0.0517862  ,  0.092921   ,  0.00782278 ,  28.8273    ])
244     , -197127     , array([ 0.0517862  ,  0.092921   ,  0.00782278 ,  28.8273    ])
256     , -197127     , array([ 0.0517862  ,  0.092921   ,  0.00782278 ,  28.8273    ])
268     , -197127     , array([ 0.0517862  ,  0.092921   ,  0.00782278 ,  28.8273    ])
272     , -196678     , array([ 0.0515317  ,  0.0926814  ,  0.00769965 ,  29.9705    ])
280     , -197127     , array([ 0.0517862  ,  0.092921   ,  0.00782278 ,  28.8273    ])
284     , -196827     , array([ 0.0516164  ,  0.0927303  ,  0.00774048 ,  29.5845    ])
288     , -196826     , array([ 0.0516164  ,  0.0927303  ,  0.00774048 ,  29.6141    ])
296     , -196827     , array([ 0.0516164  ,  0.0927303  ,  0.00774047 ,  29.5845    ])
300     , -196826     , array([ 0.0516164  ,  0.0927303  ,  0.00774047 ,  29.6141    ])
308     , -196827     , array([ 0.0516164  ,  0.0927303  ,  0.00774047 ,  29.5845    ])
312     , -196826     , array([ 0.0516164  ,  0.0927303  ,  0.00774047 ,  29.6141    ])
320     , -196827     , array([ 0.0516164  ,  0.0927303  ,  0.00774047 ,  29.5845    ])
324     , -196826     , array([ 0.0516164  ,  0.0927303  ,  0.00774047 ,  29.6141    ])
332     , -196827     , array([ 0.0516164  ,  0.0927303  ,  0.00774047 ,  29.5845    ])
336     , -196826     , array([ 0.0516164  ,  0.0927303  ,  0.00774047 ,  29.6141    ])
344     , -196827     , array([ 0.0516164  ,  0.0927303  ,  0.00774047 ,  29.5846    ])
348     , -196826     , array([ 0.0516164  ,  0.0927303  ,  0.00774047 ,  29.6141    ])
356     , -196827     , array([ 0.0516164  ,  0.0927303  ,  0.00774047 ,  29.5846    ])
360     , -196826     , array([ 0.0516164  ,  0.0927303  ,  0.00774047 ,  29.6142    ])
368     , -196827     , array([ 0.0516164  ,  0.0927303  ,  0.00774047 ,  29.5846    ])
372     , -196826     , array([ 0.0516164  ,  0.0927303  ,  0.00774047 ,  29.6142    ])
380     , -196827     , array([ 0.0516164  ,  0.0927303  ,  0.00774047 ,  29.5846    ])
384     , -196826     , array([ 0.0516164  ,  0.0927303  ,  0.00774047 ,  29.6142    ])
392     , -196827     , array([ 0.0516164  ,  0.0927303  ,  0.00774047 ,  29.5846    ])
396     , -196826     , array([ 0.0516164  ,  0.0927303  ,  0.00774047 ,  29.6142    ])
400     , -196827     , array([ 0.0516164  ,  0.0928231  ,  0.00774047 ,  29.5846    ])
404     , -196782     , array([ 0.0516019  ,  0.0927451  ,  0.00772851 ,  29.7988    ])
408     , -196781     , array([ 0.0516019  ,  0.0927451  ,  0.00772851 ,  29.8286    ])
412     , -196752     , array([ 0.0515923  ,  0.0928477  ,  0.00772062 ,  29.941     ])
416     , -196742     , array([ 0.051589   ,  0.0927583  ,  0.00771794 ,  29.9895    ])
424     , -196752     , array([ 0.0515923  ,  0.0928477  ,  0.00772062 ,  29.941     ])
428     , -196745     , array([ 0.0515901  ,  0.0927572  ,  0.00771884 ,  29.9733    ])
436     , -196743     , array([ 0.0515893  ,  0.0928508  ,  0.00771813 ,  29.9861    ])
440     , -196742     , array([ 0.0515891  ,  0.0927582  ,  0.00771798 ,  29.9888    ])
448     , -196742     , array([ 0.051589   ,  0.0928511  ,  0.00771795 ,  29.9894    ])
452     , -196742     , array([ 0.051589   ,  0.0927583  ,  0.00771795 ,  29.9895    ])
460     , -196742     , array([ 0.051589   ,  0.0928511  ,  0.00771794 ,  29.9895    ])
464     , -196742     , array([ 0.051589   ,  0.0927583  ,  0.00771794 ,  29.9895    ])
472     , -196742     , array([ 0.051589   ,  0.0928511  ,  0.00771794 ,  29.9895    ])
476     , -196742     , array([ 0.051589   ,  0.0927583  ,  0.00771794 ,  29.9895    ])
484     , -196742     , array([ 0.051589   ,  0.0928511  ,  0.00771794 ,  29.9895    ])
488     , -196742     , array([ 0.051589   ,  0.0927583  ,  0.00771794 ,  29.9895    ])
496     , -196742     , array([ 0.051589   ,  0.0928511  ,  0.00771794 ,  29.9895    ])
500     , -196742     , array([ 0.051589   ,  0.0927583  ,  0.00771794 ,  29.9895    ])
508     , -196742     , array([ 0.051589   ,  0.0928511  ,  0.00771794 ,  29.9895    ])
512     , -196742     , array([ 0.051589   ,  0.0927583  ,  0.00771794 ,  29.9895    ])
520     , -196742     , array([ 0.051589   ,  0.0928511  ,  0.00771794 ,  29.9895    ])
524     , -196742     , array([ 0.051589   ,  0.0927583  ,  0.00771794 ,  29.9895    ])
532     , -196742     , array([ 0.051589   ,  0.0928511  ,  0.00771794 ,  29.9895    ])
536     , -196742     , array([ 0.051589   ,  0.0927583  ,  0.00771794 ,  29.9895    ])
544     , -196742     , array([ 0.051589   ,  0.0928511  ,  0.00771794 ,  29.9895    ])
548     , -196742     , array([ 0.051589   ,  0.0927583  ,  0.00771794 ,  29.9895    ])
556     , -196742     , array([ 0.051589   ,  0.0928511  ,  0.00771794 ,  29.9895    ])
560     , -196742     , array([ 0.051589   ,  0.0927583  ,  0.00771794 ,  29.9895    ])
568     , -196742     , array([ 0.051589   ,  0.0928511  ,  0.00771794 ,  29.9895    ])
572     , -196742     , array([ 0.051589   ,  0.0927583  ,  0.00771794 ,  29.9895    ])
584     , -196748     , array([ 0.0516428  ,  0.0927561  ,  0.00771972 ,  29.9573    ])
592     , -196744     , array([ 0.0515896  ,  0.0927577  ,  0.00771843 ,  29.9808    ])
Finshed optimization **************************************************
Writing out parameters **************************************************
Writing out SFS **************************************************
Making plots **************************************************
concatenating results
